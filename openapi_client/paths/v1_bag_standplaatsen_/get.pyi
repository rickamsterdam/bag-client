# coding: utf-8

"""


    Generated by: https://openapi-generator.tech
"""

from dataclasses import dataclass
import typing_extensions
import urllib3
from urllib3._collections import HTTPHeaderDict

from openapi_client import api_client, exceptions
from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401

from openapi_client.model.paginated_bagstandplaatsen_list import PaginatedBagstandplaatsenList

# Query params
CountSchema = schemas.BoolSchema
ExpandSchema = schemas.BoolSchema
ExpandScopeSchema = schemas.StrSchema
FieldsSchema = schemas.StrSchema


class FormatSchema(
    schemas.EnumBase,
    schemas.StrSchema
):
    
    @schemas.classproperty
    def JSON(cls):
        return cls("json")
    
    @schemas.classproperty
    def CSV(cls):
        return cls("csv")
    
    @schemas.classproperty
    def GEOJSON(cls):
        return cls("geojson")
PageSizeSchema = schemas.IntSchema
SortSchema = schemas.StrSchema
BagprocesCodeSchema = schemas.IntSchema
BagprocesCodeGtSchema = schemas.IntSchema
BagprocesCodeGteSchema = schemas.IntSchema


class BagprocesCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BagprocesCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BagprocesCodeIsnullSchema = schemas.BoolSchema
BagprocesCodeLtSchema = schemas.IntSchema
BagprocesCodeLteSchema = schemas.IntSchema


class BagprocesCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BagprocesCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BagprocesOmschrijvingSchema = schemas.StrSchema


class BagprocesOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BagprocesOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BagprocesOmschrijvingIsemptySchema = schemas.BoolSchema
BagprocesOmschrijvingIsnullSchema = schemas.BoolSchema
BagprocesOmschrijvingLikeSchema = schemas.StrSchema


class BagprocesOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BagprocesOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BeginGeldigheidSchema = schemas.DateTimeSchema
BeginGeldigheidGtSchema = schemas.DateTimeSchema
BeginGeldigheidGteSchema = schemas.DateTimeSchema


class BeginGeldigheidInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BeginGeldigheidInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BeginGeldigheidIsnullSchema = schemas.BoolSchema
BeginGeldigheidLtSchema = schemas.DateTimeSchema
BeginGeldigheidLteSchema = schemas.DateTimeSchema


class BeginGeldigheidNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BeginGeldigheidNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
DocumentdatumSchema = schemas.DateSchema
DocumentdatumGtSchema = schemas.DateSchema
DocumentdatumGteSchema = schemas.DateSchema


class DocumentdatumInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, date, ]], typing.List[typing.Union[MetaOapg.items, str, date, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DocumentdatumInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
DocumentdatumIsnullSchema = schemas.BoolSchema
DocumentdatumLtSchema = schemas.DateSchema
DocumentdatumLteSchema = schemas.DateSchema


class DocumentdatumNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, date, ]], typing.List[typing.Union[MetaOapg.items, str, date, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DocumentdatumNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
DocumentnummerSchema = schemas.StrSchema


class DocumentnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DocumentnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
DocumentnummerIsemptySchema = schemas.BoolSchema
DocumentnummerIsnullSchema = schemas.BoolSchema
DocumentnummerLikeSchema = schemas.StrSchema


class DocumentnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DocumentnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
EindGeldigheidSchema = schemas.DateTimeSchema
EindGeldigheidGtSchema = schemas.DateTimeSchema
EindGeldigheidGteSchema = schemas.DateTimeSchema


class EindGeldigheidInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'EindGeldigheidInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
EindGeldigheidIsnullSchema = schemas.BoolSchema
EindGeldigheidLtSchema = schemas.DateTimeSchema
EindGeldigheidLteSchema = schemas.DateTimeSchema


class EindGeldigheidNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'EindGeldigheidNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelOmschrijvingSchema = schemas.StrSchema


class GebruiksdoelOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelOmschrijvingIsemptySchema = schemas.BoolSchema
GebruiksdoelOmschrijvingIsnullSchema = schemas.BoolSchema
GebruiksdoelOmschrijvingLikeSchema = schemas.StrSchema


class GebruiksdoelOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GeconstateerdSchema = schemas.BoolSchema
GeconstateerdIsnullSchema = schemas.BoolSchema
GeldigOpSchema = schemas.DateTimeSchema
GeldigOpGtSchema = schemas.DateTimeSchema
GeldigOpGteSchema = schemas.DateTimeSchema
GeldigOpInSchema = schemas.DateTimeSchema
GeldigOpIsnullSchema = schemas.DateTimeSchema
GeldigOpLtSchema = schemas.DateTimeSchema
GeldigOpLteSchema = schemas.DateTimeSchema
GeldigOpNotSchema = schemas.DateTimeSchema
GeometrieSchema = schemas.StrSchema
GeometrieContainsSchema = schemas.StrSchema
GeometrieIsnullSchema = schemas.StrSchema
GeometrieNotSchema = schemas.StrSchema
HeeftDossierDossierSchema = schemas.StrSchema


class HeeftDossierDossierInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftDossierDossierInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftDossierDossierIsemptySchema = schemas.BoolSchema
HeeftDossierDossierIsnullSchema = schemas.BoolSchema
HeeftDossierDossierLikeSchema = schemas.StrSchema


class HeeftDossierDossierNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftDossierDossierNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftHoofdadresIdentificatieSchema = schemas.StrSchema


class HeeftHoofdadresIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftHoofdadresIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftHoofdadresIdentificatieIsemptySchema = schemas.BoolSchema
HeeftHoofdadresIdentificatieIsnullSchema = schemas.BoolSchema
HeeftHoofdadresIdentificatieLikeSchema = schemas.StrSchema


class HeeftHoofdadresIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftHoofdadresIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftHoofdadresVolgnummerSchema = schemas.IntSchema
HeeftHoofdadresVolgnummerGtSchema = schemas.IntSchema
HeeftHoofdadresVolgnummerGteSchema = schemas.IntSchema


class HeeftHoofdadresVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftHoofdadresVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftHoofdadresVolgnummerIsnullSchema = schemas.BoolSchema
HeeftHoofdadresVolgnummerLtSchema = schemas.IntSchema
HeeftHoofdadresVolgnummerLteSchema = schemas.IntSchema


class HeeftHoofdadresVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftHoofdadresVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftNevenadresIdentificatieSchema = schemas.StrSchema


class HeeftNevenadresIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftNevenadresIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftNevenadresIdentificatieIsemptySchema = schemas.BoolSchema
HeeftNevenadresIdentificatieIsnullSchema = schemas.BoolSchema
HeeftNevenadresIdentificatieLikeSchema = schemas.StrSchema


class HeeftNevenadresIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftNevenadresIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftNevenadresVolgnummerSchema = schemas.IntSchema
HeeftNevenadresVolgnummerGtSchema = schemas.IntSchema
HeeftNevenadresVolgnummerGteSchema = schemas.IntSchema


class HeeftNevenadresVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftNevenadresVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftNevenadresVolgnummerIsnullSchema = schemas.BoolSchema
HeeftNevenadresVolgnummerLtSchema = schemas.IntSchema
HeeftNevenadresVolgnummerLteSchema = schemas.IntSchema


class HeeftNevenadresVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftNevenadresVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftOnderzoekenIdentificatieSchema = schemas.StrSchema


class HeeftOnderzoekenIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftOnderzoekenIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftOnderzoekenIdentificatieIsemptySchema = schemas.BoolSchema
HeeftOnderzoekenIdentificatieIsnullSchema = schemas.BoolSchema
HeeftOnderzoekenIdentificatieLikeSchema = schemas.StrSchema


class HeeftOnderzoekenIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftOnderzoekenIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftOnderzoekenVolgnummerSchema = schemas.IntSchema
HeeftOnderzoekenVolgnummerGtSchema = schemas.IntSchema
HeeftOnderzoekenVolgnummerGteSchema = schemas.IntSchema


class HeeftOnderzoekenVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftOnderzoekenVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftOnderzoekenVolgnummerIsnullSchema = schemas.BoolSchema
HeeftOnderzoekenVolgnummerLtSchema = schemas.IntSchema
HeeftOnderzoekenVolgnummerLteSchema = schemas.IntSchema


class HeeftOnderzoekenVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftOnderzoekenVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IdSchema = schemas.StrSchema


class IdInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IdInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IdIsemptySchema = schemas.BoolSchema
IdIsnullSchema = schemas.BoolSchema
IdLikeSchema = schemas.StrSchema


class IdNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IdNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IdentificatieSchema = schemas.StrSchema


class IdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IdentificatieIsemptySchema = schemas.BoolSchema
IdentificatieIsnullSchema = schemas.BoolSchema
IdentificatieLikeSchema = schemas.StrSchema


class IdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInBuurtIdentificatieSchema = schemas.StrSchema


class LigtInBuurtIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInBuurtIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInBuurtIdentificatieIsemptySchema = schemas.BoolSchema
LigtInBuurtIdentificatieIsnullSchema = schemas.BoolSchema
LigtInBuurtIdentificatieLikeSchema = schemas.StrSchema


class LigtInBuurtIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInBuurtIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInBuurtVolgnummerSchema = schemas.IntSchema
LigtInBuurtVolgnummerGtSchema = schemas.IntSchema
LigtInBuurtVolgnummerGteSchema = schemas.IntSchema


class LigtInBuurtVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInBuurtVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInBuurtVolgnummerIsnullSchema = schemas.BoolSchema
LigtInBuurtVolgnummerLtSchema = schemas.IntSchema
LigtInBuurtVolgnummerLteSchema = schemas.IntSchema


class LigtInBuurtVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInBuurtVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
PageSchema = schemas.IntSchema
RegistratiedatumSchema = schemas.DateTimeSchema
RegistratiedatumGtSchema = schemas.DateTimeSchema
RegistratiedatumGteSchema = schemas.DateTimeSchema


class RegistratiedatumInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RegistratiedatumInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RegistratiedatumIsnullSchema = schemas.BoolSchema
RegistratiedatumLtSchema = schemas.DateTimeSchema
RegistratiedatumLteSchema = schemas.DateTimeSchema


class RegistratiedatumNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RegistratiedatumNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
StatusCodeSchema = schemas.IntSchema
StatusCodeGtSchema = schemas.IntSchema
StatusCodeGteSchema = schemas.IntSchema


class StatusCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'StatusCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
StatusCodeIsnullSchema = schemas.BoolSchema
StatusCodeLtSchema = schemas.IntSchema
StatusCodeLteSchema = schemas.IntSchema


class StatusCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'StatusCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
StatusOmschrijvingSchema = schemas.StrSchema


class StatusOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'StatusOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
StatusOmschrijvingIsemptySchema = schemas.BoolSchema
StatusOmschrijvingIsnullSchema = schemas.BoolSchema
StatusOmschrijvingLikeSchema = schemas.StrSchema


class StatusOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'StatusOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
VolgnummerSchema = schemas.IntSchema
VolgnummerGtSchema = schemas.IntSchema
VolgnummerGteSchema = schemas.IntSchema


class VolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'VolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
VolgnummerIsnullSchema = schemas.BoolSchema
VolgnummerLtSchema = schemas.IntSchema
VolgnummerLteSchema = schemas.IntSchema


class VolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'VolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RequestRequiredQueryParams = typing_extensions.TypedDict(
    'RequestRequiredQueryParams',
    {
    }
)
RequestOptionalQueryParams = typing_extensions.TypedDict(
    'RequestOptionalQueryParams',
    {
        '_count': typing.Union[CountSchema, bool, ],
        '_expand': typing.Union[ExpandSchema, bool, ],
        '_expandScope': typing.Union[ExpandScopeSchema, str, ],
        '_fields': typing.Union[FieldsSchema, str, ],
        '_format': typing.Union[FormatSchema, str, ],
        '_pageSize': typing.Union[PageSizeSchema, decimal.Decimal, int, ],
        '_sort': typing.Union[SortSchema, str, ],
        'bagprocesCode': typing.Union[BagprocesCodeSchema, decimal.Decimal, int, ],
        'bagprocesCode[gt]': typing.Union[BagprocesCodeGtSchema, decimal.Decimal, int, ],
        'bagprocesCode[gte]': typing.Union[BagprocesCodeGteSchema, decimal.Decimal, int, ],
        'bagprocesCode[in]': typing.Union[BagprocesCodeInSchema, list, tuple, ],
        'bagprocesCode[isnull]': typing.Union[BagprocesCodeIsnullSchema, bool, ],
        'bagprocesCode[lt]': typing.Union[BagprocesCodeLtSchema, decimal.Decimal, int, ],
        'bagprocesCode[lte]': typing.Union[BagprocesCodeLteSchema, decimal.Decimal, int, ],
        'bagprocesCode[not]': typing.Union[BagprocesCodeNotSchema, list, tuple, ],
        'bagprocesOmschrijving': typing.Union[BagprocesOmschrijvingSchema, str, ],
        'bagprocesOmschrijving[in]': typing.Union[BagprocesOmschrijvingInSchema, list, tuple, ],
        'bagprocesOmschrijving[isempty]': typing.Union[BagprocesOmschrijvingIsemptySchema, bool, ],
        'bagprocesOmschrijving[isnull]': typing.Union[BagprocesOmschrijvingIsnullSchema, bool, ],
        'bagprocesOmschrijving[like]': typing.Union[BagprocesOmschrijvingLikeSchema, str, ],
        'bagprocesOmschrijving[not]': typing.Union[BagprocesOmschrijvingNotSchema, list, tuple, ],
        'beginGeldigheid': typing.Union[BeginGeldigheidSchema, str, datetime, ],
        'beginGeldigheid[gt]': typing.Union[BeginGeldigheidGtSchema, str, datetime, ],
        'beginGeldigheid[gte]': typing.Union[BeginGeldigheidGteSchema, str, datetime, ],
        'beginGeldigheid[in]': typing.Union[BeginGeldigheidInSchema, list, tuple, ],
        'beginGeldigheid[isnull]': typing.Union[BeginGeldigheidIsnullSchema, bool, ],
        'beginGeldigheid[lt]': typing.Union[BeginGeldigheidLtSchema, str, datetime, ],
        'beginGeldigheid[lte]': typing.Union[BeginGeldigheidLteSchema, str, datetime, ],
        'beginGeldigheid[not]': typing.Union[BeginGeldigheidNotSchema, list, tuple, ],
        'documentdatum': typing.Union[DocumentdatumSchema, str, date, ],
        'documentdatum[gt]': typing.Union[DocumentdatumGtSchema, str, date, ],
        'documentdatum[gte]': typing.Union[DocumentdatumGteSchema, str, date, ],
        'documentdatum[in]': typing.Union[DocumentdatumInSchema, list, tuple, ],
        'documentdatum[isnull]': typing.Union[DocumentdatumIsnullSchema, bool, ],
        'documentdatum[lt]': typing.Union[DocumentdatumLtSchema, str, date, ],
        'documentdatum[lte]': typing.Union[DocumentdatumLteSchema, str, date, ],
        'documentdatum[not]': typing.Union[DocumentdatumNotSchema, list, tuple, ],
        'documentnummer': typing.Union[DocumentnummerSchema, str, ],
        'documentnummer[in]': typing.Union[DocumentnummerInSchema, list, tuple, ],
        'documentnummer[isempty]': typing.Union[DocumentnummerIsemptySchema, bool, ],
        'documentnummer[isnull]': typing.Union[DocumentnummerIsnullSchema, bool, ],
        'documentnummer[like]': typing.Union[DocumentnummerLikeSchema, str, ],
        'documentnummer[not]': typing.Union[DocumentnummerNotSchema, list, tuple, ],
        'eindGeldigheid': typing.Union[EindGeldigheidSchema, str, datetime, ],
        'eindGeldigheid[gt]': typing.Union[EindGeldigheidGtSchema, str, datetime, ],
        'eindGeldigheid[gte]': typing.Union[EindGeldigheidGteSchema, str, datetime, ],
        'eindGeldigheid[in]': typing.Union[EindGeldigheidInSchema, list, tuple, ],
        'eindGeldigheid[isnull]': typing.Union[EindGeldigheidIsnullSchema, bool, ],
        'eindGeldigheid[lt]': typing.Union[EindGeldigheidLtSchema, str, datetime, ],
        'eindGeldigheid[lte]': typing.Union[EindGeldigheidLteSchema, str, datetime, ],
        'eindGeldigheid[not]': typing.Union[EindGeldigheidNotSchema, list, tuple, ],
        'gebruiksdoel.omschrijving': typing.Union[GebruiksdoelOmschrijvingSchema, str, ],
        'gebruiksdoel.omschrijving[in]': typing.Union[GebruiksdoelOmschrijvingInSchema, list, tuple, ],
        'gebruiksdoel.omschrijving[isempty]': typing.Union[GebruiksdoelOmschrijvingIsemptySchema, bool, ],
        'gebruiksdoel.omschrijving[isnull]': typing.Union[GebruiksdoelOmschrijvingIsnullSchema, bool, ],
        'gebruiksdoel.omschrijving[like]': typing.Union[GebruiksdoelOmschrijvingLikeSchema, str, ],
        'gebruiksdoel.omschrijving[not]': typing.Union[GebruiksdoelOmschrijvingNotSchema, list, tuple, ],
        'geconstateerd': typing.Union[GeconstateerdSchema, bool, ],
        'geconstateerd[isnull]': typing.Union[GeconstateerdIsnullSchema, bool, ],
        'geldigOp': typing.Union[GeldigOpSchema, str, datetime, ],
        'geldigOp[gt]': typing.Union[GeldigOpGtSchema, str, datetime, ],
        'geldigOp[gte]': typing.Union[GeldigOpGteSchema, str, datetime, ],
        'geldigOp[in]': typing.Union[GeldigOpInSchema, str, datetime, ],
        'geldigOp[isnull]': typing.Union[GeldigOpIsnullSchema, str, datetime, ],
        'geldigOp[lt]': typing.Union[GeldigOpLtSchema, str, datetime, ],
        'geldigOp[lte]': typing.Union[GeldigOpLteSchema, str, datetime, ],
        'geldigOp[not]': typing.Union[GeldigOpNotSchema, str, datetime, ],
        'geometrie': typing.Union[GeometrieSchema, str, ],
        'geometrie[contains]': typing.Union[GeometrieContainsSchema, str, ],
        'geometrie[isnull]': typing.Union[GeometrieIsnullSchema, str, ],
        'geometrie[not]': typing.Union[GeometrieNotSchema, str, ],
        'heeftDossier.dossier': typing.Union[HeeftDossierDossierSchema, str, ],
        'heeftDossier.dossier[in]': typing.Union[HeeftDossierDossierInSchema, list, tuple, ],
        'heeftDossier.dossier[isempty]': typing.Union[HeeftDossierDossierIsemptySchema, bool, ],
        'heeftDossier.dossier[isnull]': typing.Union[HeeftDossierDossierIsnullSchema, bool, ],
        'heeftDossier.dossier[like]': typing.Union[HeeftDossierDossierLikeSchema, str, ],
        'heeftDossier.dossier[not]': typing.Union[HeeftDossierDossierNotSchema, list, tuple, ],
        'heeftHoofdadres.identificatie': typing.Union[HeeftHoofdadresIdentificatieSchema, str, ],
        'heeftHoofdadres.identificatie[in]': typing.Union[HeeftHoofdadresIdentificatieInSchema, list, tuple, ],
        'heeftHoofdadres.identificatie[isempty]': typing.Union[HeeftHoofdadresIdentificatieIsemptySchema, bool, ],
        'heeftHoofdadres.identificatie[isnull]': typing.Union[HeeftHoofdadresIdentificatieIsnullSchema, bool, ],
        'heeftHoofdadres.identificatie[like]': typing.Union[HeeftHoofdadresIdentificatieLikeSchema, str, ],
        'heeftHoofdadres.identificatie[not]': typing.Union[HeeftHoofdadresIdentificatieNotSchema, list, tuple, ],
        'heeftHoofdadres.volgnummer': typing.Union[HeeftHoofdadresVolgnummerSchema, decimal.Decimal, int, ],
        'heeftHoofdadres.volgnummer[gt]': typing.Union[HeeftHoofdadresVolgnummerGtSchema, decimal.Decimal, int, ],
        'heeftHoofdadres.volgnummer[gte]': typing.Union[HeeftHoofdadresVolgnummerGteSchema, decimal.Decimal, int, ],
        'heeftHoofdadres.volgnummer[in]': typing.Union[HeeftHoofdadresVolgnummerInSchema, list, tuple, ],
        'heeftHoofdadres.volgnummer[isnull]': typing.Union[HeeftHoofdadresVolgnummerIsnullSchema, bool, ],
        'heeftHoofdadres.volgnummer[lt]': typing.Union[HeeftHoofdadresVolgnummerLtSchema, decimal.Decimal, int, ],
        'heeftHoofdadres.volgnummer[lte]': typing.Union[HeeftHoofdadresVolgnummerLteSchema, decimal.Decimal, int, ],
        'heeftHoofdadres.volgnummer[not]': typing.Union[HeeftHoofdadresVolgnummerNotSchema, list, tuple, ],
        'heeftNevenadres.identificatie': typing.Union[HeeftNevenadresIdentificatieSchema, str, ],
        'heeftNevenadres.identificatie[in]': typing.Union[HeeftNevenadresIdentificatieInSchema, list, tuple, ],
        'heeftNevenadres.identificatie[isempty]': typing.Union[HeeftNevenadresIdentificatieIsemptySchema, bool, ],
        'heeftNevenadres.identificatie[isnull]': typing.Union[HeeftNevenadresIdentificatieIsnullSchema, bool, ],
        'heeftNevenadres.identificatie[like]': typing.Union[HeeftNevenadresIdentificatieLikeSchema, str, ],
        'heeftNevenadres.identificatie[not]': typing.Union[HeeftNevenadresIdentificatieNotSchema, list, tuple, ],
        'heeftNevenadres.volgnummer': typing.Union[HeeftNevenadresVolgnummerSchema, decimal.Decimal, int, ],
        'heeftNevenadres.volgnummer[gt]': typing.Union[HeeftNevenadresVolgnummerGtSchema, decimal.Decimal, int, ],
        'heeftNevenadres.volgnummer[gte]': typing.Union[HeeftNevenadresVolgnummerGteSchema, decimal.Decimal, int, ],
        'heeftNevenadres.volgnummer[in]': typing.Union[HeeftNevenadresVolgnummerInSchema, list, tuple, ],
        'heeftNevenadres.volgnummer[isnull]': typing.Union[HeeftNevenadresVolgnummerIsnullSchema, bool, ],
        'heeftNevenadres.volgnummer[lt]': typing.Union[HeeftNevenadresVolgnummerLtSchema, decimal.Decimal, int, ],
        'heeftNevenadres.volgnummer[lte]': typing.Union[HeeftNevenadresVolgnummerLteSchema, decimal.Decimal, int, ],
        'heeftNevenadres.volgnummer[not]': typing.Union[HeeftNevenadresVolgnummerNotSchema, list, tuple, ],
        'heeftOnderzoeken.identificatie': typing.Union[HeeftOnderzoekenIdentificatieSchema, str, ],
        'heeftOnderzoeken.identificatie[in]': typing.Union[HeeftOnderzoekenIdentificatieInSchema, list, tuple, ],
        'heeftOnderzoeken.identificatie[isempty]': typing.Union[HeeftOnderzoekenIdentificatieIsemptySchema, bool, ],
        'heeftOnderzoeken.identificatie[isnull]': typing.Union[HeeftOnderzoekenIdentificatieIsnullSchema, bool, ],
        'heeftOnderzoeken.identificatie[like]': typing.Union[HeeftOnderzoekenIdentificatieLikeSchema, str, ],
        'heeftOnderzoeken.identificatie[not]': typing.Union[HeeftOnderzoekenIdentificatieNotSchema, list, tuple, ],
        'heeftOnderzoeken.volgnummer': typing.Union[HeeftOnderzoekenVolgnummerSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[gt]': typing.Union[HeeftOnderzoekenVolgnummerGtSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[gte]': typing.Union[HeeftOnderzoekenVolgnummerGteSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[in]': typing.Union[HeeftOnderzoekenVolgnummerInSchema, list, tuple, ],
        'heeftOnderzoeken.volgnummer[isnull]': typing.Union[HeeftOnderzoekenVolgnummerIsnullSchema, bool, ],
        'heeftOnderzoeken.volgnummer[lt]': typing.Union[HeeftOnderzoekenVolgnummerLtSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[lte]': typing.Union[HeeftOnderzoekenVolgnummerLteSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[not]': typing.Union[HeeftOnderzoekenVolgnummerNotSchema, list, tuple, ],
        'id': typing.Union[IdSchema, str, ],
        'id[in]': typing.Union[IdInSchema, list, tuple, ],
        'id[isempty]': typing.Union[IdIsemptySchema, bool, ],
        'id[isnull]': typing.Union[IdIsnullSchema, bool, ],
        'id[like]': typing.Union[IdLikeSchema, str, ],
        'id[not]': typing.Union[IdNotSchema, list, tuple, ],
        'identificatie': typing.Union[IdentificatieSchema, str, ],
        'identificatie[in]': typing.Union[IdentificatieInSchema, list, tuple, ],
        'identificatie[isempty]': typing.Union[IdentificatieIsemptySchema, bool, ],
        'identificatie[isnull]': typing.Union[IdentificatieIsnullSchema, bool, ],
        'identificatie[like]': typing.Union[IdentificatieLikeSchema, str, ],
        'identificatie[not]': typing.Union[IdentificatieNotSchema, list, tuple, ],
        'ligtInBuurt.identificatie': typing.Union[LigtInBuurtIdentificatieSchema, str, ],
        'ligtInBuurt.identificatie[in]': typing.Union[LigtInBuurtIdentificatieInSchema, list, tuple, ],
        'ligtInBuurt.identificatie[isempty]': typing.Union[LigtInBuurtIdentificatieIsemptySchema, bool, ],
        'ligtInBuurt.identificatie[isnull]': typing.Union[LigtInBuurtIdentificatieIsnullSchema, bool, ],
        'ligtInBuurt.identificatie[like]': typing.Union[LigtInBuurtIdentificatieLikeSchema, str, ],
        'ligtInBuurt.identificatie[not]': typing.Union[LigtInBuurtIdentificatieNotSchema, list, tuple, ],
        'ligtInBuurt.volgnummer': typing.Union[LigtInBuurtVolgnummerSchema, decimal.Decimal, int, ],
        'ligtInBuurt.volgnummer[gt]': typing.Union[LigtInBuurtVolgnummerGtSchema, decimal.Decimal, int, ],
        'ligtInBuurt.volgnummer[gte]': typing.Union[LigtInBuurtVolgnummerGteSchema, decimal.Decimal, int, ],
        'ligtInBuurt.volgnummer[in]': typing.Union[LigtInBuurtVolgnummerInSchema, list, tuple, ],
        'ligtInBuurt.volgnummer[isnull]': typing.Union[LigtInBuurtVolgnummerIsnullSchema, bool, ],
        'ligtInBuurt.volgnummer[lt]': typing.Union[LigtInBuurtVolgnummerLtSchema, decimal.Decimal, int, ],
        'ligtInBuurt.volgnummer[lte]': typing.Union[LigtInBuurtVolgnummerLteSchema, decimal.Decimal, int, ],
        'ligtInBuurt.volgnummer[not]': typing.Union[LigtInBuurtVolgnummerNotSchema, list, tuple, ],
        'page': typing.Union[PageSchema, decimal.Decimal, int, ],
        'registratiedatum': typing.Union[RegistratiedatumSchema, str, datetime, ],
        'registratiedatum[gt]': typing.Union[RegistratiedatumGtSchema, str, datetime, ],
        'registratiedatum[gte]': typing.Union[RegistratiedatumGteSchema, str, datetime, ],
        'registratiedatum[in]': typing.Union[RegistratiedatumInSchema, list, tuple, ],
        'registratiedatum[isnull]': typing.Union[RegistratiedatumIsnullSchema, bool, ],
        'registratiedatum[lt]': typing.Union[RegistratiedatumLtSchema, str, datetime, ],
        'registratiedatum[lte]': typing.Union[RegistratiedatumLteSchema, str, datetime, ],
        'registratiedatum[not]': typing.Union[RegistratiedatumNotSchema, list, tuple, ],
        'statusCode': typing.Union[StatusCodeSchema, decimal.Decimal, int, ],
        'statusCode[gt]': typing.Union[StatusCodeGtSchema, decimal.Decimal, int, ],
        'statusCode[gte]': typing.Union[StatusCodeGteSchema, decimal.Decimal, int, ],
        'statusCode[in]': typing.Union[StatusCodeInSchema, list, tuple, ],
        'statusCode[isnull]': typing.Union[StatusCodeIsnullSchema, bool, ],
        'statusCode[lt]': typing.Union[StatusCodeLtSchema, decimal.Decimal, int, ],
        'statusCode[lte]': typing.Union[StatusCodeLteSchema, decimal.Decimal, int, ],
        'statusCode[not]': typing.Union[StatusCodeNotSchema, list, tuple, ],
        'statusOmschrijving': typing.Union[StatusOmschrijvingSchema, str, ],
        'statusOmschrijving[in]': typing.Union[StatusOmschrijvingInSchema, list, tuple, ],
        'statusOmschrijving[isempty]': typing.Union[StatusOmschrijvingIsemptySchema, bool, ],
        'statusOmschrijving[isnull]': typing.Union[StatusOmschrijvingIsnullSchema, bool, ],
        'statusOmschrijving[like]': typing.Union[StatusOmschrijvingLikeSchema, str, ],
        'statusOmschrijving[not]': typing.Union[StatusOmschrijvingNotSchema, list, tuple, ],
        'volgnummer': typing.Union[VolgnummerSchema, decimal.Decimal, int, ],
        'volgnummer[gt]': typing.Union[VolgnummerGtSchema, decimal.Decimal, int, ],
        'volgnummer[gte]': typing.Union[VolgnummerGteSchema, decimal.Decimal, int, ],
        'volgnummer[in]': typing.Union[VolgnummerInSchema, list, tuple, ],
        'volgnummer[isnull]': typing.Union[VolgnummerIsnullSchema, bool, ],
        'volgnummer[lt]': typing.Union[VolgnummerLtSchema, decimal.Decimal, int, ],
        'volgnummer[lte]': typing.Union[VolgnummerLteSchema, decimal.Decimal, int, ],
        'volgnummer[not]': typing.Union[VolgnummerNotSchema, list, tuple, ],
    },
    total=False
)


class RequestQueryParams(RequestRequiredQueryParams, RequestOptionalQueryParams):
    pass


request_query_count = api_client.QueryParameter(
    name="_count",
    style=api_client.ParameterStyle.FORM,
    schema=CountSchema,
    explode=True,
)
request_query_expand = api_client.QueryParameter(
    name="_expand",
    style=api_client.ParameterStyle.FORM,
    schema=ExpandSchema,
    explode=True,
)
request_query_expand_scope = api_client.QueryParameter(
    name="_expandScope",
    style=api_client.ParameterStyle.FORM,
    schema=ExpandScopeSchema,
    explode=True,
)
request_query_fields = api_client.QueryParameter(
    name="_fields",
    style=api_client.ParameterStyle.FORM,
    schema=FieldsSchema,
    explode=True,
)
request_query_format = api_client.QueryParameter(
    name="_format",
    style=api_client.ParameterStyle.FORM,
    schema=FormatSchema,
    explode=True,
)
request_query_page_size = api_client.QueryParameter(
    name="_pageSize",
    style=api_client.ParameterStyle.FORM,
    schema=PageSizeSchema,
    explode=True,
)
request_query_sort = api_client.QueryParameter(
    name="_sort",
    style=api_client.ParameterStyle.FORM,
    schema=SortSchema,
    explode=True,
)
request_query_bagproces_code = api_client.QueryParameter(
    name="bagprocesCode",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeSchema,
    explode=True,
)
request_query_bagproces_code_gt = api_client.QueryParameter(
    name="bagprocesCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeGtSchema,
    explode=True,
)
request_query_bagproces_code_gte = api_client.QueryParameter(
    name="bagprocesCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeGteSchema,
    explode=True,
)
request_query_bagproces_code_in = api_client.QueryParameter(
    name="bagprocesCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeInSchema,
)
request_query_bagproces_code_isnull = api_client.QueryParameter(
    name="bagprocesCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeIsnullSchema,
    explode=True,
)
request_query_bagproces_code_lt = api_client.QueryParameter(
    name="bagprocesCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeLtSchema,
    explode=True,
)
request_query_bagproces_code_lte = api_client.QueryParameter(
    name="bagprocesCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeLteSchema,
    explode=True,
)
request_query_bagproces_code_not = api_client.QueryParameter(
    name="bagprocesCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeNotSchema,
    explode=True,
)
request_query_bagproces_omschrijving = api_client.QueryParameter(
    name="bagprocesOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingSchema,
    explode=True,
)
request_query_bagproces_omschrijving_in = api_client.QueryParameter(
    name="bagprocesOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingInSchema,
)
request_query_bagproces_omschrijving_isempty = api_client.QueryParameter(
    name="bagprocesOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingIsemptySchema,
    explode=True,
)
request_query_bagproces_omschrijving_isnull = api_client.QueryParameter(
    name="bagprocesOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingIsnullSchema,
    explode=True,
)
request_query_bagproces_omschrijving_like = api_client.QueryParameter(
    name="bagprocesOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingLikeSchema,
    explode=True,
)
request_query_bagproces_omschrijving_not = api_client.QueryParameter(
    name="bagprocesOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingNotSchema,
    explode=True,
)
request_query_begin_geldigheid = api_client.QueryParameter(
    name="beginGeldigheid",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidSchema,
    explode=True,
)
request_query_begin_geldigheid_gt = api_client.QueryParameter(
    name="beginGeldigheid[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidGtSchema,
    explode=True,
)
request_query_begin_geldigheid_gte = api_client.QueryParameter(
    name="beginGeldigheid[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidGteSchema,
    explode=True,
)
request_query_begin_geldigheid_in = api_client.QueryParameter(
    name="beginGeldigheid[in]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidInSchema,
)
request_query_begin_geldigheid_isnull = api_client.QueryParameter(
    name="beginGeldigheid[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidIsnullSchema,
    explode=True,
)
request_query_begin_geldigheid_lt = api_client.QueryParameter(
    name="beginGeldigheid[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidLtSchema,
    explode=True,
)
request_query_begin_geldigheid_lte = api_client.QueryParameter(
    name="beginGeldigheid[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidLteSchema,
    explode=True,
)
request_query_begin_geldigheid_not = api_client.QueryParameter(
    name="beginGeldigheid[not]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidNotSchema,
    explode=True,
)
request_query_documentdatum = api_client.QueryParameter(
    name="documentdatum",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumSchema,
    explode=True,
)
request_query_documentdatum_gt = api_client.QueryParameter(
    name="documentdatum[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumGtSchema,
    explode=True,
)
request_query_documentdatum_gte = api_client.QueryParameter(
    name="documentdatum[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumGteSchema,
    explode=True,
)
request_query_documentdatum_in = api_client.QueryParameter(
    name="documentdatum[in]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumInSchema,
)
request_query_documentdatum_isnull = api_client.QueryParameter(
    name="documentdatum[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumIsnullSchema,
    explode=True,
)
request_query_documentdatum_lt = api_client.QueryParameter(
    name="documentdatum[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumLtSchema,
    explode=True,
)
request_query_documentdatum_lte = api_client.QueryParameter(
    name="documentdatum[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumLteSchema,
    explode=True,
)
request_query_documentdatum_not = api_client.QueryParameter(
    name="documentdatum[not]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumNotSchema,
    explode=True,
)
request_query_documentnummer = api_client.QueryParameter(
    name="documentnummer",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerSchema,
    explode=True,
)
request_query_documentnummer_in = api_client.QueryParameter(
    name="documentnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerInSchema,
)
request_query_documentnummer_isempty = api_client.QueryParameter(
    name="documentnummer[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerIsemptySchema,
    explode=True,
)
request_query_documentnummer_isnull = api_client.QueryParameter(
    name="documentnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerIsnullSchema,
    explode=True,
)
request_query_documentnummer_like = api_client.QueryParameter(
    name="documentnummer[like]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerLikeSchema,
    explode=True,
)
request_query_documentnummer_not = api_client.QueryParameter(
    name="documentnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerNotSchema,
    explode=True,
)
request_query_eind_geldigheid = api_client.QueryParameter(
    name="eindGeldigheid",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidSchema,
    explode=True,
)
request_query_eind_geldigheid_gt = api_client.QueryParameter(
    name="eindGeldigheid[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidGtSchema,
    explode=True,
)
request_query_eind_geldigheid_gte = api_client.QueryParameter(
    name="eindGeldigheid[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidGteSchema,
    explode=True,
)
request_query_eind_geldigheid_in = api_client.QueryParameter(
    name="eindGeldigheid[in]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidInSchema,
)
request_query_eind_geldigheid_isnull = api_client.QueryParameter(
    name="eindGeldigheid[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidIsnullSchema,
    explode=True,
)
request_query_eind_geldigheid_lt = api_client.QueryParameter(
    name="eindGeldigheid[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidLtSchema,
    explode=True,
)
request_query_eind_geldigheid_lte = api_client.QueryParameter(
    name="eindGeldigheid[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidLteSchema,
    explode=True,
)
request_query_eind_geldigheid_not = api_client.QueryParameter(
    name="eindGeldigheid[not]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidNotSchema,
    explode=True,
)
request_query_gebruiksdoel_omschrijving = api_client.QueryParameter(
    name="gebruiksdoel.omschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelOmschrijvingSchema,
    explode=True,
)
request_query_gebruiksdoel_omschrijving_in = api_client.QueryParameter(
    name="gebruiksdoel.omschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelOmschrijvingInSchema,
)
request_query_gebruiksdoel_omschrijving_isempty = api_client.QueryParameter(
    name="gebruiksdoel.omschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelOmschrijvingIsemptySchema,
    explode=True,
)
request_query_gebruiksdoel_omschrijving_isnull = api_client.QueryParameter(
    name="gebruiksdoel.omschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelOmschrijvingIsnullSchema,
    explode=True,
)
request_query_gebruiksdoel_omschrijving_like = api_client.QueryParameter(
    name="gebruiksdoel.omschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelOmschrijvingLikeSchema,
    explode=True,
)
request_query_gebruiksdoel_omschrijving_not = api_client.QueryParameter(
    name="gebruiksdoel.omschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelOmschrijvingNotSchema,
    explode=True,
)
request_query_geconstateerd = api_client.QueryParameter(
    name="geconstateerd",
    style=api_client.ParameterStyle.FORM,
    schema=GeconstateerdSchema,
    explode=True,
)
request_query_geconstateerd_isnull = api_client.QueryParameter(
    name="geconstateerd[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GeconstateerdIsnullSchema,
    explode=True,
)
request_query_geldig_op = api_client.QueryParameter(
    name="geldigOp",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpSchema,
    explode=True,
)
request_query_geldig_op_gt = api_client.QueryParameter(
    name="geldigOp[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpGtSchema,
    explode=True,
)
request_query_geldig_op_gte = api_client.QueryParameter(
    name="geldigOp[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpGteSchema,
    explode=True,
)
request_query_geldig_op_in = api_client.QueryParameter(
    name="geldigOp[in]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpInSchema,
    explode=True,
)
request_query_geldig_op_isnull = api_client.QueryParameter(
    name="geldigOp[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpIsnullSchema,
    explode=True,
)
request_query_geldig_op_lt = api_client.QueryParameter(
    name="geldigOp[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpLtSchema,
    explode=True,
)
request_query_geldig_op_lte = api_client.QueryParameter(
    name="geldigOp[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpLteSchema,
    explode=True,
)
request_query_geldig_op_not = api_client.QueryParameter(
    name="geldigOp[not]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpNotSchema,
    explode=True,
)
request_query_geometrie = api_client.QueryParameter(
    name="geometrie",
    style=api_client.ParameterStyle.FORM,
    schema=GeometrieSchema,
    explode=True,
)
request_query_geometrie_contains = api_client.QueryParameter(
    name="geometrie[contains]",
    style=api_client.ParameterStyle.FORM,
    schema=GeometrieContainsSchema,
    explode=True,
)
request_query_geometrie_isnull = api_client.QueryParameter(
    name="geometrie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GeometrieIsnullSchema,
    explode=True,
)
request_query_geometrie_not = api_client.QueryParameter(
    name="geometrie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=GeometrieNotSchema,
    explode=True,
)
request_query_heeft_dossier_dossier = api_client.QueryParameter(
    name="heeftDossier.dossier",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierSchema,
    explode=True,
)
request_query_heeft_dossier_dossier_in = api_client.QueryParameter(
    name="heeftDossier.dossier[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierInSchema,
)
request_query_heeft_dossier_dossier_isempty = api_client.QueryParameter(
    name="heeftDossier.dossier[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierIsemptySchema,
    explode=True,
)
request_query_heeft_dossier_dossier_isnull = api_client.QueryParameter(
    name="heeftDossier.dossier[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierIsnullSchema,
    explode=True,
)
request_query_heeft_dossier_dossier_like = api_client.QueryParameter(
    name="heeftDossier.dossier[like]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierLikeSchema,
    explode=True,
)
request_query_heeft_dossier_dossier_not = api_client.QueryParameter(
    name="heeftDossier.dossier[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierNotSchema,
    explode=True,
)
request_query_heeft_hoofdadres_identificatie = api_client.QueryParameter(
    name="heeftHoofdadres.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresIdentificatieSchema,
    explode=True,
)
request_query_heeft_hoofdadres_identificatie_in = api_client.QueryParameter(
    name="heeftHoofdadres.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresIdentificatieInSchema,
)
request_query_heeft_hoofdadres_identificatie_isempty = api_client.QueryParameter(
    name="heeftHoofdadres.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresIdentificatieIsemptySchema,
    explode=True,
)
request_query_heeft_hoofdadres_identificatie_isnull = api_client.QueryParameter(
    name="heeftHoofdadres.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresIdentificatieIsnullSchema,
    explode=True,
)
request_query_heeft_hoofdadres_identificatie_like = api_client.QueryParameter(
    name="heeftHoofdadres.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresIdentificatieLikeSchema,
    explode=True,
)
request_query_heeft_hoofdadres_identificatie_not = api_client.QueryParameter(
    name="heeftHoofdadres.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresIdentificatieNotSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer_gt = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerGtSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer_gte = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerGteSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer_in = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerInSchema,
)
request_query_heeft_hoofdadres_volgnummer_isnull = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerIsnullSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer_lt = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerLtSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer_lte = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerLteSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer_not = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerNotSchema,
    explode=True,
)
request_query_heeft_nevenadres_identificatie = api_client.QueryParameter(
    name="heeftNevenadres.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresIdentificatieSchema,
    explode=True,
)
request_query_heeft_nevenadres_identificatie_in = api_client.QueryParameter(
    name="heeftNevenadres.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresIdentificatieInSchema,
)
request_query_heeft_nevenadres_identificatie_isempty = api_client.QueryParameter(
    name="heeftNevenadres.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresIdentificatieIsemptySchema,
    explode=True,
)
request_query_heeft_nevenadres_identificatie_isnull = api_client.QueryParameter(
    name="heeftNevenadres.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresIdentificatieIsnullSchema,
    explode=True,
)
request_query_heeft_nevenadres_identificatie_like = api_client.QueryParameter(
    name="heeftNevenadres.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresIdentificatieLikeSchema,
    explode=True,
)
request_query_heeft_nevenadres_identificatie_not = api_client.QueryParameter(
    name="heeftNevenadres.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresIdentificatieNotSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer_gt = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerGtSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer_gte = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerGteSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer_in = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerInSchema,
)
request_query_heeft_nevenadres_volgnummer_isnull = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerIsnullSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer_lt = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerLtSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer_lte = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerLteSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer_not = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerNotSchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieSchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie_in = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieInSchema,
)
request_query_heeft_onderzoeken_identificatie_isempty = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieIsemptySchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie_isnull = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieIsnullSchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie_like = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieLikeSchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie_not = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieNotSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_gt = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerGtSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_gte = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerGteSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_in = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerInSchema,
)
request_query_heeft_onderzoeken_volgnummer_isnull = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerIsnullSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_lt = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerLtSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_lte = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerLteSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_not = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerNotSchema,
    explode=True,
)
request_query_id = api_client.QueryParameter(
    name="id",
    style=api_client.ParameterStyle.FORM,
    schema=IdSchema,
    explode=True,
)
request_query_id_in = api_client.QueryParameter(
    name="id[in]",
    style=api_client.ParameterStyle.FORM,
    schema=IdInSchema,
)
request_query_id_isempty = api_client.QueryParameter(
    name="id[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=IdIsemptySchema,
    explode=True,
)
request_query_id_isnull = api_client.QueryParameter(
    name="id[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=IdIsnullSchema,
    explode=True,
)
request_query_id_like = api_client.QueryParameter(
    name="id[like]",
    style=api_client.ParameterStyle.FORM,
    schema=IdLikeSchema,
    explode=True,
)
request_query_id_not = api_client.QueryParameter(
    name="id[not]",
    style=api_client.ParameterStyle.FORM,
    schema=IdNotSchema,
    explode=True,
)
request_query_identificatie = api_client.QueryParameter(
    name="identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieSchema,
    explode=True,
)
request_query_identificatie_in = api_client.QueryParameter(
    name="identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieInSchema,
)
request_query_identificatie_isempty = api_client.QueryParameter(
    name="identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieIsemptySchema,
    explode=True,
)
request_query_identificatie_isnull = api_client.QueryParameter(
    name="identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieIsnullSchema,
    explode=True,
)
request_query_identificatie_like = api_client.QueryParameter(
    name="identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieLikeSchema,
    explode=True,
)
request_query_identificatie_not = api_client.QueryParameter(
    name="identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieNotSchema,
    explode=True,
)
request_query_ligt_in_buurt_identificatie = api_client.QueryParameter(
    name="ligtInBuurt.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtIdentificatieSchema,
    explode=True,
)
request_query_ligt_in_buurt_identificatie_in = api_client.QueryParameter(
    name="ligtInBuurt.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtIdentificatieInSchema,
)
request_query_ligt_in_buurt_identificatie_isempty = api_client.QueryParameter(
    name="ligtInBuurt.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtIdentificatieIsemptySchema,
    explode=True,
)
request_query_ligt_in_buurt_identificatie_isnull = api_client.QueryParameter(
    name="ligtInBuurt.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtIdentificatieIsnullSchema,
    explode=True,
)
request_query_ligt_in_buurt_identificatie_like = api_client.QueryParameter(
    name="ligtInBuurt.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtIdentificatieLikeSchema,
    explode=True,
)
request_query_ligt_in_buurt_identificatie_not = api_client.QueryParameter(
    name="ligtInBuurt.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtIdentificatieNotSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer_gt = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerGtSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer_gte = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerGteSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer_in = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerInSchema,
)
request_query_ligt_in_buurt_volgnummer_isnull = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerIsnullSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer_lt = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerLtSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer_lte = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerLteSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer_not = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerNotSchema,
    explode=True,
)
request_query_page = api_client.QueryParameter(
    name="page",
    style=api_client.ParameterStyle.FORM,
    schema=PageSchema,
    explode=True,
)
request_query_registratiedatum = api_client.QueryParameter(
    name="registratiedatum",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumSchema,
    explode=True,
)
request_query_registratiedatum_gt = api_client.QueryParameter(
    name="registratiedatum[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumGtSchema,
    explode=True,
)
request_query_registratiedatum_gte = api_client.QueryParameter(
    name="registratiedatum[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumGteSchema,
    explode=True,
)
request_query_registratiedatum_in = api_client.QueryParameter(
    name="registratiedatum[in]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumInSchema,
)
request_query_registratiedatum_isnull = api_client.QueryParameter(
    name="registratiedatum[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumIsnullSchema,
    explode=True,
)
request_query_registratiedatum_lt = api_client.QueryParameter(
    name="registratiedatum[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumLtSchema,
    explode=True,
)
request_query_registratiedatum_lte = api_client.QueryParameter(
    name="registratiedatum[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumLteSchema,
    explode=True,
)
request_query_registratiedatum_not = api_client.QueryParameter(
    name="registratiedatum[not]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumNotSchema,
    explode=True,
)
request_query_status_code = api_client.QueryParameter(
    name="statusCode",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeSchema,
    explode=True,
)
request_query_status_code_gt = api_client.QueryParameter(
    name="statusCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeGtSchema,
    explode=True,
)
request_query_status_code_gte = api_client.QueryParameter(
    name="statusCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeGteSchema,
    explode=True,
)
request_query_status_code_in = api_client.QueryParameter(
    name="statusCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeInSchema,
)
request_query_status_code_isnull = api_client.QueryParameter(
    name="statusCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeIsnullSchema,
    explode=True,
)
request_query_status_code_lt = api_client.QueryParameter(
    name="statusCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeLtSchema,
    explode=True,
)
request_query_status_code_lte = api_client.QueryParameter(
    name="statusCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeLteSchema,
    explode=True,
)
request_query_status_code_not = api_client.QueryParameter(
    name="statusCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeNotSchema,
    explode=True,
)
request_query_status_omschrijving = api_client.QueryParameter(
    name="statusOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingSchema,
    explode=True,
)
request_query_status_omschrijving_in = api_client.QueryParameter(
    name="statusOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingInSchema,
)
request_query_status_omschrijving_isempty = api_client.QueryParameter(
    name="statusOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingIsemptySchema,
    explode=True,
)
request_query_status_omschrijving_isnull = api_client.QueryParameter(
    name="statusOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingIsnullSchema,
    explode=True,
)
request_query_status_omschrijving_like = api_client.QueryParameter(
    name="statusOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingLikeSchema,
    explode=True,
)
request_query_status_omschrijving_not = api_client.QueryParameter(
    name="statusOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingNotSchema,
    explode=True,
)
request_query_volgnummer = api_client.QueryParameter(
    name="volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerSchema,
    explode=True,
)
request_query_volgnummer_gt = api_client.QueryParameter(
    name="volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerGtSchema,
    explode=True,
)
request_query_volgnummer_gte = api_client.QueryParameter(
    name="volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerGteSchema,
    explode=True,
)
request_query_volgnummer_in = api_client.QueryParameter(
    name="volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerInSchema,
)
request_query_volgnummer_isnull = api_client.QueryParameter(
    name="volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerIsnullSchema,
    explode=True,
)
request_query_volgnummer_lt = api_client.QueryParameter(
    name="volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerLtSchema,
    explode=True,
)
request_query_volgnummer_lte = api_client.QueryParameter(
    name="volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerLteSchema,
    explode=True,
)
request_query_volgnummer_not = api_client.QueryParameter(
    name="volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerNotSchema,
    explode=True,
)
# Header params
AcceptCrsSchema = schemas.StrSchema
ContentCrsSchema = schemas.StrSchema
RequestRequiredHeaderParams = typing_extensions.TypedDict(
    'RequestRequiredHeaderParams',
    {
    }
)
RequestOptionalHeaderParams = typing_extensions.TypedDict(
    'RequestOptionalHeaderParams',
    {
        'Accept-Crs': typing.Union[AcceptCrsSchema, str, ],
        'Content-Crs': typing.Union[ContentCrsSchema, str, ],
    },
    total=False
)


class RequestHeaderParams(RequestRequiredHeaderParams, RequestOptionalHeaderParams):
    pass


request_header_accept_crs = api_client.HeaderParameter(
    name="Accept-Crs",
    style=api_client.ParameterStyle.SIMPLE,
    schema=AcceptCrsSchema,
)
request_header_content_crs = api_client.HeaderParameter(
    name="Content-Crs",
    style=api_client.ParameterStyle.SIMPLE,
    schema=ContentCrsSchema,
)
SchemaFor200ResponseBodyApplicationHaljson = PaginatedBagstandplaatsenList
SchemaFor200ResponseBodyTextCsv = PaginatedBagstandplaatsenList
SchemaFor200ResponseBodyApplicationGeojson = PaginatedBagstandplaatsenList


@dataclass
class ApiResponseFor200(api_client.ApiResponse):
    response: urllib3.HTTPResponse
    body: typing.Union[
        SchemaFor200ResponseBodyApplicationHaljson,
        SchemaFor200ResponseBodyTextCsv,
        SchemaFor200ResponseBodyApplicationGeojson,
    ]
    headers: schemas.Unset = schemas.unset


_response_for_200 = api_client.OpenApiResponse(
    response_cls=ApiResponseFor200,
    content={
        'application/hal+json': api_client.MediaType(
            schema=SchemaFor200ResponseBodyApplicationHaljson),
        'text/csv': api_client.MediaType(
            schema=SchemaFor200ResponseBodyTextCsv),
        'application/geo+json': api_client.MediaType(
            schema=SchemaFor200ResponseBodyApplicationGeojson),
    },
)
_all_accept_content_types = (
    'application/hal+json',
    'text/csv',
    'application/geo+json',
)


class BaseApi(api_client.Api):
    @typing.overload
    def _bag_standplaatsen_list_oapg(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: typing_extensions.Literal[False] = ...,
    ) -> typing.Union[
        ApiResponseFor200,
    ]: ...

    @typing.overload
    def _bag_standplaatsen_list_oapg(
        self,
        skip_deserialization: typing_extensions.Literal[True],
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
    ) -> api_client.ApiResponseWithoutDeserialization: ...

    @typing.overload
    def _bag_standplaatsen_list_oapg(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = ...,
    ) -> typing.Union[
        ApiResponseFor200,
        api_client.ApiResponseWithoutDeserialization,
    ]: ...

    def _bag_standplaatsen_list_oapg(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = False,
    ):
        """
        :param skip_deserialization: If true then api_response.response will be set but
            api_response.body and api_response.headers will not be deserialized into schema
            class instances
        """
        self._verify_typed_dict_inputs_oapg(RequestQueryParams, query_params)
        self._verify_typed_dict_inputs_oapg(RequestHeaderParams, header_params)
        used_path = path.value

        prefix_separator_iterator = None
        for parameter in (
            request_query_count,
            request_query_expand,
            request_query_expand_scope,
            request_query_fields,
            request_query_format,
            request_query_page_size,
            request_query_sort,
            request_query_bagproces_code,
            request_query_bagproces_code_gt,
            request_query_bagproces_code_gte,
            request_query_bagproces_code_in,
            request_query_bagproces_code_isnull,
            request_query_bagproces_code_lt,
            request_query_bagproces_code_lte,
            request_query_bagproces_code_not,
            request_query_bagproces_omschrijving,
            request_query_bagproces_omschrijving_in,
            request_query_bagproces_omschrijving_isempty,
            request_query_bagproces_omschrijving_isnull,
            request_query_bagproces_omschrijving_like,
            request_query_bagproces_omschrijving_not,
            request_query_begin_geldigheid,
            request_query_begin_geldigheid_gt,
            request_query_begin_geldigheid_gte,
            request_query_begin_geldigheid_in,
            request_query_begin_geldigheid_isnull,
            request_query_begin_geldigheid_lt,
            request_query_begin_geldigheid_lte,
            request_query_begin_geldigheid_not,
            request_query_documentdatum,
            request_query_documentdatum_gt,
            request_query_documentdatum_gte,
            request_query_documentdatum_in,
            request_query_documentdatum_isnull,
            request_query_documentdatum_lt,
            request_query_documentdatum_lte,
            request_query_documentdatum_not,
            request_query_documentnummer,
            request_query_documentnummer_in,
            request_query_documentnummer_isempty,
            request_query_documentnummer_isnull,
            request_query_documentnummer_like,
            request_query_documentnummer_not,
            request_query_eind_geldigheid,
            request_query_eind_geldigheid_gt,
            request_query_eind_geldigheid_gte,
            request_query_eind_geldigheid_in,
            request_query_eind_geldigheid_isnull,
            request_query_eind_geldigheid_lt,
            request_query_eind_geldigheid_lte,
            request_query_eind_geldigheid_not,
            request_query_gebruiksdoel_omschrijving,
            request_query_gebruiksdoel_omschrijving_in,
            request_query_gebruiksdoel_omschrijving_isempty,
            request_query_gebruiksdoel_omschrijving_isnull,
            request_query_gebruiksdoel_omschrijving_like,
            request_query_gebruiksdoel_omschrijving_not,
            request_query_geconstateerd,
            request_query_geconstateerd_isnull,
            request_query_geldig_op,
            request_query_geldig_op_gt,
            request_query_geldig_op_gte,
            request_query_geldig_op_in,
            request_query_geldig_op_isnull,
            request_query_geldig_op_lt,
            request_query_geldig_op_lte,
            request_query_geldig_op_not,
            request_query_geometrie,
            request_query_geometrie_contains,
            request_query_geometrie_isnull,
            request_query_geometrie_not,
            request_query_heeft_dossier_dossier,
            request_query_heeft_dossier_dossier_in,
            request_query_heeft_dossier_dossier_isempty,
            request_query_heeft_dossier_dossier_isnull,
            request_query_heeft_dossier_dossier_like,
            request_query_heeft_dossier_dossier_not,
            request_query_heeft_hoofdadres_identificatie,
            request_query_heeft_hoofdadres_identificatie_in,
            request_query_heeft_hoofdadres_identificatie_isempty,
            request_query_heeft_hoofdadres_identificatie_isnull,
            request_query_heeft_hoofdadres_identificatie_like,
            request_query_heeft_hoofdadres_identificatie_not,
            request_query_heeft_hoofdadres_volgnummer,
            request_query_heeft_hoofdadres_volgnummer_gt,
            request_query_heeft_hoofdadres_volgnummer_gte,
            request_query_heeft_hoofdadres_volgnummer_in,
            request_query_heeft_hoofdadres_volgnummer_isnull,
            request_query_heeft_hoofdadres_volgnummer_lt,
            request_query_heeft_hoofdadres_volgnummer_lte,
            request_query_heeft_hoofdadres_volgnummer_not,
            request_query_heeft_nevenadres_identificatie,
            request_query_heeft_nevenadres_identificatie_in,
            request_query_heeft_nevenadres_identificatie_isempty,
            request_query_heeft_nevenadres_identificatie_isnull,
            request_query_heeft_nevenadres_identificatie_like,
            request_query_heeft_nevenadres_identificatie_not,
            request_query_heeft_nevenadres_volgnummer,
            request_query_heeft_nevenadres_volgnummer_gt,
            request_query_heeft_nevenadres_volgnummer_gte,
            request_query_heeft_nevenadres_volgnummer_in,
            request_query_heeft_nevenadres_volgnummer_isnull,
            request_query_heeft_nevenadres_volgnummer_lt,
            request_query_heeft_nevenadres_volgnummer_lte,
            request_query_heeft_nevenadres_volgnummer_not,
            request_query_heeft_onderzoeken_identificatie,
            request_query_heeft_onderzoeken_identificatie_in,
            request_query_heeft_onderzoeken_identificatie_isempty,
            request_query_heeft_onderzoeken_identificatie_isnull,
            request_query_heeft_onderzoeken_identificatie_like,
            request_query_heeft_onderzoeken_identificatie_not,
            request_query_heeft_onderzoeken_volgnummer,
            request_query_heeft_onderzoeken_volgnummer_gt,
            request_query_heeft_onderzoeken_volgnummer_gte,
            request_query_heeft_onderzoeken_volgnummer_in,
            request_query_heeft_onderzoeken_volgnummer_isnull,
            request_query_heeft_onderzoeken_volgnummer_lt,
            request_query_heeft_onderzoeken_volgnummer_lte,
            request_query_heeft_onderzoeken_volgnummer_not,
            request_query_id,
            request_query_id_in,
            request_query_id_isempty,
            request_query_id_isnull,
            request_query_id_like,
            request_query_id_not,
            request_query_identificatie,
            request_query_identificatie_in,
            request_query_identificatie_isempty,
            request_query_identificatie_isnull,
            request_query_identificatie_like,
            request_query_identificatie_not,
            request_query_ligt_in_buurt_identificatie,
            request_query_ligt_in_buurt_identificatie_in,
            request_query_ligt_in_buurt_identificatie_isempty,
            request_query_ligt_in_buurt_identificatie_isnull,
            request_query_ligt_in_buurt_identificatie_like,
            request_query_ligt_in_buurt_identificatie_not,
            request_query_ligt_in_buurt_volgnummer,
            request_query_ligt_in_buurt_volgnummer_gt,
            request_query_ligt_in_buurt_volgnummer_gte,
            request_query_ligt_in_buurt_volgnummer_in,
            request_query_ligt_in_buurt_volgnummer_isnull,
            request_query_ligt_in_buurt_volgnummer_lt,
            request_query_ligt_in_buurt_volgnummer_lte,
            request_query_ligt_in_buurt_volgnummer_not,
            request_query_page,
            request_query_registratiedatum,
            request_query_registratiedatum_gt,
            request_query_registratiedatum_gte,
            request_query_registratiedatum_in,
            request_query_registratiedatum_isnull,
            request_query_registratiedatum_lt,
            request_query_registratiedatum_lte,
            request_query_registratiedatum_not,
            request_query_status_code,
            request_query_status_code_gt,
            request_query_status_code_gte,
            request_query_status_code_in,
            request_query_status_code_isnull,
            request_query_status_code_lt,
            request_query_status_code_lte,
            request_query_status_code_not,
            request_query_status_omschrijving,
            request_query_status_omschrijving_in,
            request_query_status_omschrijving_isempty,
            request_query_status_omschrijving_isnull,
            request_query_status_omschrijving_like,
            request_query_status_omschrijving_not,
            request_query_volgnummer,
            request_query_volgnummer_gt,
            request_query_volgnummer_gte,
            request_query_volgnummer_in,
            request_query_volgnummer_isnull,
            request_query_volgnummer_lt,
            request_query_volgnummer_lte,
            request_query_volgnummer_not,
        ):
            parameter_data = query_params.get(parameter.name, schemas.unset)
            if parameter_data is schemas.unset:
                continue
            if prefix_separator_iterator is None:
                prefix_separator_iterator = parameter.get_prefix_separator_iterator()
            serialized_data = parameter.serialize(parameter_data, prefix_separator_iterator)
            for serialized_value in serialized_data.values():
                used_path += serialized_value

        _headers = HTTPHeaderDict()
        for parameter in (
            request_header_accept_crs,
            request_header_content_crs,
        ):
            parameter_data = header_params.get(parameter.name, schemas.unset)
            if parameter_data is schemas.unset:
                continue
            serialized_data = parameter.serialize(parameter_data)
            _headers.extend(serialized_data)
        # TODO add cookie handling
        if accept_content_types:
            for accept_content_type in accept_content_types:
                _headers.add('Accept', accept_content_type)

        response = self.api_client.call_api(
            resource_path=used_path,
            method='get'.upper(),
            headers=_headers,
            auth_settings=_auth,
            stream=stream,
            timeout=timeout,
        )

        if skip_deserialization:
            api_response = api_client.ApiResponseWithoutDeserialization(response=response)
        else:
            response_for_status = _status_code_to_response.get(str(response.status))
            if response_for_status:
                api_response = response_for_status.deserialize(response, self.api_client.configuration)
            else:
                api_response = api_client.ApiResponseWithoutDeserialization(response=response)

        if not 200 <= response.status <= 299:
            raise exceptions.ApiException(
                status=response.status,
                reason=response.reason,
                api_response=api_response
            )

        return api_response


class BagStandplaatsenList(BaseApi):
    # this class is used by api classes that refer to endpoints with operationId fn names

    @typing.overload
    def bag_standplaatsen_list(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: typing_extensions.Literal[False] = ...,
    ) -> typing.Union[
        ApiResponseFor200,
    ]: ...

    @typing.overload
    def bag_standplaatsen_list(
        self,
        skip_deserialization: typing_extensions.Literal[True],
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
    ) -> api_client.ApiResponseWithoutDeserialization: ...

    @typing.overload
    def bag_standplaatsen_list(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = ...,
    ) -> typing.Union[
        ApiResponseFor200,
        api_client.ApiResponseWithoutDeserialization,
    ]: ...

    def bag_standplaatsen_list(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = False,
    ):
        return self._bag_standplaatsen_list_oapg(
            query_params=query_params,
            header_params=header_params,
            accept_content_types=accept_content_types,
            stream=stream,
            timeout=timeout,
            skip_deserialization=skip_deserialization
        )


class ApiForget(BaseApi):
    # this class is used by api classes that refer to endpoints by path and http method names

    @typing.overload
    def get(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: typing_extensions.Literal[False] = ...,
    ) -> typing.Union[
        ApiResponseFor200,
    ]: ...

    @typing.overload
    def get(
        self,
        skip_deserialization: typing_extensions.Literal[True],
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
    ) -> api_client.ApiResponseWithoutDeserialization: ...

    @typing.overload
    def get(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = ...,
    ) -> typing.Union[
        ApiResponseFor200,
        api_client.ApiResponseWithoutDeserialization,
    ]: ...

    def get(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = False,
    ):
        return self._bag_standplaatsen_list_oapg(
            query_params=query_params,
            header_params=header_params,
            accept_content_types=accept_content_types,
            stream=stream,
            timeout=timeout,
            skip_deserialization=skip_deserialization
        )


