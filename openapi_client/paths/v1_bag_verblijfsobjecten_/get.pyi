# coding: utf-8

"""


    Generated by: https://openapi-generator.tech
"""

from dataclasses import dataclass
import typing_extensions
import urllib3
from urllib3._collections import HTTPHeaderDict

from openapi_client import api_client, exceptions
from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401

from openapi_client.model.paginated_bagverblijfsobjecten_list import PaginatedBagverblijfsobjectenList

# Query params
CountSchema = schemas.BoolSchema
ExpandSchema = schemas.BoolSchema
ExpandScopeSchema = schemas.StrSchema
FieldsSchema = schemas.StrSchema


class FormatSchema(
    schemas.EnumBase,
    schemas.StrSchema
):
    
    @schemas.classproperty
    def JSON(cls):
        return cls("json")
    
    @schemas.classproperty
    def CSV(cls):
        return cls("csv")
    
    @schemas.classproperty
    def GEOJSON(cls):
        return cls("geojson")
PageSizeSchema = schemas.IntSchema
SortSchema = schemas.StrSchema
AantalBouwlagenSchema = schemas.IntSchema
AantalBouwlagenGtSchema = schemas.IntSchema
AantalBouwlagenGteSchema = schemas.IntSchema


class AantalBouwlagenInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AantalBouwlagenInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AantalBouwlagenIsnullSchema = schemas.BoolSchema
AantalBouwlagenLtSchema = schemas.IntSchema
AantalBouwlagenLteSchema = schemas.IntSchema


class AantalBouwlagenNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AantalBouwlagenNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AantalEenhedenComplexSchema = schemas.IntSchema
AantalEenhedenComplexGtSchema = schemas.IntSchema
AantalEenhedenComplexGteSchema = schemas.IntSchema


class AantalEenhedenComplexInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AantalEenhedenComplexInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AantalEenhedenComplexIsnullSchema = schemas.BoolSchema
AantalEenhedenComplexLtSchema = schemas.IntSchema
AantalEenhedenComplexLteSchema = schemas.IntSchema


class AantalEenhedenComplexNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AantalEenhedenComplexNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AantalKamersSchema = schemas.IntSchema
AantalKamersGtSchema = schemas.IntSchema
AantalKamersGteSchema = schemas.IntSchema


class AantalKamersInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AantalKamersInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AantalKamersIsnullSchema = schemas.BoolSchema
AantalKamersLtSchema = schemas.IntSchema
AantalKamersLteSchema = schemas.IntSchema


class AantalKamersNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AantalKamersNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BagprocesCodeSchema = schemas.IntSchema
BagprocesCodeGtSchema = schemas.IntSchema
BagprocesCodeGteSchema = schemas.IntSchema


class BagprocesCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BagprocesCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BagprocesCodeIsnullSchema = schemas.BoolSchema
BagprocesCodeLtSchema = schemas.IntSchema
BagprocesCodeLteSchema = schemas.IntSchema


class BagprocesCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BagprocesCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BagprocesOmschrijvingSchema = schemas.StrSchema


class BagprocesOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BagprocesOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BagprocesOmschrijvingIsemptySchema = schemas.BoolSchema
BagprocesOmschrijvingIsnullSchema = schemas.BoolSchema
BagprocesOmschrijvingLikeSchema = schemas.StrSchema


class BagprocesOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BagprocesOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BeginGeldigheidSchema = schemas.DateTimeSchema
BeginGeldigheidGtSchema = schemas.DateTimeSchema
BeginGeldigheidGteSchema = schemas.DateTimeSchema


class BeginGeldigheidInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BeginGeldigheidInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BeginGeldigheidIsnullSchema = schemas.BoolSchema
BeginGeldigheidLtSchema = schemas.DateTimeSchema
BeginGeldigheidLteSchema = schemas.DateTimeSchema


class BeginGeldigheidNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BeginGeldigheidNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
CbsNummerSchema = schemas.StrSchema


class CbsNummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'CbsNummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
CbsNummerIsemptySchema = schemas.BoolSchema
CbsNummerIsnullSchema = schemas.BoolSchema
CbsNummerLikeSchema = schemas.StrSchema


class CbsNummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'CbsNummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
DocumentdatumSchema = schemas.DateSchema
DocumentdatumGtSchema = schemas.DateSchema
DocumentdatumGteSchema = schemas.DateSchema


class DocumentdatumInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, date, ]], typing.List[typing.Union[MetaOapg.items, str, date, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DocumentdatumInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
DocumentdatumIsnullSchema = schemas.BoolSchema
DocumentdatumLtSchema = schemas.DateSchema
DocumentdatumLteSchema = schemas.DateSchema


class DocumentdatumNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, date, ]], typing.List[typing.Union[MetaOapg.items, str, date, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DocumentdatumNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
DocumentnummerSchema = schemas.StrSchema


class DocumentnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DocumentnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
DocumentnummerIsemptySchema = schemas.BoolSchema
DocumentnummerIsnullSchema = schemas.BoolSchema
DocumentnummerLikeSchema = schemas.StrSchema


class DocumentnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DocumentnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
EigendomsverhoudingCodeSchema = schemas.IntSchema
EigendomsverhoudingCodeGtSchema = schemas.IntSchema
EigendomsverhoudingCodeGteSchema = schemas.IntSchema


class EigendomsverhoudingCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'EigendomsverhoudingCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
EigendomsverhoudingCodeIsnullSchema = schemas.BoolSchema
EigendomsverhoudingCodeLtSchema = schemas.IntSchema
EigendomsverhoudingCodeLteSchema = schemas.IntSchema


class EigendomsverhoudingCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'EigendomsverhoudingCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
EigendomsverhoudingOmschrijvingSchema = schemas.StrSchema


class EigendomsverhoudingOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'EigendomsverhoudingOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
EigendomsverhoudingOmschrijvingIsemptySchema = schemas.BoolSchema
EigendomsverhoudingOmschrijvingIsnullSchema = schemas.BoolSchema
EigendomsverhoudingOmschrijvingLikeSchema = schemas.StrSchema


class EigendomsverhoudingOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'EigendomsverhoudingOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
EindGeldigheidSchema = schemas.DateTimeSchema
EindGeldigheidGtSchema = schemas.DateTimeSchema
EindGeldigheidGteSchema = schemas.DateTimeSchema


class EindGeldigheidInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'EindGeldigheidInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
EindGeldigheidIsnullSchema = schemas.BoolSchema
EindGeldigheidLtSchema = schemas.DateTimeSchema
EindGeldigheidLteSchema = schemas.DateTimeSchema


class EindGeldigheidNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'EindGeldigheidNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
FeitelijkGebruikCodeSchema = schemas.IntSchema
FeitelijkGebruikCodeGtSchema = schemas.IntSchema
FeitelijkGebruikCodeGteSchema = schemas.IntSchema


class FeitelijkGebruikCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FeitelijkGebruikCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
FeitelijkGebruikCodeIsnullSchema = schemas.BoolSchema
FeitelijkGebruikCodeLtSchema = schemas.IntSchema
FeitelijkGebruikCodeLteSchema = schemas.IntSchema


class FeitelijkGebruikCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FeitelijkGebruikCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
FeitelijkGebruikOmschrijvingSchema = schemas.StrSchema


class FeitelijkGebruikOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FeitelijkGebruikOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
FeitelijkGebruikOmschrijvingIsemptySchema = schemas.BoolSchema
FeitelijkGebruikOmschrijvingIsnullSchema = schemas.BoolSchema
FeitelijkGebruikOmschrijvingLikeSchema = schemas.StrSchema


class FeitelijkGebruikOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FeitelijkGebruikOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
FinancieringscodeCodeSchema = schemas.IntSchema
FinancieringscodeCodeGtSchema = schemas.IntSchema
FinancieringscodeCodeGteSchema = schemas.IntSchema


class FinancieringscodeCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FinancieringscodeCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
FinancieringscodeCodeIsnullSchema = schemas.BoolSchema
FinancieringscodeCodeLtSchema = schemas.IntSchema
FinancieringscodeCodeLteSchema = schemas.IntSchema


class FinancieringscodeCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FinancieringscodeCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
FinancieringscodeOmschrijvingSchema = schemas.StrSchema


class FinancieringscodeOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FinancieringscodeOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
FinancieringscodeOmschrijvingIsemptySchema = schemas.BoolSchema
FinancieringscodeOmschrijvingIsnullSchema = schemas.BoolSchema
FinancieringscodeOmschrijvingLikeSchema = schemas.StrSchema


class FinancieringscodeOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'FinancieringscodeOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelCodeSchema = schemas.StrSchema


class GebruiksdoelCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelCodeIsemptySchema = schemas.BoolSchema
GebruiksdoelCodeIsnullSchema = schemas.BoolSchema
GebruiksdoelCodeLikeSchema = schemas.StrSchema


class GebruiksdoelCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelOmschrijvingSchema = schemas.StrSchema


class GebruiksdoelOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelOmschrijvingIsemptySchema = schemas.BoolSchema
GebruiksdoelOmschrijvingIsnullSchema = schemas.BoolSchema
GebruiksdoelOmschrijvingLikeSchema = schemas.StrSchema


class GebruiksdoelOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelGezondheidszorgfunctieCodeSchema = schemas.IntSchema
GebruiksdoelGezondheidszorgfunctieCodeGtSchema = schemas.IntSchema
GebruiksdoelGezondheidszorgfunctieCodeGteSchema = schemas.IntSchema


class GebruiksdoelGezondheidszorgfunctieCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelGezondheidszorgfunctieCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelGezondheidszorgfunctieCodeIsnullSchema = schemas.BoolSchema
GebruiksdoelGezondheidszorgfunctieCodeLtSchema = schemas.IntSchema
GebruiksdoelGezondheidszorgfunctieCodeLteSchema = schemas.IntSchema


class GebruiksdoelGezondheidszorgfunctieCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelGezondheidszorgfunctieCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelGezondheidszorgfunctieOmschrijvingSchema = schemas.StrSchema


class GebruiksdoelGezondheidszorgfunctieOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelGezondheidszorgfunctieOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelGezondheidszorgfunctieOmschrijvingIsemptySchema = schemas.BoolSchema
GebruiksdoelGezondheidszorgfunctieOmschrijvingIsnullSchema = schemas.BoolSchema
GebruiksdoelGezondheidszorgfunctieOmschrijvingLikeSchema = schemas.StrSchema


class GebruiksdoelGezondheidszorgfunctieOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelGezondheidszorgfunctieOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelWoonfunctieCodeSchema = schemas.IntSchema
GebruiksdoelWoonfunctieCodeGtSchema = schemas.IntSchema
GebruiksdoelWoonfunctieCodeGteSchema = schemas.IntSchema


class GebruiksdoelWoonfunctieCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelWoonfunctieCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelWoonfunctieCodeIsnullSchema = schemas.BoolSchema
GebruiksdoelWoonfunctieCodeLtSchema = schemas.IntSchema
GebruiksdoelWoonfunctieCodeLteSchema = schemas.IntSchema


class GebruiksdoelWoonfunctieCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelWoonfunctieCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelWoonfunctieOmschrijvingSchema = schemas.StrSchema


class GebruiksdoelWoonfunctieOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelWoonfunctieOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GebruiksdoelWoonfunctieOmschrijvingIsemptySchema = schemas.BoolSchema
GebruiksdoelWoonfunctieOmschrijvingIsnullSchema = schemas.BoolSchema
GebruiksdoelWoonfunctieOmschrijvingLikeSchema = schemas.StrSchema


class GebruiksdoelWoonfunctieOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'GebruiksdoelWoonfunctieOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GeconstateerdSchema = schemas.BoolSchema
GeconstateerdIsnullSchema = schemas.BoolSchema
GeldigOpSchema = schemas.DateTimeSchema
GeldigOpGtSchema = schemas.DateTimeSchema
GeldigOpGteSchema = schemas.DateTimeSchema
GeldigOpInSchema = schemas.DateTimeSchema
GeldigOpIsnullSchema = schemas.DateTimeSchema
GeldigOpLtSchema = schemas.DateTimeSchema
GeldigOpLteSchema = schemas.DateTimeSchema
GeldigOpNotSchema = schemas.DateTimeSchema
GeometrieSchema = schemas.StrSchema
GeometrieContainsSchema = schemas.StrSchema
GeometrieIsnullSchema = schemas.StrSchema
GeometrieNotSchema = schemas.StrSchema
HeeftDossierDossierSchema = schemas.StrSchema


class HeeftDossierDossierInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftDossierDossierInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftDossierDossierIsemptySchema = schemas.BoolSchema
HeeftDossierDossierIsnullSchema = schemas.BoolSchema
HeeftDossierDossierLikeSchema = schemas.StrSchema


class HeeftDossierDossierNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftDossierDossierNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftHoofdadresIdentificatieSchema = schemas.StrSchema


class HeeftHoofdadresIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftHoofdadresIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftHoofdadresIdentificatieIsemptySchema = schemas.BoolSchema
HeeftHoofdadresIdentificatieIsnullSchema = schemas.BoolSchema
HeeftHoofdadresIdentificatieLikeSchema = schemas.StrSchema


class HeeftHoofdadresIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftHoofdadresIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftHoofdadresVolgnummerSchema = schemas.IntSchema
HeeftHoofdadresVolgnummerGtSchema = schemas.IntSchema
HeeftHoofdadresVolgnummerGteSchema = schemas.IntSchema


class HeeftHoofdadresVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftHoofdadresVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftHoofdadresVolgnummerIsnullSchema = schemas.BoolSchema
HeeftHoofdadresVolgnummerLtSchema = schemas.IntSchema
HeeftHoofdadresVolgnummerLteSchema = schemas.IntSchema


class HeeftHoofdadresVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftHoofdadresVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftNevenadresIdentificatieSchema = schemas.StrSchema


class HeeftNevenadresIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftNevenadresIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftNevenadresIdentificatieIsemptySchema = schemas.BoolSchema
HeeftNevenadresIdentificatieIsnullSchema = schemas.BoolSchema
HeeftNevenadresIdentificatieLikeSchema = schemas.StrSchema


class HeeftNevenadresIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftNevenadresIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftNevenadresVolgnummerSchema = schemas.IntSchema
HeeftNevenadresVolgnummerGtSchema = schemas.IntSchema
HeeftNevenadresVolgnummerGteSchema = schemas.IntSchema


class HeeftNevenadresVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftNevenadresVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftNevenadresVolgnummerIsnullSchema = schemas.BoolSchema
HeeftNevenadresVolgnummerLtSchema = schemas.IntSchema
HeeftNevenadresVolgnummerLteSchema = schemas.IntSchema


class HeeftNevenadresVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftNevenadresVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftOnderzoekenIdentificatieSchema = schemas.StrSchema


class HeeftOnderzoekenIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftOnderzoekenIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftOnderzoekenIdentificatieIsemptySchema = schemas.BoolSchema
HeeftOnderzoekenIdentificatieIsnullSchema = schemas.BoolSchema
HeeftOnderzoekenIdentificatieLikeSchema = schemas.StrSchema


class HeeftOnderzoekenIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftOnderzoekenIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftOnderzoekenVolgnummerSchema = schemas.IntSchema
HeeftOnderzoekenVolgnummerGtSchema = schemas.IntSchema
HeeftOnderzoekenVolgnummerGteSchema = schemas.IntSchema


class HeeftOnderzoekenVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftOnderzoekenVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftOnderzoekenVolgnummerIsnullSchema = schemas.BoolSchema
HeeftOnderzoekenVolgnummerLtSchema = schemas.IntSchema
HeeftOnderzoekenVolgnummerLteSchema = schemas.IntSchema


class HeeftOnderzoekenVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftOnderzoekenVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HoogsteBouwlaagSchema = schemas.IntSchema
HoogsteBouwlaagGtSchema = schemas.IntSchema
HoogsteBouwlaagGteSchema = schemas.IntSchema


class HoogsteBouwlaagInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HoogsteBouwlaagInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HoogsteBouwlaagIsnullSchema = schemas.BoolSchema
HoogsteBouwlaagLtSchema = schemas.IntSchema
HoogsteBouwlaagLteSchema = schemas.IntSchema


class HoogsteBouwlaagNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HoogsteBouwlaagNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IdSchema = schemas.StrSchema


class IdInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IdInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IdIsemptySchema = schemas.BoolSchema
IdIsnullSchema = schemas.BoolSchema
IdLikeSchema = schemas.StrSchema


class IdNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IdNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IdentificatieSchema = schemas.StrSchema


class IdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IdentificatieIsemptySchema = schemas.BoolSchema
IdentificatieIsnullSchema = schemas.BoolSchema
IdentificatieLikeSchema = schemas.StrSchema


class IdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IndicatieWoningvoorraadSchema = schemas.StrSchema


class IndicatieWoningvoorraadInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IndicatieWoningvoorraadInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IndicatieWoningvoorraadIsemptySchema = schemas.BoolSchema
IndicatieWoningvoorraadIsnullSchema = schemas.BoolSchema
IndicatieWoningvoorraadLikeSchema = schemas.StrSchema


class IndicatieWoningvoorraadNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IndicatieWoningvoorraadNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LaagsteBouwlaagSchema = schemas.IntSchema
LaagsteBouwlaagGtSchema = schemas.IntSchema
LaagsteBouwlaagGteSchema = schemas.IntSchema


class LaagsteBouwlaagInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LaagsteBouwlaagInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LaagsteBouwlaagIsnullSchema = schemas.BoolSchema
LaagsteBouwlaagLtSchema = schemas.IntSchema
LaagsteBouwlaagLteSchema = schemas.IntSchema


class LaagsteBouwlaagNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LaagsteBouwlaagNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInBuurtIdentificatieSchema = schemas.StrSchema


class LigtInBuurtIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInBuurtIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInBuurtIdentificatieIsemptySchema = schemas.BoolSchema
LigtInBuurtIdentificatieIsnullSchema = schemas.BoolSchema
LigtInBuurtIdentificatieLikeSchema = schemas.StrSchema


class LigtInBuurtIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInBuurtIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInBuurtVolgnummerSchema = schemas.IntSchema
LigtInBuurtVolgnummerGtSchema = schemas.IntSchema
LigtInBuurtVolgnummerGteSchema = schemas.IntSchema


class LigtInBuurtVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInBuurtVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInBuurtVolgnummerIsnullSchema = schemas.BoolSchema
LigtInBuurtVolgnummerLtSchema = schemas.IntSchema
LigtInBuurtVolgnummerLteSchema = schemas.IntSchema


class LigtInBuurtVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInBuurtVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInPandenIdentificatieSchema = schemas.StrSchema


class LigtInPandenIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInPandenIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInPandenIdentificatieIsemptySchema = schemas.BoolSchema
LigtInPandenIdentificatieIsnullSchema = schemas.BoolSchema
LigtInPandenIdentificatieLikeSchema = schemas.StrSchema


class LigtInPandenIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInPandenIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInPandenVolgnummerSchema = schemas.IntSchema
LigtInPandenVolgnummerGtSchema = schemas.IntSchema
LigtInPandenVolgnummerGteSchema = schemas.IntSchema


class LigtInPandenVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInPandenVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInPandenVolgnummerIsnullSchema = schemas.BoolSchema
LigtInPandenVolgnummerLtSchema = schemas.IntSchema
LigtInPandenVolgnummerLteSchema = schemas.IntSchema


class LigtInPandenVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInPandenVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
OppervlakteSchema = schemas.IntSchema
OppervlakteGtSchema = schemas.IntSchema
OppervlakteGteSchema = schemas.IntSchema


class OppervlakteInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'OppervlakteInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
OppervlakteIsnullSchema = schemas.BoolSchema
OppervlakteLtSchema = schemas.IntSchema
OppervlakteLteSchema = schemas.IntSchema


class OppervlakteNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'OppervlakteNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
PageSchema = schemas.IntSchema
RedenafvoerCodeSchema = schemas.IntSchema
RedenafvoerCodeGtSchema = schemas.IntSchema
RedenafvoerCodeGteSchema = schemas.IntSchema


class RedenafvoerCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RedenafvoerCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RedenafvoerCodeIsnullSchema = schemas.BoolSchema
RedenafvoerCodeLtSchema = schemas.IntSchema
RedenafvoerCodeLteSchema = schemas.IntSchema


class RedenafvoerCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RedenafvoerCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RedenafvoerOmschrijvingSchema = schemas.StrSchema


class RedenafvoerOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RedenafvoerOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RedenafvoerOmschrijvingIsemptySchema = schemas.BoolSchema
RedenafvoerOmschrijvingIsnullSchema = schemas.BoolSchema
RedenafvoerOmschrijvingLikeSchema = schemas.StrSchema


class RedenafvoerOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RedenafvoerOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RedenopvoerCodeSchema = schemas.IntSchema
RedenopvoerCodeGtSchema = schemas.IntSchema
RedenopvoerCodeGteSchema = schemas.IntSchema


class RedenopvoerCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RedenopvoerCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RedenopvoerCodeIsnullSchema = schemas.BoolSchema
RedenopvoerCodeLtSchema = schemas.IntSchema
RedenopvoerCodeLteSchema = schemas.IntSchema


class RedenopvoerCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RedenopvoerCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RedenopvoerOmschrijvingSchema = schemas.StrSchema


class RedenopvoerOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RedenopvoerOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RedenopvoerOmschrijvingIsemptySchema = schemas.BoolSchema
RedenopvoerOmschrijvingIsnullSchema = schemas.BoolSchema
RedenopvoerOmschrijvingLikeSchema = schemas.StrSchema


class RedenopvoerOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RedenopvoerOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RegistratiedatumSchema = schemas.DateTimeSchema
RegistratiedatumGtSchema = schemas.DateTimeSchema
RegistratiedatumGteSchema = schemas.DateTimeSchema


class RegistratiedatumInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RegistratiedatumInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RegistratiedatumIsnullSchema = schemas.BoolSchema
RegistratiedatumLtSchema = schemas.DateTimeSchema
RegistratiedatumLteSchema = schemas.DateTimeSchema


class RegistratiedatumNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RegistratiedatumNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
StatusCodeSchema = schemas.IntSchema
StatusCodeGtSchema = schemas.IntSchema
StatusCodeGteSchema = schemas.IntSchema


class StatusCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'StatusCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
StatusCodeIsnullSchema = schemas.BoolSchema
StatusCodeLtSchema = schemas.IntSchema
StatusCodeLteSchema = schemas.IntSchema


class StatusCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'StatusCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
StatusOmschrijvingSchema = schemas.StrSchema


class StatusOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'StatusOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
StatusOmschrijvingIsemptySchema = schemas.BoolSchema
StatusOmschrijvingIsnullSchema = schemas.BoolSchema
StatusOmschrijvingLikeSchema = schemas.StrSchema


class StatusOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'StatusOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
ToegangCodeSchema = schemas.StrSchema


class ToegangCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'ToegangCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
ToegangCodeIsemptySchema = schemas.BoolSchema
ToegangCodeIsnullSchema = schemas.BoolSchema
ToegangCodeLikeSchema = schemas.StrSchema


class ToegangCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'ToegangCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
ToegangOmschrijvingSchema = schemas.StrSchema


class ToegangOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'ToegangOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
ToegangOmschrijvingIsemptySchema = schemas.BoolSchema
ToegangOmschrijvingIsnullSchema = schemas.BoolSchema
ToegangOmschrijvingLikeSchema = schemas.StrSchema


class ToegangOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'ToegangOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
VerdiepingToegangSchema = schemas.IntSchema
VerdiepingToegangGtSchema = schemas.IntSchema
VerdiepingToegangGteSchema = schemas.IntSchema


class VerdiepingToegangInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'VerdiepingToegangInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
VerdiepingToegangIsnullSchema = schemas.BoolSchema
VerdiepingToegangLtSchema = schemas.IntSchema
VerdiepingToegangLteSchema = schemas.IntSchema


class VerdiepingToegangNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'VerdiepingToegangNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
VolgnummerSchema = schemas.IntSchema
VolgnummerGtSchema = schemas.IntSchema
VolgnummerGteSchema = schemas.IntSchema


class VolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'VolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
VolgnummerIsnullSchema = schemas.BoolSchema
VolgnummerLtSchema = schemas.IntSchema
VolgnummerLteSchema = schemas.IntSchema


class VolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'VolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RequestRequiredQueryParams = typing_extensions.TypedDict(
    'RequestRequiredQueryParams',
    {
    }
)
RequestOptionalQueryParams = typing_extensions.TypedDict(
    'RequestOptionalQueryParams',
    {
        '_count': typing.Union[CountSchema, bool, ],
        '_expand': typing.Union[ExpandSchema, bool, ],
        '_expandScope': typing.Union[ExpandScopeSchema, str, ],
        '_fields': typing.Union[FieldsSchema, str, ],
        '_format': typing.Union[FormatSchema, str, ],
        '_pageSize': typing.Union[PageSizeSchema, decimal.Decimal, int, ],
        '_sort': typing.Union[SortSchema, str, ],
        'aantalBouwlagen': typing.Union[AantalBouwlagenSchema, decimal.Decimal, int, ],
        'aantalBouwlagen[gt]': typing.Union[AantalBouwlagenGtSchema, decimal.Decimal, int, ],
        'aantalBouwlagen[gte]': typing.Union[AantalBouwlagenGteSchema, decimal.Decimal, int, ],
        'aantalBouwlagen[in]': typing.Union[AantalBouwlagenInSchema, list, tuple, ],
        'aantalBouwlagen[isnull]': typing.Union[AantalBouwlagenIsnullSchema, bool, ],
        'aantalBouwlagen[lt]': typing.Union[AantalBouwlagenLtSchema, decimal.Decimal, int, ],
        'aantalBouwlagen[lte]': typing.Union[AantalBouwlagenLteSchema, decimal.Decimal, int, ],
        'aantalBouwlagen[not]': typing.Union[AantalBouwlagenNotSchema, list, tuple, ],
        'aantalEenhedenComplex': typing.Union[AantalEenhedenComplexSchema, decimal.Decimal, int, ],
        'aantalEenhedenComplex[gt]': typing.Union[AantalEenhedenComplexGtSchema, decimal.Decimal, int, ],
        'aantalEenhedenComplex[gte]': typing.Union[AantalEenhedenComplexGteSchema, decimal.Decimal, int, ],
        'aantalEenhedenComplex[in]': typing.Union[AantalEenhedenComplexInSchema, list, tuple, ],
        'aantalEenhedenComplex[isnull]': typing.Union[AantalEenhedenComplexIsnullSchema, bool, ],
        'aantalEenhedenComplex[lt]': typing.Union[AantalEenhedenComplexLtSchema, decimal.Decimal, int, ],
        'aantalEenhedenComplex[lte]': typing.Union[AantalEenhedenComplexLteSchema, decimal.Decimal, int, ],
        'aantalEenhedenComplex[not]': typing.Union[AantalEenhedenComplexNotSchema, list, tuple, ],
        'aantalKamers': typing.Union[AantalKamersSchema, decimal.Decimal, int, ],
        'aantalKamers[gt]': typing.Union[AantalKamersGtSchema, decimal.Decimal, int, ],
        'aantalKamers[gte]': typing.Union[AantalKamersGteSchema, decimal.Decimal, int, ],
        'aantalKamers[in]': typing.Union[AantalKamersInSchema, list, tuple, ],
        'aantalKamers[isnull]': typing.Union[AantalKamersIsnullSchema, bool, ],
        'aantalKamers[lt]': typing.Union[AantalKamersLtSchema, decimal.Decimal, int, ],
        'aantalKamers[lte]': typing.Union[AantalKamersLteSchema, decimal.Decimal, int, ],
        'aantalKamers[not]': typing.Union[AantalKamersNotSchema, list, tuple, ],
        'bagprocesCode': typing.Union[BagprocesCodeSchema, decimal.Decimal, int, ],
        'bagprocesCode[gt]': typing.Union[BagprocesCodeGtSchema, decimal.Decimal, int, ],
        'bagprocesCode[gte]': typing.Union[BagprocesCodeGteSchema, decimal.Decimal, int, ],
        'bagprocesCode[in]': typing.Union[BagprocesCodeInSchema, list, tuple, ],
        'bagprocesCode[isnull]': typing.Union[BagprocesCodeIsnullSchema, bool, ],
        'bagprocesCode[lt]': typing.Union[BagprocesCodeLtSchema, decimal.Decimal, int, ],
        'bagprocesCode[lte]': typing.Union[BagprocesCodeLteSchema, decimal.Decimal, int, ],
        'bagprocesCode[not]': typing.Union[BagprocesCodeNotSchema, list, tuple, ],
        'bagprocesOmschrijving': typing.Union[BagprocesOmschrijvingSchema, str, ],
        'bagprocesOmschrijving[in]': typing.Union[BagprocesOmschrijvingInSchema, list, tuple, ],
        'bagprocesOmschrijving[isempty]': typing.Union[BagprocesOmschrijvingIsemptySchema, bool, ],
        'bagprocesOmschrijving[isnull]': typing.Union[BagprocesOmschrijvingIsnullSchema, bool, ],
        'bagprocesOmschrijving[like]': typing.Union[BagprocesOmschrijvingLikeSchema, str, ],
        'bagprocesOmschrijving[not]': typing.Union[BagprocesOmschrijvingNotSchema, list, tuple, ],
        'beginGeldigheid': typing.Union[BeginGeldigheidSchema, str, datetime, ],
        'beginGeldigheid[gt]': typing.Union[BeginGeldigheidGtSchema, str, datetime, ],
        'beginGeldigheid[gte]': typing.Union[BeginGeldigheidGteSchema, str, datetime, ],
        'beginGeldigheid[in]': typing.Union[BeginGeldigheidInSchema, list, tuple, ],
        'beginGeldigheid[isnull]': typing.Union[BeginGeldigheidIsnullSchema, bool, ],
        'beginGeldigheid[lt]': typing.Union[BeginGeldigheidLtSchema, str, datetime, ],
        'beginGeldigheid[lte]': typing.Union[BeginGeldigheidLteSchema, str, datetime, ],
        'beginGeldigheid[not]': typing.Union[BeginGeldigheidNotSchema, list, tuple, ],
        'cbsNummer': typing.Union[CbsNummerSchema, str, ],
        'cbsNummer[in]': typing.Union[CbsNummerInSchema, list, tuple, ],
        'cbsNummer[isempty]': typing.Union[CbsNummerIsemptySchema, bool, ],
        'cbsNummer[isnull]': typing.Union[CbsNummerIsnullSchema, bool, ],
        'cbsNummer[like]': typing.Union[CbsNummerLikeSchema, str, ],
        'cbsNummer[not]': typing.Union[CbsNummerNotSchema, list, tuple, ],
        'documentdatum': typing.Union[DocumentdatumSchema, str, date, ],
        'documentdatum[gt]': typing.Union[DocumentdatumGtSchema, str, date, ],
        'documentdatum[gte]': typing.Union[DocumentdatumGteSchema, str, date, ],
        'documentdatum[in]': typing.Union[DocumentdatumInSchema, list, tuple, ],
        'documentdatum[isnull]': typing.Union[DocumentdatumIsnullSchema, bool, ],
        'documentdatum[lt]': typing.Union[DocumentdatumLtSchema, str, date, ],
        'documentdatum[lte]': typing.Union[DocumentdatumLteSchema, str, date, ],
        'documentdatum[not]': typing.Union[DocumentdatumNotSchema, list, tuple, ],
        'documentnummer': typing.Union[DocumentnummerSchema, str, ],
        'documentnummer[in]': typing.Union[DocumentnummerInSchema, list, tuple, ],
        'documentnummer[isempty]': typing.Union[DocumentnummerIsemptySchema, bool, ],
        'documentnummer[isnull]': typing.Union[DocumentnummerIsnullSchema, bool, ],
        'documentnummer[like]': typing.Union[DocumentnummerLikeSchema, str, ],
        'documentnummer[not]': typing.Union[DocumentnummerNotSchema, list, tuple, ],
        'eigendomsverhoudingCode': typing.Union[EigendomsverhoudingCodeSchema, decimal.Decimal, int, ],
        'eigendomsverhoudingCode[gt]': typing.Union[EigendomsverhoudingCodeGtSchema, decimal.Decimal, int, ],
        'eigendomsverhoudingCode[gte]': typing.Union[EigendomsverhoudingCodeGteSchema, decimal.Decimal, int, ],
        'eigendomsverhoudingCode[in]': typing.Union[EigendomsverhoudingCodeInSchema, list, tuple, ],
        'eigendomsverhoudingCode[isnull]': typing.Union[EigendomsverhoudingCodeIsnullSchema, bool, ],
        'eigendomsverhoudingCode[lt]': typing.Union[EigendomsverhoudingCodeLtSchema, decimal.Decimal, int, ],
        'eigendomsverhoudingCode[lte]': typing.Union[EigendomsverhoudingCodeLteSchema, decimal.Decimal, int, ],
        'eigendomsverhoudingCode[not]': typing.Union[EigendomsverhoudingCodeNotSchema, list, tuple, ],
        'eigendomsverhoudingOmschrijving': typing.Union[EigendomsverhoudingOmschrijvingSchema, str, ],
        'eigendomsverhoudingOmschrijving[in]': typing.Union[EigendomsverhoudingOmschrijvingInSchema, list, tuple, ],
        'eigendomsverhoudingOmschrijving[isempty]': typing.Union[EigendomsverhoudingOmschrijvingIsemptySchema, bool, ],
        'eigendomsverhoudingOmschrijving[isnull]': typing.Union[EigendomsverhoudingOmschrijvingIsnullSchema, bool, ],
        'eigendomsverhoudingOmschrijving[like]': typing.Union[EigendomsverhoudingOmschrijvingLikeSchema, str, ],
        'eigendomsverhoudingOmschrijving[not]': typing.Union[EigendomsverhoudingOmschrijvingNotSchema, list, tuple, ],
        'eindGeldigheid': typing.Union[EindGeldigheidSchema, str, datetime, ],
        'eindGeldigheid[gt]': typing.Union[EindGeldigheidGtSchema, str, datetime, ],
        'eindGeldigheid[gte]': typing.Union[EindGeldigheidGteSchema, str, datetime, ],
        'eindGeldigheid[in]': typing.Union[EindGeldigheidInSchema, list, tuple, ],
        'eindGeldigheid[isnull]': typing.Union[EindGeldigheidIsnullSchema, bool, ],
        'eindGeldigheid[lt]': typing.Union[EindGeldigheidLtSchema, str, datetime, ],
        'eindGeldigheid[lte]': typing.Union[EindGeldigheidLteSchema, str, datetime, ],
        'eindGeldigheid[not]': typing.Union[EindGeldigheidNotSchema, list, tuple, ],
        'feitelijkGebruikCode': typing.Union[FeitelijkGebruikCodeSchema, decimal.Decimal, int, ],
        'feitelijkGebruikCode[gt]': typing.Union[FeitelijkGebruikCodeGtSchema, decimal.Decimal, int, ],
        'feitelijkGebruikCode[gte]': typing.Union[FeitelijkGebruikCodeGteSchema, decimal.Decimal, int, ],
        'feitelijkGebruikCode[in]': typing.Union[FeitelijkGebruikCodeInSchema, list, tuple, ],
        'feitelijkGebruikCode[isnull]': typing.Union[FeitelijkGebruikCodeIsnullSchema, bool, ],
        'feitelijkGebruikCode[lt]': typing.Union[FeitelijkGebruikCodeLtSchema, decimal.Decimal, int, ],
        'feitelijkGebruikCode[lte]': typing.Union[FeitelijkGebruikCodeLteSchema, decimal.Decimal, int, ],
        'feitelijkGebruikCode[not]': typing.Union[FeitelijkGebruikCodeNotSchema, list, tuple, ],
        'feitelijkGebruikOmschrijving': typing.Union[FeitelijkGebruikOmschrijvingSchema, str, ],
        'feitelijkGebruikOmschrijving[in]': typing.Union[FeitelijkGebruikOmschrijvingInSchema, list, tuple, ],
        'feitelijkGebruikOmschrijving[isempty]': typing.Union[FeitelijkGebruikOmschrijvingIsemptySchema, bool, ],
        'feitelijkGebruikOmschrijving[isnull]': typing.Union[FeitelijkGebruikOmschrijvingIsnullSchema, bool, ],
        'feitelijkGebruikOmschrijving[like]': typing.Union[FeitelijkGebruikOmschrijvingLikeSchema, str, ],
        'feitelijkGebruikOmschrijving[not]': typing.Union[FeitelijkGebruikOmschrijvingNotSchema, list, tuple, ],
        'financieringscodeCode': typing.Union[FinancieringscodeCodeSchema, decimal.Decimal, int, ],
        'financieringscodeCode[gt]': typing.Union[FinancieringscodeCodeGtSchema, decimal.Decimal, int, ],
        'financieringscodeCode[gte]': typing.Union[FinancieringscodeCodeGteSchema, decimal.Decimal, int, ],
        'financieringscodeCode[in]': typing.Union[FinancieringscodeCodeInSchema, list, tuple, ],
        'financieringscodeCode[isnull]': typing.Union[FinancieringscodeCodeIsnullSchema, bool, ],
        'financieringscodeCode[lt]': typing.Union[FinancieringscodeCodeLtSchema, decimal.Decimal, int, ],
        'financieringscodeCode[lte]': typing.Union[FinancieringscodeCodeLteSchema, decimal.Decimal, int, ],
        'financieringscodeCode[not]': typing.Union[FinancieringscodeCodeNotSchema, list, tuple, ],
        'financieringscodeOmschrijving': typing.Union[FinancieringscodeOmschrijvingSchema, str, ],
        'financieringscodeOmschrijving[in]': typing.Union[FinancieringscodeOmschrijvingInSchema, list, tuple, ],
        'financieringscodeOmschrijving[isempty]': typing.Union[FinancieringscodeOmschrijvingIsemptySchema, bool, ],
        'financieringscodeOmschrijving[isnull]': typing.Union[FinancieringscodeOmschrijvingIsnullSchema, bool, ],
        'financieringscodeOmschrijving[like]': typing.Union[FinancieringscodeOmschrijvingLikeSchema, str, ],
        'financieringscodeOmschrijving[not]': typing.Union[FinancieringscodeOmschrijvingNotSchema, list, tuple, ],
        'gebruiksdoel.code': typing.Union[GebruiksdoelCodeSchema, str, ],
        'gebruiksdoel.code[in]': typing.Union[GebruiksdoelCodeInSchema, list, tuple, ],
        'gebruiksdoel.code[isempty]': typing.Union[GebruiksdoelCodeIsemptySchema, bool, ],
        'gebruiksdoel.code[isnull]': typing.Union[GebruiksdoelCodeIsnullSchema, bool, ],
        'gebruiksdoel.code[like]': typing.Union[GebruiksdoelCodeLikeSchema, str, ],
        'gebruiksdoel.code[not]': typing.Union[GebruiksdoelCodeNotSchema, list, tuple, ],
        'gebruiksdoel.omschrijving': typing.Union[GebruiksdoelOmschrijvingSchema, str, ],
        'gebruiksdoel.omschrijving[in]': typing.Union[GebruiksdoelOmschrijvingInSchema, list, tuple, ],
        'gebruiksdoel.omschrijving[isempty]': typing.Union[GebruiksdoelOmschrijvingIsemptySchema, bool, ],
        'gebruiksdoel.omschrijving[isnull]': typing.Union[GebruiksdoelOmschrijvingIsnullSchema, bool, ],
        'gebruiksdoel.omschrijving[like]': typing.Union[GebruiksdoelOmschrijvingLikeSchema, str, ],
        'gebruiksdoel.omschrijving[not]': typing.Union[GebruiksdoelOmschrijvingNotSchema, list, tuple, ],
        'gebruiksdoelGezondheidszorgfunctieCode': typing.Union[GebruiksdoelGezondheidszorgfunctieCodeSchema, decimal.Decimal, int, ],
        'gebruiksdoelGezondheidszorgfunctieCode[gt]': typing.Union[GebruiksdoelGezondheidszorgfunctieCodeGtSchema, decimal.Decimal, int, ],
        'gebruiksdoelGezondheidszorgfunctieCode[gte]': typing.Union[GebruiksdoelGezondheidszorgfunctieCodeGteSchema, decimal.Decimal, int, ],
        'gebruiksdoelGezondheidszorgfunctieCode[in]': typing.Union[GebruiksdoelGezondheidszorgfunctieCodeInSchema, list, tuple, ],
        'gebruiksdoelGezondheidszorgfunctieCode[isnull]': typing.Union[GebruiksdoelGezondheidszorgfunctieCodeIsnullSchema, bool, ],
        'gebruiksdoelGezondheidszorgfunctieCode[lt]': typing.Union[GebruiksdoelGezondheidszorgfunctieCodeLtSchema, decimal.Decimal, int, ],
        'gebruiksdoelGezondheidszorgfunctieCode[lte]': typing.Union[GebruiksdoelGezondheidszorgfunctieCodeLteSchema, decimal.Decimal, int, ],
        'gebruiksdoelGezondheidszorgfunctieCode[not]': typing.Union[GebruiksdoelGezondheidszorgfunctieCodeNotSchema, list, tuple, ],
        'gebruiksdoelGezondheidszorgfunctieOmschrijving': typing.Union[GebruiksdoelGezondheidszorgfunctieOmschrijvingSchema, str, ],
        'gebruiksdoelGezondheidszorgfunctieOmschrijving[in]': typing.Union[GebruiksdoelGezondheidszorgfunctieOmschrijvingInSchema, list, tuple, ],
        'gebruiksdoelGezondheidszorgfunctieOmschrijving[isempty]': typing.Union[GebruiksdoelGezondheidszorgfunctieOmschrijvingIsemptySchema, bool, ],
        'gebruiksdoelGezondheidszorgfunctieOmschrijving[isnull]': typing.Union[GebruiksdoelGezondheidszorgfunctieOmschrijvingIsnullSchema, bool, ],
        'gebruiksdoelGezondheidszorgfunctieOmschrijving[like]': typing.Union[GebruiksdoelGezondheidszorgfunctieOmschrijvingLikeSchema, str, ],
        'gebruiksdoelGezondheidszorgfunctieOmschrijving[not]': typing.Union[GebruiksdoelGezondheidszorgfunctieOmschrijvingNotSchema, list, tuple, ],
        'gebruiksdoelWoonfunctieCode': typing.Union[GebruiksdoelWoonfunctieCodeSchema, decimal.Decimal, int, ],
        'gebruiksdoelWoonfunctieCode[gt]': typing.Union[GebruiksdoelWoonfunctieCodeGtSchema, decimal.Decimal, int, ],
        'gebruiksdoelWoonfunctieCode[gte]': typing.Union[GebruiksdoelWoonfunctieCodeGteSchema, decimal.Decimal, int, ],
        'gebruiksdoelWoonfunctieCode[in]': typing.Union[GebruiksdoelWoonfunctieCodeInSchema, list, tuple, ],
        'gebruiksdoelWoonfunctieCode[isnull]': typing.Union[GebruiksdoelWoonfunctieCodeIsnullSchema, bool, ],
        'gebruiksdoelWoonfunctieCode[lt]': typing.Union[GebruiksdoelWoonfunctieCodeLtSchema, decimal.Decimal, int, ],
        'gebruiksdoelWoonfunctieCode[lte]': typing.Union[GebruiksdoelWoonfunctieCodeLteSchema, decimal.Decimal, int, ],
        'gebruiksdoelWoonfunctieCode[not]': typing.Union[GebruiksdoelWoonfunctieCodeNotSchema, list, tuple, ],
        'gebruiksdoelWoonfunctieOmschrijving': typing.Union[GebruiksdoelWoonfunctieOmschrijvingSchema, str, ],
        'gebruiksdoelWoonfunctieOmschrijving[in]': typing.Union[GebruiksdoelWoonfunctieOmschrijvingInSchema, list, tuple, ],
        'gebruiksdoelWoonfunctieOmschrijving[isempty]': typing.Union[GebruiksdoelWoonfunctieOmschrijvingIsemptySchema, bool, ],
        'gebruiksdoelWoonfunctieOmschrijving[isnull]': typing.Union[GebruiksdoelWoonfunctieOmschrijvingIsnullSchema, bool, ],
        'gebruiksdoelWoonfunctieOmschrijving[like]': typing.Union[GebruiksdoelWoonfunctieOmschrijvingLikeSchema, str, ],
        'gebruiksdoelWoonfunctieOmschrijving[not]': typing.Union[GebruiksdoelWoonfunctieOmschrijvingNotSchema, list, tuple, ],
        'geconstateerd': typing.Union[GeconstateerdSchema, bool, ],
        'geconstateerd[isnull]': typing.Union[GeconstateerdIsnullSchema, bool, ],
        'geldigOp': typing.Union[GeldigOpSchema, str, datetime, ],
        'geldigOp[gt]': typing.Union[GeldigOpGtSchema, str, datetime, ],
        'geldigOp[gte]': typing.Union[GeldigOpGteSchema, str, datetime, ],
        'geldigOp[in]': typing.Union[GeldigOpInSchema, str, datetime, ],
        'geldigOp[isnull]': typing.Union[GeldigOpIsnullSchema, str, datetime, ],
        'geldigOp[lt]': typing.Union[GeldigOpLtSchema, str, datetime, ],
        'geldigOp[lte]': typing.Union[GeldigOpLteSchema, str, datetime, ],
        'geldigOp[not]': typing.Union[GeldigOpNotSchema, str, datetime, ],
        'geometrie': typing.Union[GeometrieSchema, str, ],
        'geometrie[contains]': typing.Union[GeometrieContainsSchema, str, ],
        'geometrie[isnull]': typing.Union[GeometrieIsnullSchema, str, ],
        'geometrie[not]': typing.Union[GeometrieNotSchema, str, ],
        'heeftDossier.dossier': typing.Union[HeeftDossierDossierSchema, str, ],
        'heeftDossier.dossier[in]': typing.Union[HeeftDossierDossierInSchema, list, tuple, ],
        'heeftDossier.dossier[isempty]': typing.Union[HeeftDossierDossierIsemptySchema, bool, ],
        'heeftDossier.dossier[isnull]': typing.Union[HeeftDossierDossierIsnullSchema, bool, ],
        'heeftDossier.dossier[like]': typing.Union[HeeftDossierDossierLikeSchema, str, ],
        'heeftDossier.dossier[not]': typing.Union[HeeftDossierDossierNotSchema, list, tuple, ],
        'heeftHoofdadres.identificatie': typing.Union[HeeftHoofdadresIdentificatieSchema, str, ],
        'heeftHoofdadres.identificatie[in]': typing.Union[HeeftHoofdadresIdentificatieInSchema, list, tuple, ],
        'heeftHoofdadres.identificatie[isempty]': typing.Union[HeeftHoofdadresIdentificatieIsemptySchema, bool, ],
        'heeftHoofdadres.identificatie[isnull]': typing.Union[HeeftHoofdadresIdentificatieIsnullSchema, bool, ],
        'heeftHoofdadres.identificatie[like]': typing.Union[HeeftHoofdadresIdentificatieLikeSchema, str, ],
        'heeftHoofdadres.identificatie[not]': typing.Union[HeeftHoofdadresIdentificatieNotSchema, list, tuple, ],
        'heeftHoofdadres.volgnummer': typing.Union[HeeftHoofdadresVolgnummerSchema, decimal.Decimal, int, ],
        'heeftHoofdadres.volgnummer[gt]': typing.Union[HeeftHoofdadresVolgnummerGtSchema, decimal.Decimal, int, ],
        'heeftHoofdadres.volgnummer[gte]': typing.Union[HeeftHoofdadresVolgnummerGteSchema, decimal.Decimal, int, ],
        'heeftHoofdadres.volgnummer[in]': typing.Union[HeeftHoofdadresVolgnummerInSchema, list, tuple, ],
        'heeftHoofdadres.volgnummer[isnull]': typing.Union[HeeftHoofdadresVolgnummerIsnullSchema, bool, ],
        'heeftHoofdadres.volgnummer[lt]': typing.Union[HeeftHoofdadresVolgnummerLtSchema, decimal.Decimal, int, ],
        'heeftHoofdadres.volgnummer[lte]': typing.Union[HeeftHoofdadresVolgnummerLteSchema, decimal.Decimal, int, ],
        'heeftHoofdadres.volgnummer[not]': typing.Union[HeeftHoofdadresVolgnummerNotSchema, list, tuple, ],
        'heeftNevenadres.identificatie': typing.Union[HeeftNevenadresIdentificatieSchema, str, ],
        'heeftNevenadres.identificatie[in]': typing.Union[HeeftNevenadresIdentificatieInSchema, list, tuple, ],
        'heeftNevenadres.identificatie[isempty]': typing.Union[HeeftNevenadresIdentificatieIsemptySchema, bool, ],
        'heeftNevenadres.identificatie[isnull]': typing.Union[HeeftNevenadresIdentificatieIsnullSchema, bool, ],
        'heeftNevenadres.identificatie[like]': typing.Union[HeeftNevenadresIdentificatieLikeSchema, str, ],
        'heeftNevenadres.identificatie[not]': typing.Union[HeeftNevenadresIdentificatieNotSchema, list, tuple, ],
        'heeftNevenadres.volgnummer': typing.Union[HeeftNevenadresVolgnummerSchema, decimal.Decimal, int, ],
        'heeftNevenadres.volgnummer[gt]': typing.Union[HeeftNevenadresVolgnummerGtSchema, decimal.Decimal, int, ],
        'heeftNevenadres.volgnummer[gte]': typing.Union[HeeftNevenadresVolgnummerGteSchema, decimal.Decimal, int, ],
        'heeftNevenadres.volgnummer[in]': typing.Union[HeeftNevenadresVolgnummerInSchema, list, tuple, ],
        'heeftNevenadres.volgnummer[isnull]': typing.Union[HeeftNevenadresVolgnummerIsnullSchema, bool, ],
        'heeftNevenadres.volgnummer[lt]': typing.Union[HeeftNevenadresVolgnummerLtSchema, decimal.Decimal, int, ],
        'heeftNevenadres.volgnummer[lte]': typing.Union[HeeftNevenadresVolgnummerLteSchema, decimal.Decimal, int, ],
        'heeftNevenadres.volgnummer[not]': typing.Union[HeeftNevenadresVolgnummerNotSchema, list, tuple, ],
        'heeftOnderzoeken.identificatie': typing.Union[HeeftOnderzoekenIdentificatieSchema, str, ],
        'heeftOnderzoeken.identificatie[in]': typing.Union[HeeftOnderzoekenIdentificatieInSchema, list, tuple, ],
        'heeftOnderzoeken.identificatie[isempty]': typing.Union[HeeftOnderzoekenIdentificatieIsemptySchema, bool, ],
        'heeftOnderzoeken.identificatie[isnull]': typing.Union[HeeftOnderzoekenIdentificatieIsnullSchema, bool, ],
        'heeftOnderzoeken.identificatie[like]': typing.Union[HeeftOnderzoekenIdentificatieLikeSchema, str, ],
        'heeftOnderzoeken.identificatie[not]': typing.Union[HeeftOnderzoekenIdentificatieNotSchema, list, tuple, ],
        'heeftOnderzoeken.volgnummer': typing.Union[HeeftOnderzoekenVolgnummerSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[gt]': typing.Union[HeeftOnderzoekenVolgnummerGtSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[gte]': typing.Union[HeeftOnderzoekenVolgnummerGteSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[in]': typing.Union[HeeftOnderzoekenVolgnummerInSchema, list, tuple, ],
        'heeftOnderzoeken.volgnummer[isnull]': typing.Union[HeeftOnderzoekenVolgnummerIsnullSchema, bool, ],
        'heeftOnderzoeken.volgnummer[lt]': typing.Union[HeeftOnderzoekenVolgnummerLtSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[lte]': typing.Union[HeeftOnderzoekenVolgnummerLteSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[not]': typing.Union[HeeftOnderzoekenVolgnummerNotSchema, list, tuple, ],
        'hoogsteBouwlaag': typing.Union[HoogsteBouwlaagSchema, decimal.Decimal, int, ],
        'hoogsteBouwlaag[gt]': typing.Union[HoogsteBouwlaagGtSchema, decimal.Decimal, int, ],
        'hoogsteBouwlaag[gte]': typing.Union[HoogsteBouwlaagGteSchema, decimal.Decimal, int, ],
        'hoogsteBouwlaag[in]': typing.Union[HoogsteBouwlaagInSchema, list, tuple, ],
        'hoogsteBouwlaag[isnull]': typing.Union[HoogsteBouwlaagIsnullSchema, bool, ],
        'hoogsteBouwlaag[lt]': typing.Union[HoogsteBouwlaagLtSchema, decimal.Decimal, int, ],
        'hoogsteBouwlaag[lte]': typing.Union[HoogsteBouwlaagLteSchema, decimal.Decimal, int, ],
        'hoogsteBouwlaag[not]': typing.Union[HoogsteBouwlaagNotSchema, list, tuple, ],
        'id': typing.Union[IdSchema, str, ],
        'id[in]': typing.Union[IdInSchema, list, tuple, ],
        'id[isempty]': typing.Union[IdIsemptySchema, bool, ],
        'id[isnull]': typing.Union[IdIsnullSchema, bool, ],
        'id[like]': typing.Union[IdLikeSchema, str, ],
        'id[not]': typing.Union[IdNotSchema, list, tuple, ],
        'identificatie': typing.Union[IdentificatieSchema, str, ],
        'identificatie[in]': typing.Union[IdentificatieInSchema, list, tuple, ],
        'identificatie[isempty]': typing.Union[IdentificatieIsemptySchema, bool, ],
        'identificatie[isnull]': typing.Union[IdentificatieIsnullSchema, bool, ],
        'identificatie[like]': typing.Union[IdentificatieLikeSchema, str, ],
        'identificatie[not]': typing.Union[IdentificatieNotSchema, list, tuple, ],
        'indicatieWoningvoorraad': typing.Union[IndicatieWoningvoorraadSchema, str, ],
        'indicatieWoningvoorraad[in]': typing.Union[IndicatieWoningvoorraadInSchema, list, tuple, ],
        'indicatieWoningvoorraad[isempty]': typing.Union[IndicatieWoningvoorraadIsemptySchema, bool, ],
        'indicatieWoningvoorraad[isnull]': typing.Union[IndicatieWoningvoorraadIsnullSchema, bool, ],
        'indicatieWoningvoorraad[like]': typing.Union[IndicatieWoningvoorraadLikeSchema, str, ],
        'indicatieWoningvoorraad[not]': typing.Union[IndicatieWoningvoorraadNotSchema, list, tuple, ],
        'laagsteBouwlaag': typing.Union[LaagsteBouwlaagSchema, decimal.Decimal, int, ],
        'laagsteBouwlaag[gt]': typing.Union[LaagsteBouwlaagGtSchema, decimal.Decimal, int, ],
        'laagsteBouwlaag[gte]': typing.Union[LaagsteBouwlaagGteSchema, decimal.Decimal, int, ],
        'laagsteBouwlaag[in]': typing.Union[LaagsteBouwlaagInSchema, list, tuple, ],
        'laagsteBouwlaag[isnull]': typing.Union[LaagsteBouwlaagIsnullSchema, bool, ],
        'laagsteBouwlaag[lt]': typing.Union[LaagsteBouwlaagLtSchema, decimal.Decimal, int, ],
        'laagsteBouwlaag[lte]': typing.Union[LaagsteBouwlaagLteSchema, decimal.Decimal, int, ],
        'laagsteBouwlaag[not]': typing.Union[LaagsteBouwlaagNotSchema, list, tuple, ],
        'ligtInBuurt.identificatie': typing.Union[LigtInBuurtIdentificatieSchema, str, ],
        'ligtInBuurt.identificatie[in]': typing.Union[LigtInBuurtIdentificatieInSchema, list, tuple, ],
        'ligtInBuurt.identificatie[isempty]': typing.Union[LigtInBuurtIdentificatieIsemptySchema, bool, ],
        'ligtInBuurt.identificatie[isnull]': typing.Union[LigtInBuurtIdentificatieIsnullSchema, bool, ],
        'ligtInBuurt.identificatie[like]': typing.Union[LigtInBuurtIdentificatieLikeSchema, str, ],
        'ligtInBuurt.identificatie[not]': typing.Union[LigtInBuurtIdentificatieNotSchema, list, tuple, ],
        'ligtInBuurt.volgnummer': typing.Union[LigtInBuurtVolgnummerSchema, decimal.Decimal, int, ],
        'ligtInBuurt.volgnummer[gt]': typing.Union[LigtInBuurtVolgnummerGtSchema, decimal.Decimal, int, ],
        'ligtInBuurt.volgnummer[gte]': typing.Union[LigtInBuurtVolgnummerGteSchema, decimal.Decimal, int, ],
        'ligtInBuurt.volgnummer[in]': typing.Union[LigtInBuurtVolgnummerInSchema, list, tuple, ],
        'ligtInBuurt.volgnummer[isnull]': typing.Union[LigtInBuurtVolgnummerIsnullSchema, bool, ],
        'ligtInBuurt.volgnummer[lt]': typing.Union[LigtInBuurtVolgnummerLtSchema, decimal.Decimal, int, ],
        'ligtInBuurt.volgnummer[lte]': typing.Union[LigtInBuurtVolgnummerLteSchema, decimal.Decimal, int, ],
        'ligtInBuurt.volgnummer[not]': typing.Union[LigtInBuurtVolgnummerNotSchema, list, tuple, ],
        'ligtInPanden.identificatie': typing.Union[LigtInPandenIdentificatieSchema, str, ],
        'ligtInPanden.identificatie[in]': typing.Union[LigtInPandenIdentificatieInSchema, list, tuple, ],
        'ligtInPanden.identificatie[isempty]': typing.Union[LigtInPandenIdentificatieIsemptySchema, bool, ],
        'ligtInPanden.identificatie[isnull]': typing.Union[LigtInPandenIdentificatieIsnullSchema, bool, ],
        'ligtInPanden.identificatie[like]': typing.Union[LigtInPandenIdentificatieLikeSchema, str, ],
        'ligtInPanden.identificatie[not]': typing.Union[LigtInPandenIdentificatieNotSchema, list, tuple, ],
        'ligtInPanden.volgnummer': typing.Union[LigtInPandenVolgnummerSchema, decimal.Decimal, int, ],
        'ligtInPanden.volgnummer[gt]': typing.Union[LigtInPandenVolgnummerGtSchema, decimal.Decimal, int, ],
        'ligtInPanden.volgnummer[gte]': typing.Union[LigtInPandenVolgnummerGteSchema, decimal.Decimal, int, ],
        'ligtInPanden.volgnummer[in]': typing.Union[LigtInPandenVolgnummerInSchema, list, tuple, ],
        'ligtInPanden.volgnummer[isnull]': typing.Union[LigtInPandenVolgnummerIsnullSchema, bool, ],
        'ligtInPanden.volgnummer[lt]': typing.Union[LigtInPandenVolgnummerLtSchema, decimal.Decimal, int, ],
        'ligtInPanden.volgnummer[lte]': typing.Union[LigtInPandenVolgnummerLteSchema, decimal.Decimal, int, ],
        'ligtInPanden.volgnummer[not]': typing.Union[LigtInPandenVolgnummerNotSchema, list, tuple, ],
        'oppervlakte': typing.Union[OppervlakteSchema, decimal.Decimal, int, ],
        'oppervlakte[gt]': typing.Union[OppervlakteGtSchema, decimal.Decimal, int, ],
        'oppervlakte[gte]': typing.Union[OppervlakteGteSchema, decimal.Decimal, int, ],
        'oppervlakte[in]': typing.Union[OppervlakteInSchema, list, tuple, ],
        'oppervlakte[isnull]': typing.Union[OppervlakteIsnullSchema, bool, ],
        'oppervlakte[lt]': typing.Union[OppervlakteLtSchema, decimal.Decimal, int, ],
        'oppervlakte[lte]': typing.Union[OppervlakteLteSchema, decimal.Decimal, int, ],
        'oppervlakte[not]': typing.Union[OppervlakteNotSchema, list, tuple, ],
        'page': typing.Union[PageSchema, decimal.Decimal, int, ],
        'redenafvoerCode': typing.Union[RedenafvoerCodeSchema, decimal.Decimal, int, ],
        'redenafvoerCode[gt]': typing.Union[RedenafvoerCodeGtSchema, decimal.Decimal, int, ],
        'redenafvoerCode[gte]': typing.Union[RedenafvoerCodeGteSchema, decimal.Decimal, int, ],
        'redenafvoerCode[in]': typing.Union[RedenafvoerCodeInSchema, list, tuple, ],
        'redenafvoerCode[isnull]': typing.Union[RedenafvoerCodeIsnullSchema, bool, ],
        'redenafvoerCode[lt]': typing.Union[RedenafvoerCodeLtSchema, decimal.Decimal, int, ],
        'redenafvoerCode[lte]': typing.Union[RedenafvoerCodeLteSchema, decimal.Decimal, int, ],
        'redenafvoerCode[not]': typing.Union[RedenafvoerCodeNotSchema, list, tuple, ],
        'redenafvoerOmschrijving': typing.Union[RedenafvoerOmschrijvingSchema, str, ],
        'redenafvoerOmschrijving[in]': typing.Union[RedenafvoerOmschrijvingInSchema, list, tuple, ],
        'redenafvoerOmschrijving[isempty]': typing.Union[RedenafvoerOmschrijvingIsemptySchema, bool, ],
        'redenafvoerOmschrijving[isnull]': typing.Union[RedenafvoerOmschrijvingIsnullSchema, bool, ],
        'redenafvoerOmschrijving[like]': typing.Union[RedenafvoerOmschrijvingLikeSchema, str, ],
        'redenafvoerOmschrijving[not]': typing.Union[RedenafvoerOmschrijvingNotSchema, list, tuple, ],
        'redenopvoerCode': typing.Union[RedenopvoerCodeSchema, decimal.Decimal, int, ],
        'redenopvoerCode[gt]': typing.Union[RedenopvoerCodeGtSchema, decimal.Decimal, int, ],
        'redenopvoerCode[gte]': typing.Union[RedenopvoerCodeGteSchema, decimal.Decimal, int, ],
        'redenopvoerCode[in]': typing.Union[RedenopvoerCodeInSchema, list, tuple, ],
        'redenopvoerCode[isnull]': typing.Union[RedenopvoerCodeIsnullSchema, bool, ],
        'redenopvoerCode[lt]': typing.Union[RedenopvoerCodeLtSchema, decimal.Decimal, int, ],
        'redenopvoerCode[lte]': typing.Union[RedenopvoerCodeLteSchema, decimal.Decimal, int, ],
        'redenopvoerCode[not]': typing.Union[RedenopvoerCodeNotSchema, list, tuple, ],
        'redenopvoerOmschrijving': typing.Union[RedenopvoerOmschrijvingSchema, str, ],
        'redenopvoerOmschrijving[in]': typing.Union[RedenopvoerOmschrijvingInSchema, list, tuple, ],
        'redenopvoerOmschrijving[isempty]': typing.Union[RedenopvoerOmschrijvingIsemptySchema, bool, ],
        'redenopvoerOmschrijving[isnull]': typing.Union[RedenopvoerOmschrijvingIsnullSchema, bool, ],
        'redenopvoerOmschrijving[like]': typing.Union[RedenopvoerOmschrijvingLikeSchema, str, ],
        'redenopvoerOmschrijving[not]': typing.Union[RedenopvoerOmschrijvingNotSchema, list, tuple, ],
        'registratiedatum': typing.Union[RegistratiedatumSchema, str, datetime, ],
        'registratiedatum[gt]': typing.Union[RegistratiedatumGtSchema, str, datetime, ],
        'registratiedatum[gte]': typing.Union[RegistratiedatumGteSchema, str, datetime, ],
        'registratiedatum[in]': typing.Union[RegistratiedatumInSchema, list, tuple, ],
        'registratiedatum[isnull]': typing.Union[RegistratiedatumIsnullSchema, bool, ],
        'registratiedatum[lt]': typing.Union[RegistratiedatumLtSchema, str, datetime, ],
        'registratiedatum[lte]': typing.Union[RegistratiedatumLteSchema, str, datetime, ],
        'registratiedatum[not]': typing.Union[RegistratiedatumNotSchema, list, tuple, ],
        'statusCode': typing.Union[StatusCodeSchema, decimal.Decimal, int, ],
        'statusCode[gt]': typing.Union[StatusCodeGtSchema, decimal.Decimal, int, ],
        'statusCode[gte]': typing.Union[StatusCodeGteSchema, decimal.Decimal, int, ],
        'statusCode[in]': typing.Union[StatusCodeInSchema, list, tuple, ],
        'statusCode[isnull]': typing.Union[StatusCodeIsnullSchema, bool, ],
        'statusCode[lt]': typing.Union[StatusCodeLtSchema, decimal.Decimal, int, ],
        'statusCode[lte]': typing.Union[StatusCodeLteSchema, decimal.Decimal, int, ],
        'statusCode[not]': typing.Union[StatusCodeNotSchema, list, tuple, ],
        'statusOmschrijving': typing.Union[StatusOmschrijvingSchema, str, ],
        'statusOmschrijving[in]': typing.Union[StatusOmschrijvingInSchema, list, tuple, ],
        'statusOmschrijving[isempty]': typing.Union[StatusOmschrijvingIsemptySchema, bool, ],
        'statusOmschrijving[isnull]': typing.Union[StatusOmschrijvingIsnullSchema, bool, ],
        'statusOmschrijving[like]': typing.Union[StatusOmschrijvingLikeSchema, str, ],
        'statusOmschrijving[not]': typing.Union[StatusOmschrijvingNotSchema, list, tuple, ],
        'toegang.code': typing.Union[ToegangCodeSchema, str, ],
        'toegang.code[in]': typing.Union[ToegangCodeInSchema, list, tuple, ],
        'toegang.code[isempty]': typing.Union[ToegangCodeIsemptySchema, bool, ],
        'toegang.code[isnull]': typing.Union[ToegangCodeIsnullSchema, bool, ],
        'toegang.code[like]': typing.Union[ToegangCodeLikeSchema, str, ],
        'toegang.code[not]': typing.Union[ToegangCodeNotSchema, list, tuple, ],
        'toegang.omschrijving': typing.Union[ToegangOmschrijvingSchema, str, ],
        'toegang.omschrijving[in]': typing.Union[ToegangOmschrijvingInSchema, list, tuple, ],
        'toegang.omschrijving[isempty]': typing.Union[ToegangOmschrijvingIsemptySchema, bool, ],
        'toegang.omschrijving[isnull]': typing.Union[ToegangOmschrijvingIsnullSchema, bool, ],
        'toegang.omschrijving[like]': typing.Union[ToegangOmschrijvingLikeSchema, str, ],
        'toegang.omschrijving[not]': typing.Union[ToegangOmschrijvingNotSchema, list, tuple, ],
        'verdiepingToegang': typing.Union[VerdiepingToegangSchema, decimal.Decimal, int, ],
        'verdiepingToegang[gt]': typing.Union[VerdiepingToegangGtSchema, decimal.Decimal, int, ],
        'verdiepingToegang[gte]': typing.Union[VerdiepingToegangGteSchema, decimal.Decimal, int, ],
        'verdiepingToegang[in]': typing.Union[VerdiepingToegangInSchema, list, tuple, ],
        'verdiepingToegang[isnull]': typing.Union[VerdiepingToegangIsnullSchema, bool, ],
        'verdiepingToegang[lt]': typing.Union[VerdiepingToegangLtSchema, decimal.Decimal, int, ],
        'verdiepingToegang[lte]': typing.Union[VerdiepingToegangLteSchema, decimal.Decimal, int, ],
        'verdiepingToegang[not]': typing.Union[VerdiepingToegangNotSchema, list, tuple, ],
        'volgnummer': typing.Union[VolgnummerSchema, decimal.Decimal, int, ],
        'volgnummer[gt]': typing.Union[VolgnummerGtSchema, decimal.Decimal, int, ],
        'volgnummer[gte]': typing.Union[VolgnummerGteSchema, decimal.Decimal, int, ],
        'volgnummer[in]': typing.Union[VolgnummerInSchema, list, tuple, ],
        'volgnummer[isnull]': typing.Union[VolgnummerIsnullSchema, bool, ],
        'volgnummer[lt]': typing.Union[VolgnummerLtSchema, decimal.Decimal, int, ],
        'volgnummer[lte]': typing.Union[VolgnummerLteSchema, decimal.Decimal, int, ],
        'volgnummer[not]': typing.Union[VolgnummerNotSchema, list, tuple, ],
    },
    total=False
)


class RequestQueryParams(RequestRequiredQueryParams, RequestOptionalQueryParams):
    pass


request_query_count = api_client.QueryParameter(
    name="_count",
    style=api_client.ParameterStyle.FORM,
    schema=CountSchema,
    explode=True,
)
request_query_expand = api_client.QueryParameter(
    name="_expand",
    style=api_client.ParameterStyle.FORM,
    schema=ExpandSchema,
    explode=True,
)
request_query_expand_scope = api_client.QueryParameter(
    name="_expandScope",
    style=api_client.ParameterStyle.FORM,
    schema=ExpandScopeSchema,
    explode=True,
)
request_query_fields = api_client.QueryParameter(
    name="_fields",
    style=api_client.ParameterStyle.FORM,
    schema=FieldsSchema,
    explode=True,
)
request_query_format = api_client.QueryParameter(
    name="_format",
    style=api_client.ParameterStyle.FORM,
    schema=FormatSchema,
    explode=True,
)
request_query_page_size = api_client.QueryParameter(
    name="_pageSize",
    style=api_client.ParameterStyle.FORM,
    schema=PageSizeSchema,
    explode=True,
)
request_query_sort = api_client.QueryParameter(
    name="_sort",
    style=api_client.ParameterStyle.FORM,
    schema=SortSchema,
    explode=True,
)
request_query_aantal_bouwlagen = api_client.QueryParameter(
    name="aantalBouwlagen",
    style=api_client.ParameterStyle.FORM,
    schema=AantalBouwlagenSchema,
    explode=True,
)
request_query_aantal_bouwlagen_gt = api_client.QueryParameter(
    name="aantalBouwlagen[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalBouwlagenGtSchema,
    explode=True,
)
request_query_aantal_bouwlagen_gte = api_client.QueryParameter(
    name="aantalBouwlagen[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalBouwlagenGteSchema,
    explode=True,
)
request_query_aantal_bouwlagen_in = api_client.QueryParameter(
    name="aantalBouwlagen[in]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalBouwlagenInSchema,
)
request_query_aantal_bouwlagen_isnull = api_client.QueryParameter(
    name="aantalBouwlagen[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalBouwlagenIsnullSchema,
    explode=True,
)
request_query_aantal_bouwlagen_lt = api_client.QueryParameter(
    name="aantalBouwlagen[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalBouwlagenLtSchema,
    explode=True,
)
request_query_aantal_bouwlagen_lte = api_client.QueryParameter(
    name="aantalBouwlagen[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalBouwlagenLteSchema,
    explode=True,
)
request_query_aantal_bouwlagen_not = api_client.QueryParameter(
    name="aantalBouwlagen[not]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalBouwlagenNotSchema,
    explode=True,
)
request_query_aantal_eenheden_complex = api_client.QueryParameter(
    name="aantalEenhedenComplex",
    style=api_client.ParameterStyle.FORM,
    schema=AantalEenhedenComplexSchema,
    explode=True,
)
request_query_aantal_eenheden_complex_gt = api_client.QueryParameter(
    name="aantalEenhedenComplex[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalEenhedenComplexGtSchema,
    explode=True,
)
request_query_aantal_eenheden_complex_gte = api_client.QueryParameter(
    name="aantalEenhedenComplex[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalEenhedenComplexGteSchema,
    explode=True,
)
request_query_aantal_eenheden_complex_in = api_client.QueryParameter(
    name="aantalEenhedenComplex[in]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalEenhedenComplexInSchema,
)
request_query_aantal_eenheden_complex_isnull = api_client.QueryParameter(
    name="aantalEenhedenComplex[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalEenhedenComplexIsnullSchema,
    explode=True,
)
request_query_aantal_eenheden_complex_lt = api_client.QueryParameter(
    name="aantalEenhedenComplex[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalEenhedenComplexLtSchema,
    explode=True,
)
request_query_aantal_eenheden_complex_lte = api_client.QueryParameter(
    name="aantalEenhedenComplex[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalEenhedenComplexLteSchema,
    explode=True,
)
request_query_aantal_eenheden_complex_not = api_client.QueryParameter(
    name="aantalEenhedenComplex[not]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalEenhedenComplexNotSchema,
    explode=True,
)
request_query_aantal_kamers = api_client.QueryParameter(
    name="aantalKamers",
    style=api_client.ParameterStyle.FORM,
    schema=AantalKamersSchema,
    explode=True,
)
request_query_aantal_kamers_gt = api_client.QueryParameter(
    name="aantalKamers[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalKamersGtSchema,
    explode=True,
)
request_query_aantal_kamers_gte = api_client.QueryParameter(
    name="aantalKamers[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalKamersGteSchema,
    explode=True,
)
request_query_aantal_kamers_in = api_client.QueryParameter(
    name="aantalKamers[in]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalKamersInSchema,
)
request_query_aantal_kamers_isnull = api_client.QueryParameter(
    name="aantalKamers[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalKamersIsnullSchema,
    explode=True,
)
request_query_aantal_kamers_lt = api_client.QueryParameter(
    name="aantalKamers[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalKamersLtSchema,
    explode=True,
)
request_query_aantal_kamers_lte = api_client.QueryParameter(
    name="aantalKamers[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalKamersLteSchema,
    explode=True,
)
request_query_aantal_kamers_not = api_client.QueryParameter(
    name="aantalKamers[not]",
    style=api_client.ParameterStyle.FORM,
    schema=AantalKamersNotSchema,
    explode=True,
)
request_query_bagproces_code = api_client.QueryParameter(
    name="bagprocesCode",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeSchema,
    explode=True,
)
request_query_bagproces_code_gt = api_client.QueryParameter(
    name="bagprocesCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeGtSchema,
    explode=True,
)
request_query_bagproces_code_gte = api_client.QueryParameter(
    name="bagprocesCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeGteSchema,
    explode=True,
)
request_query_bagproces_code_in = api_client.QueryParameter(
    name="bagprocesCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeInSchema,
)
request_query_bagproces_code_isnull = api_client.QueryParameter(
    name="bagprocesCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeIsnullSchema,
    explode=True,
)
request_query_bagproces_code_lt = api_client.QueryParameter(
    name="bagprocesCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeLtSchema,
    explode=True,
)
request_query_bagproces_code_lte = api_client.QueryParameter(
    name="bagprocesCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeLteSchema,
    explode=True,
)
request_query_bagproces_code_not = api_client.QueryParameter(
    name="bagprocesCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeNotSchema,
    explode=True,
)
request_query_bagproces_omschrijving = api_client.QueryParameter(
    name="bagprocesOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingSchema,
    explode=True,
)
request_query_bagproces_omschrijving_in = api_client.QueryParameter(
    name="bagprocesOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingInSchema,
)
request_query_bagproces_omschrijving_isempty = api_client.QueryParameter(
    name="bagprocesOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingIsemptySchema,
    explode=True,
)
request_query_bagproces_omschrijving_isnull = api_client.QueryParameter(
    name="bagprocesOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingIsnullSchema,
    explode=True,
)
request_query_bagproces_omschrijving_like = api_client.QueryParameter(
    name="bagprocesOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingLikeSchema,
    explode=True,
)
request_query_bagproces_omschrijving_not = api_client.QueryParameter(
    name="bagprocesOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingNotSchema,
    explode=True,
)
request_query_begin_geldigheid = api_client.QueryParameter(
    name="beginGeldigheid",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidSchema,
    explode=True,
)
request_query_begin_geldigheid_gt = api_client.QueryParameter(
    name="beginGeldigheid[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidGtSchema,
    explode=True,
)
request_query_begin_geldigheid_gte = api_client.QueryParameter(
    name="beginGeldigheid[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidGteSchema,
    explode=True,
)
request_query_begin_geldigheid_in = api_client.QueryParameter(
    name="beginGeldigheid[in]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidInSchema,
)
request_query_begin_geldigheid_isnull = api_client.QueryParameter(
    name="beginGeldigheid[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidIsnullSchema,
    explode=True,
)
request_query_begin_geldigheid_lt = api_client.QueryParameter(
    name="beginGeldigheid[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidLtSchema,
    explode=True,
)
request_query_begin_geldigheid_lte = api_client.QueryParameter(
    name="beginGeldigheid[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidLteSchema,
    explode=True,
)
request_query_begin_geldigheid_not = api_client.QueryParameter(
    name="beginGeldigheid[not]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidNotSchema,
    explode=True,
)
request_query_cbs_nummer = api_client.QueryParameter(
    name="cbsNummer",
    style=api_client.ParameterStyle.FORM,
    schema=CbsNummerSchema,
    explode=True,
)
request_query_cbs_nummer_in = api_client.QueryParameter(
    name="cbsNummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=CbsNummerInSchema,
)
request_query_cbs_nummer_isempty = api_client.QueryParameter(
    name="cbsNummer[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=CbsNummerIsemptySchema,
    explode=True,
)
request_query_cbs_nummer_isnull = api_client.QueryParameter(
    name="cbsNummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=CbsNummerIsnullSchema,
    explode=True,
)
request_query_cbs_nummer_like = api_client.QueryParameter(
    name="cbsNummer[like]",
    style=api_client.ParameterStyle.FORM,
    schema=CbsNummerLikeSchema,
    explode=True,
)
request_query_cbs_nummer_not = api_client.QueryParameter(
    name="cbsNummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=CbsNummerNotSchema,
    explode=True,
)
request_query_documentdatum = api_client.QueryParameter(
    name="documentdatum",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumSchema,
    explode=True,
)
request_query_documentdatum_gt = api_client.QueryParameter(
    name="documentdatum[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumGtSchema,
    explode=True,
)
request_query_documentdatum_gte = api_client.QueryParameter(
    name="documentdatum[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumGteSchema,
    explode=True,
)
request_query_documentdatum_in = api_client.QueryParameter(
    name="documentdatum[in]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumInSchema,
)
request_query_documentdatum_isnull = api_client.QueryParameter(
    name="documentdatum[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumIsnullSchema,
    explode=True,
)
request_query_documentdatum_lt = api_client.QueryParameter(
    name="documentdatum[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumLtSchema,
    explode=True,
)
request_query_documentdatum_lte = api_client.QueryParameter(
    name="documentdatum[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumLteSchema,
    explode=True,
)
request_query_documentdatum_not = api_client.QueryParameter(
    name="documentdatum[not]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumNotSchema,
    explode=True,
)
request_query_documentnummer = api_client.QueryParameter(
    name="documentnummer",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerSchema,
    explode=True,
)
request_query_documentnummer_in = api_client.QueryParameter(
    name="documentnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerInSchema,
)
request_query_documentnummer_isempty = api_client.QueryParameter(
    name="documentnummer[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerIsemptySchema,
    explode=True,
)
request_query_documentnummer_isnull = api_client.QueryParameter(
    name="documentnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerIsnullSchema,
    explode=True,
)
request_query_documentnummer_like = api_client.QueryParameter(
    name="documentnummer[like]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerLikeSchema,
    explode=True,
)
request_query_documentnummer_not = api_client.QueryParameter(
    name="documentnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerNotSchema,
    explode=True,
)
request_query_eigendomsverhouding_code = api_client.QueryParameter(
    name="eigendomsverhoudingCode",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingCodeSchema,
    explode=True,
)
request_query_eigendomsverhouding_code_gt = api_client.QueryParameter(
    name="eigendomsverhoudingCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingCodeGtSchema,
    explode=True,
)
request_query_eigendomsverhouding_code_gte = api_client.QueryParameter(
    name="eigendomsverhoudingCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingCodeGteSchema,
    explode=True,
)
request_query_eigendomsverhouding_code_in = api_client.QueryParameter(
    name="eigendomsverhoudingCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingCodeInSchema,
)
request_query_eigendomsverhouding_code_isnull = api_client.QueryParameter(
    name="eigendomsverhoudingCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingCodeIsnullSchema,
    explode=True,
)
request_query_eigendomsverhouding_code_lt = api_client.QueryParameter(
    name="eigendomsverhoudingCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingCodeLtSchema,
    explode=True,
)
request_query_eigendomsverhouding_code_lte = api_client.QueryParameter(
    name="eigendomsverhoudingCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingCodeLteSchema,
    explode=True,
)
request_query_eigendomsverhouding_code_not = api_client.QueryParameter(
    name="eigendomsverhoudingCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingCodeNotSchema,
    explode=True,
)
request_query_eigendomsverhouding_omschrijving = api_client.QueryParameter(
    name="eigendomsverhoudingOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingOmschrijvingSchema,
    explode=True,
)
request_query_eigendomsverhouding_omschrijving_in = api_client.QueryParameter(
    name="eigendomsverhoudingOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingOmschrijvingInSchema,
)
request_query_eigendomsverhouding_omschrijving_isempty = api_client.QueryParameter(
    name="eigendomsverhoudingOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingOmschrijvingIsemptySchema,
    explode=True,
)
request_query_eigendomsverhouding_omschrijving_isnull = api_client.QueryParameter(
    name="eigendomsverhoudingOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingOmschrijvingIsnullSchema,
    explode=True,
)
request_query_eigendomsverhouding_omschrijving_like = api_client.QueryParameter(
    name="eigendomsverhoudingOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingOmschrijvingLikeSchema,
    explode=True,
)
request_query_eigendomsverhouding_omschrijving_not = api_client.QueryParameter(
    name="eigendomsverhoudingOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=EigendomsverhoudingOmschrijvingNotSchema,
    explode=True,
)
request_query_eind_geldigheid = api_client.QueryParameter(
    name="eindGeldigheid",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidSchema,
    explode=True,
)
request_query_eind_geldigheid_gt = api_client.QueryParameter(
    name="eindGeldigheid[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidGtSchema,
    explode=True,
)
request_query_eind_geldigheid_gte = api_client.QueryParameter(
    name="eindGeldigheid[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidGteSchema,
    explode=True,
)
request_query_eind_geldigheid_in = api_client.QueryParameter(
    name="eindGeldigheid[in]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidInSchema,
)
request_query_eind_geldigheid_isnull = api_client.QueryParameter(
    name="eindGeldigheid[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidIsnullSchema,
    explode=True,
)
request_query_eind_geldigheid_lt = api_client.QueryParameter(
    name="eindGeldigheid[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidLtSchema,
    explode=True,
)
request_query_eind_geldigheid_lte = api_client.QueryParameter(
    name="eindGeldigheid[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidLteSchema,
    explode=True,
)
request_query_eind_geldigheid_not = api_client.QueryParameter(
    name="eindGeldigheid[not]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidNotSchema,
    explode=True,
)
request_query_feitelijk_gebruik_code = api_client.QueryParameter(
    name="feitelijkGebruikCode",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikCodeSchema,
    explode=True,
)
request_query_feitelijk_gebruik_code_gt = api_client.QueryParameter(
    name="feitelijkGebruikCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikCodeGtSchema,
    explode=True,
)
request_query_feitelijk_gebruik_code_gte = api_client.QueryParameter(
    name="feitelijkGebruikCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikCodeGteSchema,
    explode=True,
)
request_query_feitelijk_gebruik_code_in = api_client.QueryParameter(
    name="feitelijkGebruikCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikCodeInSchema,
)
request_query_feitelijk_gebruik_code_isnull = api_client.QueryParameter(
    name="feitelijkGebruikCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikCodeIsnullSchema,
    explode=True,
)
request_query_feitelijk_gebruik_code_lt = api_client.QueryParameter(
    name="feitelijkGebruikCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikCodeLtSchema,
    explode=True,
)
request_query_feitelijk_gebruik_code_lte = api_client.QueryParameter(
    name="feitelijkGebruikCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikCodeLteSchema,
    explode=True,
)
request_query_feitelijk_gebruik_code_not = api_client.QueryParameter(
    name="feitelijkGebruikCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikCodeNotSchema,
    explode=True,
)
request_query_feitelijk_gebruik_omschrijving = api_client.QueryParameter(
    name="feitelijkGebruikOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikOmschrijvingSchema,
    explode=True,
)
request_query_feitelijk_gebruik_omschrijving_in = api_client.QueryParameter(
    name="feitelijkGebruikOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikOmschrijvingInSchema,
)
request_query_feitelijk_gebruik_omschrijving_isempty = api_client.QueryParameter(
    name="feitelijkGebruikOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikOmschrijvingIsemptySchema,
    explode=True,
)
request_query_feitelijk_gebruik_omschrijving_isnull = api_client.QueryParameter(
    name="feitelijkGebruikOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikOmschrijvingIsnullSchema,
    explode=True,
)
request_query_feitelijk_gebruik_omschrijving_like = api_client.QueryParameter(
    name="feitelijkGebruikOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikOmschrijvingLikeSchema,
    explode=True,
)
request_query_feitelijk_gebruik_omschrijving_not = api_client.QueryParameter(
    name="feitelijkGebruikOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=FeitelijkGebruikOmschrijvingNotSchema,
    explode=True,
)
request_query_financieringscode_code = api_client.QueryParameter(
    name="financieringscodeCode",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeCodeSchema,
    explode=True,
)
request_query_financieringscode_code_gt = api_client.QueryParameter(
    name="financieringscodeCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeCodeGtSchema,
    explode=True,
)
request_query_financieringscode_code_gte = api_client.QueryParameter(
    name="financieringscodeCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeCodeGteSchema,
    explode=True,
)
request_query_financieringscode_code_in = api_client.QueryParameter(
    name="financieringscodeCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeCodeInSchema,
)
request_query_financieringscode_code_isnull = api_client.QueryParameter(
    name="financieringscodeCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeCodeIsnullSchema,
    explode=True,
)
request_query_financieringscode_code_lt = api_client.QueryParameter(
    name="financieringscodeCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeCodeLtSchema,
    explode=True,
)
request_query_financieringscode_code_lte = api_client.QueryParameter(
    name="financieringscodeCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeCodeLteSchema,
    explode=True,
)
request_query_financieringscode_code_not = api_client.QueryParameter(
    name="financieringscodeCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeCodeNotSchema,
    explode=True,
)
request_query_financieringscode_omschrijving = api_client.QueryParameter(
    name="financieringscodeOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeOmschrijvingSchema,
    explode=True,
)
request_query_financieringscode_omschrijving_in = api_client.QueryParameter(
    name="financieringscodeOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeOmschrijvingInSchema,
)
request_query_financieringscode_omschrijving_isempty = api_client.QueryParameter(
    name="financieringscodeOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeOmschrijvingIsemptySchema,
    explode=True,
)
request_query_financieringscode_omschrijving_isnull = api_client.QueryParameter(
    name="financieringscodeOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeOmschrijvingIsnullSchema,
    explode=True,
)
request_query_financieringscode_omschrijving_like = api_client.QueryParameter(
    name="financieringscodeOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeOmschrijvingLikeSchema,
    explode=True,
)
request_query_financieringscode_omschrijving_not = api_client.QueryParameter(
    name="financieringscodeOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=FinancieringscodeOmschrijvingNotSchema,
    explode=True,
)
request_query_gebruiksdoel_code = api_client.QueryParameter(
    name="gebruiksdoel.code",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelCodeSchema,
    explode=True,
)
request_query_gebruiksdoel_code_in = api_client.QueryParameter(
    name="gebruiksdoel.code[in]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelCodeInSchema,
)
request_query_gebruiksdoel_code_isempty = api_client.QueryParameter(
    name="gebruiksdoel.code[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelCodeIsemptySchema,
    explode=True,
)
request_query_gebruiksdoel_code_isnull = api_client.QueryParameter(
    name="gebruiksdoel.code[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelCodeIsnullSchema,
    explode=True,
)
request_query_gebruiksdoel_code_like = api_client.QueryParameter(
    name="gebruiksdoel.code[like]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelCodeLikeSchema,
    explode=True,
)
request_query_gebruiksdoel_code_not = api_client.QueryParameter(
    name="gebruiksdoel.code[not]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelCodeNotSchema,
    explode=True,
)
request_query_gebruiksdoel_omschrijving = api_client.QueryParameter(
    name="gebruiksdoel.omschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelOmschrijvingSchema,
    explode=True,
)
request_query_gebruiksdoel_omschrijving_in = api_client.QueryParameter(
    name="gebruiksdoel.omschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelOmschrijvingInSchema,
)
request_query_gebruiksdoel_omschrijving_isempty = api_client.QueryParameter(
    name="gebruiksdoel.omschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelOmschrijvingIsemptySchema,
    explode=True,
)
request_query_gebruiksdoel_omschrijving_isnull = api_client.QueryParameter(
    name="gebruiksdoel.omschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelOmschrijvingIsnullSchema,
    explode=True,
)
request_query_gebruiksdoel_omschrijving_like = api_client.QueryParameter(
    name="gebruiksdoel.omschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelOmschrijvingLikeSchema,
    explode=True,
)
request_query_gebruiksdoel_omschrijving_not = api_client.QueryParameter(
    name="gebruiksdoel.omschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelOmschrijvingNotSchema,
    explode=True,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_code = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieCode",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieCodeSchema,
    explode=True,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_code_gt = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieCodeGtSchema,
    explode=True,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_code_gte = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieCodeGteSchema,
    explode=True,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_code_in = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieCodeInSchema,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_code_isnull = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieCodeIsnullSchema,
    explode=True,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_code_lt = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieCodeLtSchema,
    explode=True,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_code_lte = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieCodeLteSchema,
    explode=True,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_code_not = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieCodeNotSchema,
    explode=True,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_omschrijving = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieOmschrijvingSchema,
    explode=True,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_omschrijving_in = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieOmschrijvingInSchema,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_omschrijving_isempty = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieOmschrijvingIsemptySchema,
    explode=True,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_omschrijving_isnull = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieOmschrijvingIsnullSchema,
    explode=True,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_omschrijving_like = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieOmschrijvingLikeSchema,
    explode=True,
)
request_query_gebruiksdoel_gezondheidszorgfunctie_omschrijving_not = api_client.QueryParameter(
    name="gebruiksdoelGezondheidszorgfunctieOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelGezondheidszorgfunctieOmschrijvingNotSchema,
    explode=True,
)
request_query_gebruiksdoel_woonfunctie_code = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieCode",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieCodeSchema,
    explode=True,
)
request_query_gebruiksdoel_woonfunctie_code_gt = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieCodeGtSchema,
    explode=True,
)
request_query_gebruiksdoel_woonfunctie_code_gte = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieCodeGteSchema,
    explode=True,
)
request_query_gebruiksdoel_woonfunctie_code_in = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieCodeInSchema,
)
request_query_gebruiksdoel_woonfunctie_code_isnull = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieCodeIsnullSchema,
    explode=True,
)
request_query_gebruiksdoel_woonfunctie_code_lt = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieCodeLtSchema,
    explode=True,
)
request_query_gebruiksdoel_woonfunctie_code_lte = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieCodeLteSchema,
    explode=True,
)
request_query_gebruiksdoel_woonfunctie_code_not = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieCodeNotSchema,
    explode=True,
)
request_query_gebruiksdoel_woonfunctie_omschrijving = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieOmschrijvingSchema,
    explode=True,
)
request_query_gebruiksdoel_woonfunctie_omschrijving_in = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieOmschrijvingInSchema,
)
request_query_gebruiksdoel_woonfunctie_omschrijving_isempty = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieOmschrijvingIsemptySchema,
    explode=True,
)
request_query_gebruiksdoel_woonfunctie_omschrijving_isnull = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieOmschrijvingIsnullSchema,
    explode=True,
)
request_query_gebruiksdoel_woonfunctie_omschrijving_like = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieOmschrijvingLikeSchema,
    explode=True,
)
request_query_gebruiksdoel_woonfunctie_omschrijving_not = api_client.QueryParameter(
    name="gebruiksdoelWoonfunctieOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=GebruiksdoelWoonfunctieOmschrijvingNotSchema,
    explode=True,
)
request_query_geconstateerd = api_client.QueryParameter(
    name="geconstateerd",
    style=api_client.ParameterStyle.FORM,
    schema=GeconstateerdSchema,
    explode=True,
)
request_query_geconstateerd_isnull = api_client.QueryParameter(
    name="geconstateerd[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GeconstateerdIsnullSchema,
    explode=True,
)
request_query_geldig_op = api_client.QueryParameter(
    name="geldigOp",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpSchema,
    explode=True,
)
request_query_geldig_op_gt = api_client.QueryParameter(
    name="geldigOp[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpGtSchema,
    explode=True,
)
request_query_geldig_op_gte = api_client.QueryParameter(
    name="geldigOp[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpGteSchema,
    explode=True,
)
request_query_geldig_op_in = api_client.QueryParameter(
    name="geldigOp[in]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpInSchema,
    explode=True,
)
request_query_geldig_op_isnull = api_client.QueryParameter(
    name="geldigOp[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpIsnullSchema,
    explode=True,
)
request_query_geldig_op_lt = api_client.QueryParameter(
    name="geldigOp[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpLtSchema,
    explode=True,
)
request_query_geldig_op_lte = api_client.QueryParameter(
    name="geldigOp[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpLteSchema,
    explode=True,
)
request_query_geldig_op_not = api_client.QueryParameter(
    name="geldigOp[not]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpNotSchema,
    explode=True,
)
request_query_geometrie = api_client.QueryParameter(
    name="geometrie",
    style=api_client.ParameterStyle.FORM,
    schema=GeometrieSchema,
    explode=True,
)
request_query_geometrie_contains = api_client.QueryParameter(
    name="geometrie[contains]",
    style=api_client.ParameterStyle.FORM,
    schema=GeometrieContainsSchema,
    explode=True,
)
request_query_geometrie_isnull = api_client.QueryParameter(
    name="geometrie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GeometrieIsnullSchema,
    explode=True,
)
request_query_geometrie_not = api_client.QueryParameter(
    name="geometrie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=GeometrieNotSchema,
    explode=True,
)
request_query_heeft_dossier_dossier = api_client.QueryParameter(
    name="heeftDossier.dossier",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierSchema,
    explode=True,
)
request_query_heeft_dossier_dossier_in = api_client.QueryParameter(
    name="heeftDossier.dossier[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierInSchema,
)
request_query_heeft_dossier_dossier_isempty = api_client.QueryParameter(
    name="heeftDossier.dossier[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierIsemptySchema,
    explode=True,
)
request_query_heeft_dossier_dossier_isnull = api_client.QueryParameter(
    name="heeftDossier.dossier[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierIsnullSchema,
    explode=True,
)
request_query_heeft_dossier_dossier_like = api_client.QueryParameter(
    name="heeftDossier.dossier[like]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierLikeSchema,
    explode=True,
)
request_query_heeft_dossier_dossier_not = api_client.QueryParameter(
    name="heeftDossier.dossier[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierNotSchema,
    explode=True,
)
request_query_heeft_hoofdadres_identificatie = api_client.QueryParameter(
    name="heeftHoofdadres.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresIdentificatieSchema,
    explode=True,
)
request_query_heeft_hoofdadres_identificatie_in = api_client.QueryParameter(
    name="heeftHoofdadres.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresIdentificatieInSchema,
)
request_query_heeft_hoofdadres_identificatie_isempty = api_client.QueryParameter(
    name="heeftHoofdadres.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresIdentificatieIsemptySchema,
    explode=True,
)
request_query_heeft_hoofdadres_identificatie_isnull = api_client.QueryParameter(
    name="heeftHoofdadres.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresIdentificatieIsnullSchema,
    explode=True,
)
request_query_heeft_hoofdadres_identificatie_like = api_client.QueryParameter(
    name="heeftHoofdadres.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresIdentificatieLikeSchema,
    explode=True,
)
request_query_heeft_hoofdadres_identificatie_not = api_client.QueryParameter(
    name="heeftHoofdadres.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresIdentificatieNotSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer_gt = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerGtSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer_gte = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerGteSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer_in = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerInSchema,
)
request_query_heeft_hoofdadres_volgnummer_isnull = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerIsnullSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer_lt = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerLtSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer_lte = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerLteSchema,
    explode=True,
)
request_query_heeft_hoofdadres_volgnummer_not = api_client.QueryParameter(
    name="heeftHoofdadres.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftHoofdadresVolgnummerNotSchema,
    explode=True,
)
request_query_heeft_nevenadres_identificatie = api_client.QueryParameter(
    name="heeftNevenadres.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresIdentificatieSchema,
    explode=True,
)
request_query_heeft_nevenadres_identificatie_in = api_client.QueryParameter(
    name="heeftNevenadres.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresIdentificatieInSchema,
)
request_query_heeft_nevenadres_identificatie_isempty = api_client.QueryParameter(
    name="heeftNevenadres.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresIdentificatieIsemptySchema,
    explode=True,
)
request_query_heeft_nevenadres_identificatie_isnull = api_client.QueryParameter(
    name="heeftNevenadres.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresIdentificatieIsnullSchema,
    explode=True,
)
request_query_heeft_nevenadres_identificatie_like = api_client.QueryParameter(
    name="heeftNevenadres.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresIdentificatieLikeSchema,
    explode=True,
)
request_query_heeft_nevenadres_identificatie_not = api_client.QueryParameter(
    name="heeftNevenadres.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresIdentificatieNotSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer_gt = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerGtSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer_gte = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerGteSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer_in = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerInSchema,
)
request_query_heeft_nevenadres_volgnummer_isnull = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerIsnullSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer_lt = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerLtSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer_lte = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerLteSchema,
    explode=True,
)
request_query_heeft_nevenadres_volgnummer_not = api_client.QueryParameter(
    name="heeftNevenadres.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftNevenadresVolgnummerNotSchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieSchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie_in = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieInSchema,
)
request_query_heeft_onderzoeken_identificatie_isempty = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieIsemptySchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie_isnull = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieIsnullSchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie_like = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieLikeSchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie_not = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieNotSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_gt = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerGtSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_gte = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerGteSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_in = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerInSchema,
)
request_query_heeft_onderzoeken_volgnummer_isnull = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerIsnullSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_lt = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerLtSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_lte = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerLteSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_not = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerNotSchema,
    explode=True,
)
request_query_hoogste_bouwlaag = api_client.QueryParameter(
    name="hoogsteBouwlaag",
    style=api_client.ParameterStyle.FORM,
    schema=HoogsteBouwlaagSchema,
    explode=True,
)
request_query_hoogste_bouwlaag_gt = api_client.QueryParameter(
    name="hoogsteBouwlaag[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=HoogsteBouwlaagGtSchema,
    explode=True,
)
request_query_hoogste_bouwlaag_gte = api_client.QueryParameter(
    name="hoogsteBouwlaag[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=HoogsteBouwlaagGteSchema,
    explode=True,
)
request_query_hoogste_bouwlaag_in = api_client.QueryParameter(
    name="hoogsteBouwlaag[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HoogsteBouwlaagInSchema,
)
request_query_hoogste_bouwlaag_isnull = api_client.QueryParameter(
    name="hoogsteBouwlaag[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HoogsteBouwlaagIsnullSchema,
    explode=True,
)
request_query_hoogste_bouwlaag_lt = api_client.QueryParameter(
    name="hoogsteBouwlaag[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=HoogsteBouwlaagLtSchema,
    explode=True,
)
request_query_hoogste_bouwlaag_lte = api_client.QueryParameter(
    name="hoogsteBouwlaag[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=HoogsteBouwlaagLteSchema,
    explode=True,
)
request_query_hoogste_bouwlaag_not = api_client.QueryParameter(
    name="hoogsteBouwlaag[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HoogsteBouwlaagNotSchema,
    explode=True,
)
request_query_id = api_client.QueryParameter(
    name="id",
    style=api_client.ParameterStyle.FORM,
    schema=IdSchema,
    explode=True,
)
request_query_id_in = api_client.QueryParameter(
    name="id[in]",
    style=api_client.ParameterStyle.FORM,
    schema=IdInSchema,
)
request_query_id_isempty = api_client.QueryParameter(
    name="id[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=IdIsemptySchema,
    explode=True,
)
request_query_id_isnull = api_client.QueryParameter(
    name="id[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=IdIsnullSchema,
    explode=True,
)
request_query_id_like = api_client.QueryParameter(
    name="id[like]",
    style=api_client.ParameterStyle.FORM,
    schema=IdLikeSchema,
    explode=True,
)
request_query_id_not = api_client.QueryParameter(
    name="id[not]",
    style=api_client.ParameterStyle.FORM,
    schema=IdNotSchema,
    explode=True,
)
request_query_identificatie = api_client.QueryParameter(
    name="identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieSchema,
    explode=True,
)
request_query_identificatie_in = api_client.QueryParameter(
    name="identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieInSchema,
)
request_query_identificatie_isempty = api_client.QueryParameter(
    name="identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieIsemptySchema,
    explode=True,
)
request_query_identificatie_isnull = api_client.QueryParameter(
    name="identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieIsnullSchema,
    explode=True,
)
request_query_identificatie_like = api_client.QueryParameter(
    name="identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieLikeSchema,
    explode=True,
)
request_query_identificatie_not = api_client.QueryParameter(
    name="identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieNotSchema,
    explode=True,
)
request_query_indicatie_woningvoorraad = api_client.QueryParameter(
    name="indicatieWoningvoorraad",
    style=api_client.ParameterStyle.FORM,
    schema=IndicatieWoningvoorraadSchema,
    explode=True,
)
request_query_indicatie_woningvoorraad_in = api_client.QueryParameter(
    name="indicatieWoningvoorraad[in]",
    style=api_client.ParameterStyle.FORM,
    schema=IndicatieWoningvoorraadInSchema,
)
request_query_indicatie_woningvoorraad_isempty = api_client.QueryParameter(
    name="indicatieWoningvoorraad[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=IndicatieWoningvoorraadIsemptySchema,
    explode=True,
)
request_query_indicatie_woningvoorraad_isnull = api_client.QueryParameter(
    name="indicatieWoningvoorraad[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=IndicatieWoningvoorraadIsnullSchema,
    explode=True,
)
request_query_indicatie_woningvoorraad_like = api_client.QueryParameter(
    name="indicatieWoningvoorraad[like]",
    style=api_client.ParameterStyle.FORM,
    schema=IndicatieWoningvoorraadLikeSchema,
    explode=True,
)
request_query_indicatie_woningvoorraad_not = api_client.QueryParameter(
    name="indicatieWoningvoorraad[not]",
    style=api_client.ParameterStyle.FORM,
    schema=IndicatieWoningvoorraadNotSchema,
    explode=True,
)
request_query_laagste_bouwlaag = api_client.QueryParameter(
    name="laagsteBouwlaag",
    style=api_client.ParameterStyle.FORM,
    schema=LaagsteBouwlaagSchema,
    explode=True,
)
request_query_laagste_bouwlaag_gt = api_client.QueryParameter(
    name="laagsteBouwlaag[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=LaagsteBouwlaagGtSchema,
    explode=True,
)
request_query_laagste_bouwlaag_gte = api_client.QueryParameter(
    name="laagsteBouwlaag[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=LaagsteBouwlaagGteSchema,
    explode=True,
)
request_query_laagste_bouwlaag_in = api_client.QueryParameter(
    name="laagsteBouwlaag[in]",
    style=api_client.ParameterStyle.FORM,
    schema=LaagsteBouwlaagInSchema,
)
request_query_laagste_bouwlaag_isnull = api_client.QueryParameter(
    name="laagsteBouwlaag[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=LaagsteBouwlaagIsnullSchema,
    explode=True,
)
request_query_laagste_bouwlaag_lt = api_client.QueryParameter(
    name="laagsteBouwlaag[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=LaagsteBouwlaagLtSchema,
    explode=True,
)
request_query_laagste_bouwlaag_lte = api_client.QueryParameter(
    name="laagsteBouwlaag[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=LaagsteBouwlaagLteSchema,
    explode=True,
)
request_query_laagste_bouwlaag_not = api_client.QueryParameter(
    name="laagsteBouwlaag[not]",
    style=api_client.ParameterStyle.FORM,
    schema=LaagsteBouwlaagNotSchema,
    explode=True,
)
request_query_ligt_in_buurt_identificatie = api_client.QueryParameter(
    name="ligtInBuurt.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtIdentificatieSchema,
    explode=True,
)
request_query_ligt_in_buurt_identificatie_in = api_client.QueryParameter(
    name="ligtInBuurt.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtIdentificatieInSchema,
)
request_query_ligt_in_buurt_identificatie_isempty = api_client.QueryParameter(
    name="ligtInBuurt.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtIdentificatieIsemptySchema,
    explode=True,
)
request_query_ligt_in_buurt_identificatie_isnull = api_client.QueryParameter(
    name="ligtInBuurt.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtIdentificatieIsnullSchema,
    explode=True,
)
request_query_ligt_in_buurt_identificatie_like = api_client.QueryParameter(
    name="ligtInBuurt.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtIdentificatieLikeSchema,
    explode=True,
)
request_query_ligt_in_buurt_identificatie_not = api_client.QueryParameter(
    name="ligtInBuurt.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtIdentificatieNotSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer_gt = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerGtSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer_gte = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerGteSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer_in = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerInSchema,
)
request_query_ligt_in_buurt_volgnummer_isnull = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerIsnullSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer_lt = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerLtSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer_lte = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerLteSchema,
    explode=True,
)
request_query_ligt_in_buurt_volgnummer_not = api_client.QueryParameter(
    name="ligtInBuurt.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInBuurtVolgnummerNotSchema,
    explode=True,
)
request_query_ligt_in_panden_identificatie = api_client.QueryParameter(
    name="ligtInPanden.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenIdentificatieSchema,
    explode=True,
)
request_query_ligt_in_panden_identificatie_in = api_client.QueryParameter(
    name="ligtInPanden.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenIdentificatieInSchema,
)
request_query_ligt_in_panden_identificatie_isempty = api_client.QueryParameter(
    name="ligtInPanden.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenIdentificatieIsemptySchema,
    explode=True,
)
request_query_ligt_in_panden_identificatie_isnull = api_client.QueryParameter(
    name="ligtInPanden.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenIdentificatieIsnullSchema,
    explode=True,
)
request_query_ligt_in_panden_identificatie_like = api_client.QueryParameter(
    name="ligtInPanden.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenIdentificatieLikeSchema,
    explode=True,
)
request_query_ligt_in_panden_identificatie_not = api_client.QueryParameter(
    name="ligtInPanden.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenIdentificatieNotSchema,
    explode=True,
)
request_query_ligt_in_panden_volgnummer = api_client.QueryParameter(
    name="ligtInPanden.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenVolgnummerSchema,
    explode=True,
)
request_query_ligt_in_panden_volgnummer_gt = api_client.QueryParameter(
    name="ligtInPanden.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenVolgnummerGtSchema,
    explode=True,
)
request_query_ligt_in_panden_volgnummer_gte = api_client.QueryParameter(
    name="ligtInPanden.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenVolgnummerGteSchema,
    explode=True,
)
request_query_ligt_in_panden_volgnummer_in = api_client.QueryParameter(
    name="ligtInPanden.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenVolgnummerInSchema,
)
request_query_ligt_in_panden_volgnummer_isnull = api_client.QueryParameter(
    name="ligtInPanden.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenVolgnummerIsnullSchema,
    explode=True,
)
request_query_ligt_in_panden_volgnummer_lt = api_client.QueryParameter(
    name="ligtInPanden.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenVolgnummerLtSchema,
    explode=True,
)
request_query_ligt_in_panden_volgnummer_lte = api_client.QueryParameter(
    name="ligtInPanden.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenVolgnummerLteSchema,
    explode=True,
)
request_query_ligt_in_panden_volgnummer_not = api_client.QueryParameter(
    name="ligtInPanden.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInPandenVolgnummerNotSchema,
    explode=True,
)
request_query_oppervlakte = api_client.QueryParameter(
    name="oppervlakte",
    style=api_client.ParameterStyle.FORM,
    schema=OppervlakteSchema,
    explode=True,
)
request_query_oppervlakte_gt = api_client.QueryParameter(
    name="oppervlakte[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=OppervlakteGtSchema,
    explode=True,
)
request_query_oppervlakte_gte = api_client.QueryParameter(
    name="oppervlakte[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=OppervlakteGteSchema,
    explode=True,
)
request_query_oppervlakte_in = api_client.QueryParameter(
    name="oppervlakte[in]",
    style=api_client.ParameterStyle.FORM,
    schema=OppervlakteInSchema,
)
request_query_oppervlakte_isnull = api_client.QueryParameter(
    name="oppervlakte[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=OppervlakteIsnullSchema,
    explode=True,
)
request_query_oppervlakte_lt = api_client.QueryParameter(
    name="oppervlakte[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=OppervlakteLtSchema,
    explode=True,
)
request_query_oppervlakte_lte = api_client.QueryParameter(
    name="oppervlakte[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=OppervlakteLteSchema,
    explode=True,
)
request_query_oppervlakte_not = api_client.QueryParameter(
    name="oppervlakte[not]",
    style=api_client.ParameterStyle.FORM,
    schema=OppervlakteNotSchema,
    explode=True,
)
request_query_page = api_client.QueryParameter(
    name="page",
    style=api_client.ParameterStyle.FORM,
    schema=PageSchema,
    explode=True,
)
request_query_redenafvoer_code = api_client.QueryParameter(
    name="redenafvoerCode",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerCodeSchema,
    explode=True,
)
request_query_redenafvoer_code_gt = api_client.QueryParameter(
    name="redenafvoerCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerCodeGtSchema,
    explode=True,
)
request_query_redenafvoer_code_gte = api_client.QueryParameter(
    name="redenafvoerCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerCodeGteSchema,
    explode=True,
)
request_query_redenafvoer_code_in = api_client.QueryParameter(
    name="redenafvoerCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerCodeInSchema,
)
request_query_redenafvoer_code_isnull = api_client.QueryParameter(
    name="redenafvoerCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerCodeIsnullSchema,
    explode=True,
)
request_query_redenafvoer_code_lt = api_client.QueryParameter(
    name="redenafvoerCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerCodeLtSchema,
    explode=True,
)
request_query_redenafvoer_code_lte = api_client.QueryParameter(
    name="redenafvoerCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerCodeLteSchema,
    explode=True,
)
request_query_redenafvoer_code_not = api_client.QueryParameter(
    name="redenafvoerCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerCodeNotSchema,
    explode=True,
)
request_query_redenafvoer_omschrijving = api_client.QueryParameter(
    name="redenafvoerOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerOmschrijvingSchema,
    explode=True,
)
request_query_redenafvoer_omschrijving_in = api_client.QueryParameter(
    name="redenafvoerOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerOmschrijvingInSchema,
)
request_query_redenafvoer_omschrijving_isempty = api_client.QueryParameter(
    name="redenafvoerOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerOmschrijvingIsemptySchema,
    explode=True,
)
request_query_redenafvoer_omschrijving_isnull = api_client.QueryParameter(
    name="redenafvoerOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerOmschrijvingIsnullSchema,
    explode=True,
)
request_query_redenafvoer_omschrijving_like = api_client.QueryParameter(
    name="redenafvoerOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerOmschrijvingLikeSchema,
    explode=True,
)
request_query_redenafvoer_omschrijving_not = api_client.QueryParameter(
    name="redenafvoerOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenafvoerOmschrijvingNotSchema,
    explode=True,
)
request_query_redenopvoer_code = api_client.QueryParameter(
    name="redenopvoerCode",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerCodeSchema,
    explode=True,
)
request_query_redenopvoer_code_gt = api_client.QueryParameter(
    name="redenopvoerCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerCodeGtSchema,
    explode=True,
)
request_query_redenopvoer_code_gte = api_client.QueryParameter(
    name="redenopvoerCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerCodeGteSchema,
    explode=True,
)
request_query_redenopvoer_code_in = api_client.QueryParameter(
    name="redenopvoerCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerCodeInSchema,
)
request_query_redenopvoer_code_isnull = api_client.QueryParameter(
    name="redenopvoerCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerCodeIsnullSchema,
    explode=True,
)
request_query_redenopvoer_code_lt = api_client.QueryParameter(
    name="redenopvoerCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerCodeLtSchema,
    explode=True,
)
request_query_redenopvoer_code_lte = api_client.QueryParameter(
    name="redenopvoerCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerCodeLteSchema,
    explode=True,
)
request_query_redenopvoer_code_not = api_client.QueryParameter(
    name="redenopvoerCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerCodeNotSchema,
    explode=True,
)
request_query_redenopvoer_omschrijving = api_client.QueryParameter(
    name="redenopvoerOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerOmschrijvingSchema,
    explode=True,
)
request_query_redenopvoer_omschrijving_in = api_client.QueryParameter(
    name="redenopvoerOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerOmschrijvingInSchema,
)
request_query_redenopvoer_omschrijving_isempty = api_client.QueryParameter(
    name="redenopvoerOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerOmschrijvingIsemptySchema,
    explode=True,
)
request_query_redenopvoer_omschrijving_isnull = api_client.QueryParameter(
    name="redenopvoerOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerOmschrijvingIsnullSchema,
    explode=True,
)
request_query_redenopvoer_omschrijving_like = api_client.QueryParameter(
    name="redenopvoerOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerOmschrijvingLikeSchema,
    explode=True,
)
request_query_redenopvoer_omschrijving_not = api_client.QueryParameter(
    name="redenopvoerOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=RedenopvoerOmschrijvingNotSchema,
    explode=True,
)
request_query_registratiedatum = api_client.QueryParameter(
    name="registratiedatum",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumSchema,
    explode=True,
)
request_query_registratiedatum_gt = api_client.QueryParameter(
    name="registratiedatum[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumGtSchema,
    explode=True,
)
request_query_registratiedatum_gte = api_client.QueryParameter(
    name="registratiedatum[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumGteSchema,
    explode=True,
)
request_query_registratiedatum_in = api_client.QueryParameter(
    name="registratiedatum[in]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumInSchema,
)
request_query_registratiedatum_isnull = api_client.QueryParameter(
    name="registratiedatum[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumIsnullSchema,
    explode=True,
)
request_query_registratiedatum_lt = api_client.QueryParameter(
    name="registratiedatum[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumLtSchema,
    explode=True,
)
request_query_registratiedatum_lte = api_client.QueryParameter(
    name="registratiedatum[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumLteSchema,
    explode=True,
)
request_query_registratiedatum_not = api_client.QueryParameter(
    name="registratiedatum[not]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumNotSchema,
    explode=True,
)
request_query_status_code = api_client.QueryParameter(
    name="statusCode",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeSchema,
    explode=True,
)
request_query_status_code_gt = api_client.QueryParameter(
    name="statusCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeGtSchema,
    explode=True,
)
request_query_status_code_gte = api_client.QueryParameter(
    name="statusCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeGteSchema,
    explode=True,
)
request_query_status_code_in = api_client.QueryParameter(
    name="statusCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeInSchema,
)
request_query_status_code_isnull = api_client.QueryParameter(
    name="statusCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeIsnullSchema,
    explode=True,
)
request_query_status_code_lt = api_client.QueryParameter(
    name="statusCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeLtSchema,
    explode=True,
)
request_query_status_code_lte = api_client.QueryParameter(
    name="statusCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeLteSchema,
    explode=True,
)
request_query_status_code_not = api_client.QueryParameter(
    name="statusCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeNotSchema,
    explode=True,
)
request_query_status_omschrijving = api_client.QueryParameter(
    name="statusOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingSchema,
    explode=True,
)
request_query_status_omschrijving_in = api_client.QueryParameter(
    name="statusOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingInSchema,
)
request_query_status_omschrijving_isempty = api_client.QueryParameter(
    name="statusOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingIsemptySchema,
    explode=True,
)
request_query_status_omschrijving_isnull = api_client.QueryParameter(
    name="statusOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingIsnullSchema,
    explode=True,
)
request_query_status_omschrijving_like = api_client.QueryParameter(
    name="statusOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingLikeSchema,
    explode=True,
)
request_query_status_omschrijving_not = api_client.QueryParameter(
    name="statusOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingNotSchema,
    explode=True,
)
request_query_toegang_code = api_client.QueryParameter(
    name="toegang.code",
    style=api_client.ParameterStyle.FORM,
    schema=ToegangCodeSchema,
    explode=True,
)
request_query_toegang_code_in = api_client.QueryParameter(
    name="toegang.code[in]",
    style=api_client.ParameterStyle.FORM,
    schema=ToegangCodeInSchema,
)
request_query_toegang_code_isempty = api_client.QueryParameter(
    name="toegang.code[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=ToegangCodeIsemptySchema,
    explode=True,
)
request_query_toegang_code_isnull = api_client.QueryParameter(
    name="toegang.code[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=ToegangCodeIsnullSchema,
    explode=True,
)
request_query_toegang_code_like = api_client.QueryParameter(
    name="toegang.code[like]",
    style=api_client.ParameterStyle.FORM,
    schema=ToegangCodeLikeSchema,
    explode=True,
)
request_query_toegang_code_not = api_client.QueryParameter(
    name="toegang.code[not]",
    style=api_client.ParameterStyle.FORM,
    schema=ToegangCodeNotSchema,
    explode=True,
)
request_query_toegang_omschrijving = api_client.QueryParameter(
    name="toegang.omschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=ToegangOmschrijvingSchema,
    explode=True,
)
request_query_toegang_omschrijving_in = api_client.QueryParameter(
    name="toegang.omschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=ToegangOmschrijvingInSchema,
)
request_query_toegang_omschrijving_isempty = api_client.QueryParameter(
    name="toegang.omschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=ToegangOmschrijvingIsemptySchema,
    explode=True,
)
request_query_toegang_omschrijving_isnull = api_client.QueryParameter(
    name="toegang.omschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=ToegangOmschrijvingIsnullSchema,
    explode=True,
)
request_query_toegang_omschrijving_like = api_client.QueryParameter(
    name="toegang.omschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=ToegangOmschrijvingLikeSchema,
    explode=True,
)
request_query_toegang_omschrijving_not = api_client.QueryParameter(
    name="toegang.omschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=ToegangOmschrijvingNotSchema,
    explode=True,
)
request_query_verdieping_toegang = api_client.QueryParameter(
    name="verdiepingToegang",
    style=api_client.ParameterStyle.FORM,
    schema=VerdiepingToegangSchema,
    explode=True,
)
request_query_verdieping_toegang_gt = api_client.QueryParameter(
    name="verdiepingToegang[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=VerdiepingToegangGtSchema,
    explode=True,
)
request_query_verdieping_toegang_gte = api_client.QueryParameter(
    name="verdiepingToegang[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=VerdiepingToegangGteSchema,
    explode=True,
)
request_query_verdieping_toegang_in = api_client.QueryParameter(
    name="verdiepingToegang[in]",
    style=api_client.ParameterStyle.FORM,
    schema=VerdiepingToegangInSchema,
)
request_query_verdieping_toegang_isnull = api_client.QueryParameter(
    name="verdiepingToegang[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=VerdiepingToegangIsnullSchema,
    explode=True,
)
request_query_verdieping_toegang_lt = api_client.QueryParameter(
    name="verdiepingToegang[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=VerdiepingToegangLtSchema,
    explode=True,
)
request_query_verdieping_toegang_lte = api_client.QueryParameter(
    name="verdiepingToegang[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=VerdiepingToegangLteSchema,
    explode=True,
)
request_query_verdieping_toegang_not = api_client.QueryParameter(
    name="verdiepingToegang[not]",
    style=api_client.ParameterStyle.FORM,
    schema=VerdiepingToegangNotSchema,
    explode=True,
)
request_query_volgnummer = api_client.QueryParameter(
    name="volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerSchema,
    explode=True,
)
request_query_volgnummer_gt = api_client.QueryParameter(
    name="volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerGtSchema,
    explode=True,
)
request_query_volgnummer_gte = api_client.QueryParameter(
    name="volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerGteSchema,
    explode=True,
)
request_query_volgnummer_in = api_client.QueryParameter(
    name="volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerInSchema,
)
request_query_volgnummer_isnull = api_client.QueryParameter(
    name="volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerIsnullSchema,
    explode=True,
)
request_query_volgnummer_lt = api_client.QueryParameter(
    name="volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerLtSchema,
    explode=True,
)
request_query_volgnummer_lte = api_client.QueryParameter(
    name="volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerLteSchema,
    explode=True,
)
request_query_volgnummer_not = api_client.QueryParameter(
    name="volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerNotSchema,
    explode=True,
)
# Header params
AcceptCrsSchema = schemas.StrSchema
ContentCrsSchema = schemas.StrSchema
RequestRequiredHeaderParams = typing_extensions.TypedDict(
    'RequestRequiredHeaderParams',
    {
    }
)
RequestOptionalHeaderParams = typing_extensions.TypedDict(
    'RequestOptionalHeaderParams',
    {
        'Accept-Crs': typing.Union[AcceptCrsSchema, str, ],
        'Content-Crs': typing.Union[ContentCrsSchema, str, ],
    },
    total=False
)


class RequestHeaderParams(RequestRequiredHeaderParams, RequestOptionalHeaderParams):
    pass


request_header_accept_crs = api_client.HeaderParameter(
    name="Accept-Crs",
    style=api_client.ParameterStyle.SIMPLE,
    schema=AcceptCrsSchema,
)
request_header_content_crs = api_client.HeaderParameter(
    name="Content-Crs",
    style=api_client.ParameterStyle.SIMPLE,
    schema=ContentCrsSchema,
)
SchemaFor200ResponseBodyApplicationHaljson = PaginatedBagverblijfsobjectenList
SchemaFor200ResponseBodyTextCsv = PaginatedBagverblijfsobjectenList
SchemaFor200ResponseBodyApplicationGeojson = PaginatedBagverblijfsobjectenList


@dataclass
class ApiResponseFor200(api_client.ApiResponse):
    response: urllib3.HTTPResponse
    body: typing.Union[
        SchemaFor200ResponseBodyApplicationHaljson,
        SchemaFor200ResponseBodyTextCsv,
        SchemaFor200ResponseBodyApplicationGeojson,
    ]
    headers: schemas.Unset = schemas.unset


_response_for_200 = api_client.OpenApiResponse(
    response_cls=ApiResponseFor200,
    content={
        'application/hal+json': api_client.MediaType(
            schema=SchemaFor200ResponseBodyApplicationHaljson),
        'text/csv': api_client.MediaType(
            schema=SchemaFor200ResponseBodyTextCsv),
        'application/geo+json': api_client.MediaType(
            schema=SchemaFor200ResponseBodyApplicationGeojson),
    },
)
_all_accept_content_types = (
    'application/hal+json',
    'text/csv',
    'application/geo+json',
)


class BaseApi(api_client.Api):
    @typing.overload
    def _bag_verblijfsobjecten_list_oapg(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: typing_extensions.Literal[False] = ...,
    ) -> typing.Union[
        ApiResponseFor200,
    ]: ...

    @typing.overload
    def _bag_verblijfsobjecten_list_oapg(
        self,
        skip_deserialization: typing_extensions.Literal[True],
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
    ) -> api_client.ApiResponseWithoutDeserialization: ...

    @typing.overload
    def _bag_verblijfsobjecten_list_oapg(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = ...,
    ) -> typing.Union[
        ApiResponseFor200,
        api_client.ApiResponseWithoutDeserialization,
    ]: ...

    def _bag_verblijfsobjecten_list_oapg(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = False,
    ):
        """
        :param skip_deserialization: If true then api_response.response will be set but
            api_response.body and api_response.headers will not be deserialized into schema
            class instances
        """
        self._verify_typed_dict_inputs_oapg(RequestQueryParams, query_params)
        self._verify_typed_dict_inputs_oapg(RequestHeaderParams, header_params)
        used_path = path.value

        prefix_separator_iterator = None
        for parameter in (
            request_query_count,
            request_query_expand,
            request_query_expand_scope,
            request_query_fields,
            request_query_format,
            request_query_page_size,
            request_query_sort,
            request_query_aantal_bouwlagen,
            request_query_aantal_bouwlagen_gt,
            request_query_aantal_bouwlagen_gte,
            request_query_aantal_bouwlagen_in,
            request_query_aantal_bouwlagen_isnull,
            request_query_aantal_bouwlagen_lt,
            request_query_aantal_bouwlagen_lte,
            request_query_aantal_bouwlagen_not,
            request_query_aantal_eenheden_complex,
            request_query_aantal_eenheden_complex_gt,
            request_query_aantal_eenheden_complex_gte,
            request_query_aantal_eenheden_complex_in,
            request_query_aantal_eenheden_complex_isnull,
            request_query_aantal_eenheden_complex_lt,
            request_query_aantal_eenheden_complex_lte,
            request_query_aantal_eenheden_complex_not,
            request_query_aantal_kamers,
            request_query_aantal_kamers_gt,
            request_query_aantal_kamers_gte,
            request_query_aantal_kamers_in,
            request_query_aantal_kamers_isnull,
            request_query_aantal_kamers_lt,
            request_query_aantal_kamers_lte,
            request_query_aantal_kamers_not,
            request_query_bagproces_code,
            request_query_bagproces_code_gt,
            request_query_bagproces_code_gte,
            request_query_bagproces_code_in,
            request_query_bagproces_code_isnull,
            request_query_bagproces_code_lt,
            request_query_bagproces_code_lte,
            request_query_bagproces_code_not,
            request_query_bagproces_omschrijving,
            request_query_bagproces_omschrijving_in,
            request_query_bagproces_omschrijving_isempty,
            request_query_bagproces_omschrijving_isnull,
            request_query_bagproces_omschrijving_like,
            request_query_bagproces_omschrijving_not,
            request_query_begin_geldigheid,
            request_query_begin_geldigheid_gt,
            request_query_begin_geldigheid_gte,
            request_query_begin_geldigheid_in,
            request_query_begin_geldigheid_isnull,
            request_query_begin_geldigheid_lt,
            request_query_begin_geldigheid_lte,
            request_query_begin_geldigheid_not,
            request_query_cbs_nummer,
            request_query_cbs_nummer_in,
            request_query_cbs_nummer_isempty,
            request_query_cbs_nummer_isnull,
            request_query_cbs_nummer_like,
            request_query_cbs_nummer_not,
            request_query_documentdatum,
            request_query_documentdatum_gt,
            request_query_documentdatum_gte,
            request_query_documentdatum_in,
            request_query_documentdatum_isnull,
            request_query_documentdatum_lt,
            request_query_documentdatum_lte,
            request_query_documentdatum_not,
            request_query_documentnummer,
            request_query_documentnummer_in,
            request_query_documentnummer_isempty,
            request_query_documentnummer_isnull,
            request_query_documentnummer_like,
            request_query_documentnummer_not,
            request_query_eigendomsverhouding_code,
            request_query_eigendomsverhouding_code_gt,
            request_query_eigendomsverhouding_code_gte,
            request_query_eigendomsverhouding_code_in,
            request_query_eigendomsverhouding_code_isnull,
            request_query_eigendomsverhouding_code_lt,
            request_query_eigendomsverhouding_code_lte,
            request_query_eigendomsverhouding_code_not,
            request_query_eigendomsverhouding_omschrijving,
            request_query_eigendomsverhouding_omschrijving_in,
            request_query_eigendomsverhouding_omschrijving_isempty,
            request_query_eigendomsverhouding_omschrijving_isnull,
            request_query_eigendomsverhouding_omschrijving_like,
            request_query_eigendomsverhouding_omschrijving_not,
            request_query_eind_geldigheid,
            request_query_eind_geldigheid_gt,
            request_query_eind_geldigheid_gte,
            request_query_eind_geldigheid_in,
            request_query_eind_geldigheid_isnull,
            request_query_eind_geldigheid_lt,
            request_query_eind_geldigheid_lte,
            request_query_eind_geldigheid_not,
            request_query_feitelijk_gebruik_code,
            request_query_feitelijk_gebruik_code_gt,
            request_query_feitelijk_gebruik_code_gte,
            request_query_feitelijk_gebruik_code_in,
            request_query_feitelijk_gebruik_code_isnull,
            request_query_feitelijk_gebruik_code_lt,
            request_query_feitelijk_gebruik_code_lte,
            request_query_feitelijk_gebruik_code_not,
            request_query_feitelijk_gebruik_omschrijving,
            request_query_feitelijk_gebruik_omschrijving_in,
            request_query_feitelijk_gebruik_omschrijving_isempty,
            request_query_feitelijk_gebruik_omschrijving_isnull,
            request_query_feitelijk_gebruik_omschrijving_like,
            request_query_feitelijk_gebruik_omschrijving_not,
            request_query_financieringscode_code,
            request_query_financieringscode_code_gt,
            request_query_financieringscode_code_gte,
            request_query_financieringscode_code_in,
            request_query_financieringscode_code_isnull,
            request_query_financieringscode_code_lt,
            request_query_financieringscode_code_lte,
            request_query_financieringscode_code_not,
            request_query_financieringscode_omschrijving,
            request_query_financieringscode_omschrijving_in,
            request_query_financieringscode_omschrijving_isempty,
            request_query_financieringscode_omschrijving_isnull,
            request_query_financieringscode_omschrijving_like,
            request_query_financieringscode_omschrijving_not,
            request_query_gebruiksdoel_code,
            request_query_gebruiksdoel_code_in,
            request_query_gebruiksdoel_code_isempty,
            request_query_gebruiksdoel_code_isnull,
            request_query_gebruiksdoel_code_like,
            request_query_gebruiksdoel_code_not,
            request_query_gebruiksdoel_omschrijving,
            request_query_gebruiksdoel_omschrijving_in,
            request_query_gebruiksdoel_omschrijving_isempty,
            request_query_gebruiksdoel_omschrijving_isnull,
            request_query_gebruiksdoel_omschrijving_like,
            request_query_gebruiksdoel_omschrijving_not,
            request_query_gebruiksdoel_gezondheidszorgfunctie_code,
            request_query_gebruiksdoel_gezondheidszorgfunctie_code_gt,
            request_query_gebruiksdoel_gezondheidszorgfunctie_code_gte,
            request_query_gebruiksdoel_gezondheidszorgfunctie_code_in,
            request_query_gebruiksdoel_gezondheidszorgfunctie_code_isnull,
            request_query_gebruiksdoel_gezondheidszorgfunctie_code_lt,
            request_query_gebruiksdoel_gezondheidszorgfunctie_code_lte,
            request_query_gebruiksdoel_gezondheidszorgfunctie_code_not,
            request_query_gebruiksdoel_gezondheidszorgfunctie_omschrijving,
            request_query_gebruiksdoel_gezondheidszorgfunctie_omschrijving_in,
            request_query_gebruiksdoel_gezondheidszorgfunctie_omschrijving_isempty,
            request_query_gebruiksdoel_gezondheidszorgfunctie_omschrijving_isnull,
            request_query_gebruiksdoel_gezondheidszorgfunctie_omschrijving_like,
            request_query_gebruiksdoel_gezondheidszorgfunctie_omschrijving_not,
            request_query_gebruiksdoel_woonfunctie_code,
            request_query_gebruiksdoel_woonfunctie_code_gt,
            request_query_gebruiksdoel_woonfunctie_code_gte,
            request_query_gebruiksdoel_woonfunctie_code_in,
            request_query_gebruiksdoel_woonfunctie_code_isnull,
            request_query_gebruiksdoel_woonfunctie_code_lt,
            request_query_gebruiksdoel_woonfunctie_code_lte,
            request_query_gebruiksdoel_woonfunctie_code_not,
            request_query_gebruiksdoel_woonfunctie_omschrijving,
            request_query_gebruiksdoel_woonfunctie_omschrijving_in,
            request_query_gebruiksdoel_woonfunctie_omschrijving_isempty,
            request_query_gebruiksdoel_woonfunctie_omschrijving_isnull,
            request_query_gebruiksdoel_woonfunctie_omschrijving_like,
            request_query_gebruiksdoel_woonfunctie_omschrijving_not,
            request_query_geconstateerd,
            request_query_geconstateerd_isnull,
            request_query_geldig_op,
            request_query_geldig_op_gt,
            request_query_geldig_op_gte,
            request_query_geldig_op_in,
            request_query_geldig_op_isnull,
            request_query_geldig_op_lt,
            request_query_geldig_op_lte,
            request_query_geldig_op_not,
            request_query_geometrie,
            request_query_geometrie_contains,
            request_query_geometrie_isnull,
            request_query_geometrie_not,
            request_query_heeft_dossier_dossier,
            request_query_heeft_dossier_dossier_in,
            request_query_heeft_dossier_dossier_isempty,
            request_query_heeft_dossier_dossier_isnull,
            request_query_heeft_dossier_dossier_like,
            request_query_heeft_dossier_dossier_not,
            request_query_heeft_hoofdadres_identificatie,
            request_query_heeft_hoofdadres_identificatie_in,
            request_query_heeft_hoofdadres_identificatie_isempty,
            request_query_heeft_hoofdadres_identificatie_isnull,
            request_query_heeft_hoofdadres_identificatie_like,
            request_query_heeft_hoofdadres_identificatie_not,
            request_query_heeft_hoofdadres_volgnummer,
            request_query_heeft_hoofdadres_volgnummer_gt,
            request_query_heeft_hoofdadres_volgnummer_gte,
            request_query_heeft_hoofdadres_volgnummer_in,
            request_query_heeft_hoofdadres_volgnummer_isnull,
            request_query_heeft_hoofdadres_volgnummer_lt,
            request_query_heeft_hoofdadres_volgnummer_lte,
            request_query_heeft_hoofdadres_volgnummer_not,
            request_query_heeft_nevenadres_identificatie,
            request_query_heeft_nevenadres_identificatie_in,
            request_query_heeft_nevenadres_identificatie_isempty,
            request_query_heeft_nevenadres_identificatie_isnull,
            request_query_heeft_nevenadres_identificatie_like,
            request_query_heeft_nevenadres_identificatie_not,
            request_query_heeft_nevenadres_volgnummer,
            request_query_heeft_nevenadres_volgnummer_gt,
            request_query_heeft_nevenadres_volgnummer_gte,
            request_query_heeft_nevenadres_volgnummer_in,
            request_query_heeft_nevenadres_volgnummer_isnull,
            request_query_heeft_nevenadres_volgnummer_lt,
            request_query_heeft_nevenadres_volgnummer_lte,
            request_query_heeft_nevenadres_volgnummer_not,
            request_query_heeft_onderzoeken_identificatie,
            request_query_heeft_onderzoeken_identificatie_in,
            request_query_heeft_onderzoeken_identificatie_isempty,
            request_query_heeft_onderzoeken_identificatie_isnull,
            request_query_heeft_onderzoeken_identificatie_like,
            request_query_heeft_onderzoeken_identificatie_not,
            request_query_heeft_onderzoeken_volgnummer,
            request_query_heeft_onderzoeken_volgnummer_gt,
            request_query_heeft_onderzoeken_volgnummer_gte,
            request_query_heeft_onderzoeken_volgnummer_in,
            request_query_heeft_onderzoeken_volgnummer_isnull,
            request_query_heeft_onderzoeken_volgnummer_lt,
            request_query_heeft_onderzoeken_volgnummer_lte,
            request_query_heeft_onderzoeken_volgnummer_not,
            request_query_hoogste_bouwlaag,
            request_query_hoogste_bouwlaag_gt,
            request_query_hoogste_bouwlaag_gte,
            request_query_hoogste_bouwlaag_in,
            request_query_hoogste_bouwlaag_isnull,
            request_query_hoogste_bouwlaag_lt,
            request_query_hoogste_bouwlaag_lte,
            request_query_hoogste_bouwlaag_not,
            request_query_id,
            request_query_id_in,
            request_query_id_isempty,
            request_query_id_isnull,
            request_query_id_like,
            request_query_id_not,
            request_query_identificatie,
            request_query_identificatie_in,
            request_query_identificatie_isempty,
            request_query_identificatie_isnull,
            request_query_identificatie_like,
            request_query_identificatie_not,
            request_query_indicatie_woningvoorraad,
            request_query_indicatie_woningvoorraad_in,
            request_query_indicatie_woningvoorraad_isempty,
            request_query_indicatie_woningvoorraad_isnull,
            request_query_indicatie_woningvoorraad_like,
            request_query_indicatie_woningvoorraad_not,
            request_query_laagste_bouwlaag,
            request_query_laagste_bouwlaag_gt,
            request_query_laagste_bouwlaag_gte,
            request_query_laagste_bouwlaag_in,
            request_query_laagste_bouwlaag_isnull,
            request_query_laagste_bouwlaag_lt,
            request_query_laagste_bouwlaag_lte,
            request_query_laagste_bouwlaag_not,
            request_query_ligt_in_buurt_identificatie,
            request_query_ligt_in_buurt_identificatie_in,
            request_query_ligt_in_buurt_identificatie_isempty,
            request_query_ligt_in_buurt_identificatie_isnull,
            request_query_ligt_in_buurt_identificatie_like,
            request_query_ligt_in_buurt_identificatie_not,
            request_query_ligt_in_buurt_volgnummer,
            request_query_ligt_in_buurt_volgnummer_gt,
            request_query_ligt_in_buurt_volgnummer_gte,
            request_query_ligt_in_buurt_volgnummer_in,
            request_query_ligt_in_buurt_volgnummer_isnull,
            request_query_ligt_in_buurt_volgnummer_lt,
            request_query_ligt_in_buurt_volgnummer_lte,
            request_query_ligt_in_buurt_volgnummer_not,
            request_query_ligt_in_panden_identificatie,
            request_query_ligt_in_panden_identificatie_in,
            request_query_ligt_in_panden_identificatie_isempty,
            request_query_ligt_in_panden_identificatie_isnull,
            request_query_ligt_in_panden_identificatie_like,
            request_query_ligt_in_panden_identificatie_not,
            request_query_ligt_in_panden_volgnummer,
            request_query_ligt_in_panden_volgnummer_gt,
            request_query_ligt_in_panden_volgnummer_gte,
            request_query_ligt_in_panden_volgnummer_in,
            request_query_ligt_in_panden_volgnummer_isnull,
            request_query_ligt_in_panden_volgnummer_lt,
            request_query_ligt_in_panden_volgnummer_lte,
            request_query_ligt_in_panden_volgnummer_not,
            request_query_oppervlakte,
            request_query_oppervlakte_gt,
            request_query_oppervlakte_gte,
            request_query_oppervlakte_in,
            request_query_oppervlakte_isnull,
            request_query_oppervlakte_lt,
            request_query_oppervlakte_lte,
            request_query_oppervlakte_not,
            request_query_page,
            request_query_redenafvoer_code,
            request_query_redenafvoer_code_gt,
            request_query_redenafvoer_code_gte,
            request_query_redenafvoer_code_in,
            request_query_redenafvoer_code_isnull,
            request_query_redenafvoer_code_lt,
            request_query_redenafvoer_code_lte,
            request_query_redenafvoer_code_not,
            request_query_redenafvoer_omschrijving,
            request_query_redenafvoer_omschrijving_in,
            request_query_redenafvoer_omschrijving_isempty,
            request_query_redenafvoer_omschrijving_isnull,
            request_query_redenafvoer_omschrijving_like,
            request_query_redenafvoer_omschrijving_not,
            request_query_redenopvoer_code,
            request_query_redenopvoer_code_gt,
            request_query_redenopvoer_code_gte,
            request_query_redenopvoer_code_in,
            request_query_redenopvoer_code_isnull,
            request_query_redenopvoer_code_lt,
            request_query_redenopvoer_code_lte,
            request_query_redenopvoer_code_not,
            request_query_redenopvoer_omschrijving,
            request_query_redenopvoer_omschrijving_in,
            request_query_redenopvoer_omschrijving_isempty,
            request_query_redenopvoer_omschrijving_isnull,
            request_query_redenopvoer_omschrijving_like,
            request_query_redenopvoer_omschrijving_not,
            request_query_registratiedatum,
            request_query_registratiedatum_gt,
            request_query_registratiedatum_gte,
            request_query_registratiedatum_in,
            request_query_registratiedatum_isnull,
            request_query_registratiedatum_lt,
            request_query_registratiedatum_lte,
            request_query_registratiedatum_not,
            request_query_status_code,
            request_query_status_code_gt,
            request_query_status_code_gte,
            request_query_status_code_in,
            request_query_status_code_isnull,
            request_query_status_code_lt,
            request_query_status_code_lte,
            request_query_status_code_not,
            request_query_status_omschrijving,
            request_query_status_omschrijving_in,
            request_query_status_omschrijving_isempty,
            request_query_status_omschrijving_isnull,
            request_query_status_omschrijving_like,
            request_query_status_omschrijving_not,
            request_query_toegang_code,
            request_query_toegang_code_in,
            request_query_toegang_code_isempty,
            request_query_toegang_code_isnull,
            request_query_toegang_code_like,
            request_query_toegang_code_not,
            request_query_toegang_omschrijving,
            request_query_toegang_omschrijving_in,
            request_query_toegang_omschrijving_isempty,
            request_query_toegang_omschrijving_isnull,
            request_query_toegang_omschrijving_like,
            request_query_toegang_omschrijving_not,
            request_query_verdieping_toegang,
            request_query_verdieping_toegang_gt,
            request_query_verdieping_toegang_gte,
            request_query_verdieping_toegang_in,
            request_query_verdieping_toegang_isnull,
            request_query_verdieping_toegang_lt,
            request_query_verdieping_toegang_lte,
            request_query_verdieping_toegang_not,
            request_query_volgnummer,
            request_query_volgnummer_gt,
            request_query_volgnummer_gte,
            request_query_volgnummer_in,
            request_query_volgnummer_isnull,
            request_query_volgnummer_lt,
            request_query_volgnummer_lte,
            request_query_volgnummer_not,
        ):
            parameter_data = query_params.get(parameter.name, schemas.unset)
            if parameter_data is schemas.unset:
                continue
            if prefix_separator_iterator is None:
                prefix_separator_iterator = parameter.get_prefix_separator_iterator()
            serialized_data = parameter.serialize(parameter_data, prefix_separator_iterator)
            for serialized_value in serialized_data.values():
                used_path += serialized_value

        _headers = HTTPHeaderDict()
        for parameter in (
            request_header_accept_crs,
            request_header_content_crs,
        ):
            parameter_data = header_params.get(parameter.name, schemas.unset)
            if parameter_data is schemas.unset:
                continue
            serialized_data = parameter.serialize(parameter_data)
            _headers.extend(serialized_data)
        # TODO add cookie handling
        if accept_content_types:
            for accept_content_type in accept_content_types:
                _headers.add('Accept', accept_content_type)

        response = self.api_client.call_api(
            resource_path=used_path,
            method='get'.upper(),
            headers=_headers,
            auth_settings=_auth,
            stream=stream,
            timeout=timeout,
        )

        if skip_deserialization:
            api_response = api_client.ApiResponseWithoutDeserialization(response=response)
        else:
            response_for_status = _status_code_to_response.get(str(response.status))
            if response_for_status:
                api_response = response_for_status.deserialize(response, self.api_client.configuration)
            else:
                api_response = api_client.ApiResponseWithoutDeserialization(response=response)

        if not 200 <= response.status <= 299:
            raise exceptions.ApiException(
                status=response.status,
                reason=response.reason,
                api_response=api_response
            )

        return api_response


class BagVerblijfsobjectenList(BaseApi):
    # this class is used by api classes that refer to endpoints with operationId fn names

    @typing.overload
    def bag_verblijfsobjecten_list(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: typing_extensions.Literal[False] = ...,
    ) -> typing.Union[
        ApiResponseFor200,
    ]: ...

    @typing.overload
    def bag_verblijfsobjecten_list(
        self,
        skip_deserialization: typing_extensions.Literal[True],
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
    ) -> api_client.ApiResponseWithoutDeserialization: ...

    @typing.overload
    def bag_verblijfsobjecten_list(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = ...,
    ) -> typing.Union[
        ApiResponseFor200,
        api_client.ApiResponseWithoutDeserialization,
    ]: ...

    def bag_verblijfsobjecten_list(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = False,
    ):
        return self._bag_verblijfsobjecten_list_oapg(
            query_params=query_params,
            header_params=header_params,
            accept_content_types=accept_content_types,
            stream=stream,
            timeout=timeout,
            skip_deserialization=skip_deserialization
        )


class ApiForget(BaseApi):
    # this class is used by api classes that refer to endpoints by path and http method names

    @typing.overload
    def get(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: typing_extensions.Literal[False] = ...,
    ) -> typing.Union[
        ApiResponseFor200,
    ]: ...

    @typing.overload
    def get(
        self,
        skip_deserialization: typing_extensions.Literal[True],
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
    ) -> api_client.ApiResponseWithoutDeserialization: ...

    @typing.overload
    def get(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = ...,
    ) -> typing.Union[
        ApiResponseFor200,
        api_client.ApiResponseWithoutDeserialization,
    ]: ...

    def get(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = False,
    ):
        return self._bag_verblijfsobjecten_list_oapg(
            query_params=query_params,
            header_params=header_params,
            accept_content_types=accept_content_types,
            stream=stream,
            timeout=timeout,
            skip_deserialization=skip_deserialization
        )


