# coding: utf-8

"""


    Generated by: https://openapi-generator.tech
"""

from dataclasses import dataclass
import typing_extensions
import urllib3
from urllib3._collections import HTTPHeaderDict

from openapi_client import api_client, exceptions
from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401

from openapi_client.model.bagnummeraanduidingen import Bagnummeraanduidingen

# Query params
ExpandSchema = schemas.BoolSchema
ExpandScopeSchema = schemas.StrSchema
FieldsSchema = schemas.StrSchema


class FormatSchema(
    schemas.EnumBase,
    schemas.StrSchema
):
    
    @schemas.classproperty
    def JSON(cls):
        return cls("json")
    
    @schemas.classproperty
    def CSV(cls):
        return cls("csv")
    
    @schemas.classproperty
    def GEOJSON(cls):
        return cls("geojson")
SortSchema = schemas.StrSchema
AdresseertLigplaatsIdentificatieSchema = schemas.StrSchema


class AdresseertLigplaatsIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AdresseertLigplaatsIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AdresseertLigplaatsIdentificatieIsemptySchema = schemas.BoolSchema
AdresseertLigplaatsIdentificatieIsnullSchema = schemas.BoolSchema
AdresseertLigplaatsIdentificatieLikeSchema = schemas.StrSchema


class AdresseertLigplaatsIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AdresseertLigplaatsIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AdresseertLigplaatsVolgnummerSchema = schemas.IntSchema
AdresseertLigplaatsVolgnummerGtSchema = schemas.IntSchema
AdresseertLigplaatsVolgnummerGteSchema = schemas.IntSchema


class AdresseertLigplaatsVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AdresseertLigplaatsVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AdresseertLigplaatsVolgnummerIsnullSchema = schemas.BoolSchema
AdresseertLigplaatsVolgnummerLtSchema = schemas.IntSchema
AdresseertLigplaatsVolgnummerLteSchema = schemas.IntSchema


class AdresseertLigplaatsVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AdresseertLigplaatsVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AdresseertStandplaatsIdentificatieSchema = schemas.StrSchema


class AdresseertStandplaatsIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AdresseertStandplaatsIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AdresseertStandplaatsIdentificatieIsemptySchema = schemas.BoolSchema
AdresseertStandplaatsIdentificatieIsnullSchema = schemas.BoolSchema
AdresseertStandplaatsIdentificatieLikeSchema = schemas.StrSchema


class AdresseertStandplaatsIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AdresseertStandplaatsIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AdresseertStandplaatsVolgnummerSchema = schemas.IntSchema
AdresseertStandplaatsVolgnummerGtSchema = schemas.IntSchema
AdresseertStandplaatsVolgnummerGteSchema = schemas.IntSchema


class AdresseertStandplaatsVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AdresseertStandplaatsVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AdresseertStandplaatsVolgnummerIsnullSchema = schemas.BoolSchema
AdresseertStandplaatsVolgnummerLtSchema = schemas.IntSchema
AdresseertStandplaatsVolgnummerLteSchema = schemas.IntSchema


class AdresseertStandplaatsVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AdresseertStandplaatsVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AdresseertVerblijfsobjectIdentificatieSchema = schemas.StrSchema


class AdresseertVerblijfsobjectIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AdresseertVerblijfsobjectIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AdresseertVerblijfsobjectIdentificatieIsemptySchema = schemas.BoolSchema
AdresseertVerblijfsobjectIdentificatieIsnullSchema = schemas.BoolSchema
AdresseertVerblijfsobjectIdentificatieLikeSchema = schemas.StrSchema


class AdresseertVerblijfsobjectIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AdresseertVerblijfsobjectIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AdresseertVerblijfsobjectVolgnummerSchema = schemas.IntSchema
AdresseertVerblijfsobjectVolgnummerGtSchema = schemas.IntSchema
AdresseertVerblijfsobjectVolgnummerGteSchema = schemas.IntSchema


class AdresseertVerblijfsobjectVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AdresseertVerblijfsobjectVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
AdresseertVerblijfsobjectVolgnummerIsnullSchema = schemas.BoolSchema
AdresseertVerblijfsobjectVolgnummerLtSchema = schemas.IntSchema
AdresseertVerblijfsobjectVolgnummerLteSchema = schemas.IntSchema


class AdresseertVerblijfsobjectVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AdresseertVerblijfsobjectVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BagprocesCodeSchema = schemas.IntSchema
BagprocesCodeGtSchema = schemas.IntSchema
BagprocesCodeGteSchema = schemas.IntSchema


class BagprocesCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BagprocesCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BagprocesCodeIsnullSchema = schemas.BoolSchema
BagprocesCodeLtSchema = schemas.IntSchema
BagprocesCodeLteSchema = schemas.IntSchema


class BagprocesCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BagprocesCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BagprocesOmschrijvingSchema = schemas.StrSchema


class BagprocesOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BagprocesOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BagprocesOmschrijvingIsemptySchema = schemas.BoolSchema
BagprocesOmschrijvingIsnullSchema = schemas.BoolSchema
BagprocesOmschrijvingLikeSchema = schemas.StrSchema


class BagprocesOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BagprocesOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BeginGeldigheidSchema = schemas.DateTimeSchema
BeginGeldigheidGtSchema = schemas.DateTimeSchema
BeginGeldigheidGteSchema = schemas.DateTimeSchema


class BeginGeldigheidInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BeginGeldigheidInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
BeginGeldigheidIsnullSchema = schemas.BoolSchema
BeginGeldigheidLtSchema = schemas.DateTimeSchema
BeginGeldigheidLteSchema = schemas.DateTimeSchema


class BeginGeldigheidNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'BeginGeldigheidNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
DocumentdatumSchema = schemas.DateSchema
DocumentdatumGtSchema = schemas.DateSchema
DocumentdatumGteSchema = schemas.DateSchema


class DocumentdatumInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, date, ]], typing.List[typing.Union[MetaOapg.items, str, date, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DocumentdatumInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
DocumentdatumIsnullSchema = schemas.BoolSchema
DocumentdatumLtSchema = schemas.DateSchema
DocumentdatumLteSchema = schemas.DateSchema


class DocumentdatumNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, date, ]], typing.List[typing.Union[MetaOapg.items, str, date, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DocumentdatumNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
DocumentnummerSchema = schemas.StrSchema


class DocumentnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DocumentnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
DocumentnummerIsemptySchema = schemas.BoolSchema
DocumentnummerIsnullSchema = schemas.BoolSchema
DocumentnummerLikeSchema = schemas.StrSchema


class DocumentnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'DocumentnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
EindGeldigheidSchema = schemas.DateTimeSchema
EindGeldigheidGtSchema = schemas.DateTimeSchema
EindGeldigheidGteSchema = schemas.DateTimeSchema


class EindGeldigheidInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'EindGeldigheidInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
EindGeldigheidIsnullSchema = schemas.BoolSchema
EindGeldigheidLtSchema = schemas.DateTimeSchema
EindGeldigheidLteSchema = schemas.DateTimeSchema


class EindGeldigheidNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'EindGeldigheidNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
GeconstateerdSchema = schemas.BoolSchema
GeconstateerdIsnullSchema = schemas.BoolSchema
GeldigOpSchema = schemas.DateTimeSchema
GeldigOpGtSchema = schemas.DateTimeSchema
GeldigOpGteSchema = schemas.DateTimeSchema
GeldigOpInSchema = schemas.DateTimeSchema
GeldigOpIsnullSchema = schemas.DateTimeSchema
GeldigOpLtSchema = schemas.DateTimeSchema
GeldigOpLteSchema = schemas.DateTimeSchema
GeldigOpNotSchema = schemas.DateTimeSchema
HeeftDossierDossierSchema = schemas.StrSchema


class HeeftDossierDossierInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftDossierDossierInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftDossierDossierIsemptySchema = schemas.BoolSchema
HeeftDossierDossierIsnullSchema = schemas.BoolSchema
HeeftDossierDossierLikeSchema = schemas.StrSchema


class HeeftDossierDossierNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftDossierDossierNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftOnderzoekenIdentificatieSchema = schemas.StrSchema


class HeeftOnderzoekenIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftOnderzoekenIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftOnderzoekenIdentificatieIsemptySchema = schemas.BoolSchema
HeeftOnderzoekenIdentificatieIsnullSchema = schemas.BoolSchema
HeeftOnderzoekenIdentificatieLikeSchema = schemas.StrSchema


class HeeftOnderzoekenIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftOnderzoekenIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftOnderzoekenVolgnummerSchema = schemas.IntSchema
HeeftOnderzoekenVolgnummerGtSchema = schemas.IntSchema
HeeftOnderzoekenVolgnummerGteSchema = schemas.IntSchema


class HeeftOnderzoekenVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftOnderzoekenVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HeeftOnderzoekenVolgnummerIsnullSchema = schemas.BoolSchema
HeeftOnderzoekenVolgnummerLtSchema = schemas.IntSchema
HeeftOnderzoekenVolgnummerLteSchema = schemas.IntSchema


class HeeftOnderzoekenVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HeeftOnderzoekenVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HuisletterSchema = schemas.StrSchema


class HuisletterInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HuisletterInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HuisletterIsemptySchema = schemas.BoolSchema
HuisletterIsnullSchema = schemas.BoolSchema
HuisletterLikeSchema = schemas.StrSchema


class HuisletterNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HuisletterNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HuisnummerSchema = schemas.IntSchema
HuisnummerGtSchema = schemas.IntSchema
HuisnummerGteSchema = schemas.IntSchema


class HuisnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HuisnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HuisnummerIsnullSchema = schemas.BoolSchema
HuisnummerLtSchema = schemas.IntSchema
HuisnummerLteSchema = schemas.IntSchema


class HuisnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HuisnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HuisnummertoevoegingSchema = schemas.StrSchema


class HuisnummertoevoegingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HuisnummertoevoegingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
HuisnummertoevoegingIsemptySchema = schemas.BoolSchema
HuisnummertoevoegingIsnullSchema = schemas.BoolSchema
HuisnummertoevoegingLikeSchema = schemas.StrSchema


class HuisnummertoevoegingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'HuisnummertoevoegingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IdSchema = schemas.StrSchema


class IdInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IdInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IdIsemptySchema = schemas.BoolSchema
IdIsnullSchema = schemas.BoolSchema
IdLikeSchema = schemas.StrSchema


class IdNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IdNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IdentificatieSchema = schemas.StrSchema


class IdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
IdentificatieIsemptySchema = schemas.BoolSchema
IdentificatieIsnullSchema = schemas.BoolSchema
IdentificatieLikeSchema = schemas.StrSchema


class IdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'IdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtAanOpenbareruimteIdentificatieSchema = schemas.StrSchema


class LigtAanOpenbareruimteIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtAanOpenbareruimteIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtAanOpenbareruimteIdentificatieIsemptySchema = schemas.BoolSchema
LigtAanOpenbareruimteIdentificatieIsnullSchema = schemas.BoolSchema
LigtAanOpenbareruimteIdentificatieLikeSchema = schemas.StrSchema


class LigtAanOpenbareruimteIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtAanOpenbareruimteIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtAanOpenbareruimteVolgnummerSchema = schemas.IntSchema
LigtAanOpenbareruimteVolgnummerGtSchema = schemas.IntSchema
LigtAanOpenbareruimteVolgnummerGteSchema = schemas.IntSchema


class LigtAanOpenbareruimteVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtAanOpenbareruimteVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtAanOpenbareruimteVolgnummerIsnullSchema = schemas.BoolSchema
LigtAanOpenbareruimteVolgnummerLtSchema = schemas.IntSchema
LigtAanOpenbareruimteVolgnummerLteSchema = schemas.IntSchema


class LigtAanOpenbareruimteVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtAanOpenbareruimteVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInWoonplaatsIdentificatieSchema = schemas.StrSchema


class LigtInWoonplaatsIdentificatieInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInWoonplaatsIdentificatieInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInWoonplaatsIdentificatieIsemptySchema = schemas.BoolSchema
LigtInWoonplaatsIdentificatieIsnullSchema = schemas.BoolSchema
LigtInWoonplaatsIdentificatieLikeSchema = schemas.StrSchema


class LigtInWoonplaatsIdentificatieNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInWoonplaatsIdentificatieNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInWoonplaatsVolgnummerSchema = schemas.IntSchema
LigtInWoonplaatsVolgnummerGtSchema = schemas.IntSchema
LigtInWoonplaatsVolgnummerGteSchema = schemas.IntSchema


class LigtInWoonplaatsVolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInWoonplaatsVolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
LigtInWoonplaatsVolgnummerIsnullSchema = schemas.BoolSchema
LigtInWoonplaatsVolgnummerLtSchema = schemas.IntSchema
LigtInWoonplaatsVolgnummerLteSchema = schemas.IntSchema


class LigtInWoonplaatsVolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'LigtInWoonplaatsVolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
PostcodeSchema = schemas.StrSchema


class PostcodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'PostcodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
PostcodeIsemptySchema = schemas.BoolSchema
PostcodeIsnullSchema = schemas.BoolSchema
PostcodeLikeSchema = schemas.StrSchema


class PostcodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'PostcodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RegistratiedatumSchema = schemas.DateTimeSchema
RegistratiedatumGtSchema = schemas.DateTimeSchema
RegistratiedatumGteSchema = schemas.DateTimeSchema


class RegistratiedatumInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RegistratiedatumInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RegistratiedatumIsnullSchema = schemas.BoolSchema
RegistratiedatumLtSchema = schemas.DateTimeSchema
RegistratiedatumLteSchema = schemas.DateTimeSchema


class RegistratiedatumNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.DateTimeSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, datetime, ]], typing.List[typing.Union[MetaOapg.items, str, datetime, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RegistratiedatumNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
StatusCodeSchema = schemas.IntSchema
StatusCodeGtSchema = schemas.IntSchema
StatusCodeGteSchema = schemas.IntSchema


class StatusCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'StatusCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
StatusCodeIsnullSchema = schemas.BoolSchema
StatusCodeLtSchema = schemas.IntSchema
StatusCodeLteSchema = schemas.IntSchema


class StatusCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'StatusCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
StatusOmschrijvingSchema = schemas.StrSchema


class StatusOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'StatusOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
StatusOmschrijvingIsemptySchema = schemas.BoolSchema
StatusOmschrijvingIsnullSchema = schemas.BoolSchema
StatusOmschrijvingLikeSchema = schemas.StrSchema


class StatusOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'StatusOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
TypeAdresSchema = schemas.StrSchema


class TypeAdresInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'TypeAdresInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
TypeAdresIsemptySchema = schemas.BoolSchema
TypeAdresIsnullSchema = schemas.BoolSchema
TypeAdresLikeSchema = schemas.StrSchema


class TypeAdresNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'TypeAdresNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
TypeAdresseerbaarObjectCodeSchema = schemas.IntSchema
TypeAdresseerbaarObjectCodeGtSchema = schemas.IntSchema
TypeAdresseerbaarObjectCodeGteSchema = schemas.IntSchema


class TypeAdresseerbaarObjectCodeInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'TypeAdresseerbaarObjectCodeInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
TypeAdresseerbaarObjectCodeIsnullSchema = schemas.BoolSchema
TypeAdresseerbaarObjectCodeLtSchema = schemas.IntSchema
TypeAdresseerbaarObjectCodeLteSchema = schemas.IntSchema


class TypeAdresseerbaarObjectCodeNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'TypeAdresseerbaarObjectCodeNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
TypeAdresseerbaarObjectOmschrijvingSchema = schemas.StrSchema


class TypeAdresseerbaarObjectOmschrijvingInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'TypeAdresseerbaarObjectOmschrijvingInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
TypeAdresseerbaarObjectOmschrijvingIsemptySchema = schemas.BoolSchema
TypeAdresseerbaarObjectOmschrijvingIsnullSchema = schemas.BoolSchema
TypeAdresseerbaarObjectOmschrijvingLikeSchema = schemas.StrSchema


class TypeAdresseerbaarObjectOmschrijvingNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.StrSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'TypeAdresseerbaarObjectOmschrijvingNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
VolgnummerSchema = schemas.IntSchema
VolgnummerGtSchema = schemas.IntSchema
VolgnummerGteSchema = schemas.IntSchema


class VolgnummerInSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'VolgnummerInSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
VolgnummerIsnullSchema = schemas.BoolSchema
VolgnummerLtSchema = schemas.IntSchema
VolgnummerLteSchema = schemas.IntSchema


class VolgnummerNotSchema(
    schemas.ListSchema
):


    class MetaOapg:
        items = schemas.IntSchema

    def __new__(
        cls,
        _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'VolgnummerNotSchema':
        return super().__new__(
            cls,
            _arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
RequestRequiredQueryParams = typing_extensions.TypedDict(
    'RequestRequiredQueryParams',
    {
    }
)
RequestOptionalQueryParams = typing_extensions.TypedDict(
    'RequestOptionalQueryParams',
    {
        '_expand': typing.Union[ExpandSchema, bool, ],
        '_expandScope': typing.Union[ExpandScopeSchema, str, ],
        '_fields': typing.Union[FieldsSchema, str, ],
        '_format': typing.Union[FormatSchema, str, ],
        '_sort': typing.Union[SortSchema, str, ],
        'adresseertLigplaats.identificatie': typing.Union[AdresseertLigplaatsIdentificatieSchema, str, ],
        'adresseertLigplaats.identificatie[in]': typing.Union[AdresseertLigplaatsIdentificatieInSchema, list, tuple, ],
        'adresseertLigplaats.identificatie[isempty]': typing.Union[AdresseertLigplaatsIdentificatieIsemptySchema, bool, ],
        'adresseertLigplaats.identificatie[isnull]': typing.Union[AdresseertLigplaatsIdentificatieIsnullSchema, bool, ],
        'adresseertLigplaats.identificatie[like]': typing.Union[AdresseertLigplaatsIdentificatieLikeSchema, str, ],
        'adresseertLigplaats.identificatie[not]': typing.Union[AdresseertLigplaatsIdentificatieNotSchema, list, tuple, ],
        'adresseertLigplaats.volgnummer': typing.Union[AdresseertLigplaatsVolgnummerSchema, decimal.Decimal, int, ],
        'adresseertLigplaats.volgnummer[gt]': typing.Union[AdresseertLigplaatsVolgnummerGtSchema, decimal.Decimal, int, ],
        'adresseertLigplaats.volgnummer[gte]': typing.Union[AdresseertLigplaatsVolgnummerGteSchema, decimal.Decimal, int, ],
        'adresseertLigplaats.volgnummer[in]': typing.Union[AdresseertLigplaatsVolgnummerInSchema, list, tuple, ],
        'adresseertLigplaats.volgnummer[isnull]': typing.Union[AdresseertLigplaatsVolgnummerIsnullSchema, bool, ],
        'adresseertLigplaats.volgnummer[lt]': typing.Union[AdresseertLigplaatsVolgnummerLtSchema, decimal.Decimal, int, ],
        'adresseertLigplaats.volgnummer[lte]': typing.Union[AdresseertLigplaatsVolgnummerLteSchema, decimal.Decimal, int, ],
        'adresseertLigplaats.volgnummer[not]': typing.Union[AdresseertLigplaatsVolgnummerNotSchema, list, tuple, ],
        'adresseertStandplaats.identificatie': typing.Union[AdresseertStandplaatsIdentificatieSchema, str, ],
        'adresseertStandplaats.identificatie[in]': typing.Union[AdresseertStandplaatsIdentificatieInSchema, list, tuple, ],
        'adresseertStandplaats.identificatie[isempty]': typing.Union[AdresseertStandplaatsIdentificatieIsemptySchema, bool, ],
        'adresseertStandplaats.identificatie[isnull]': typing.Union[AdresseertStandplaatsIdentificatieIsnullSchema, bool, ],
        'adresseertStandplaats.identificatie[like]': typing.Union[AdresseertStandplaatsIdentificatieLikeSchema, str, ],
        'adresseertStandplaats.identificatie[not]': typing.Union[AdresseertStandplaatsIdentificatieNotSchema, list, tuple, ],
        'adresseertStandplaats.volgnummer': typing.Union[AdresseertStandplaatsVolgnummerSchema, decimal.Decimal, int, ],
        'adresseertStandplaats.volgnummer[gt]': typing.Union[AdresseertStandplaatsVolgnummerGtSchema, decimal.Decimal, int, ],
        'adresseertStandplaats.volgnummer[gte]': typing.Union[AdresseertStandplaatsVolgnummerGteSchema, decimal.Decimal, int, ],
        'adresseertStandplaats.volgnummer[in]': typing.Union[AdresseertStandplaatsVolgnummerInSchema, list, tuple, ],
        'adresseertStandplaats.volgnummer[isnull]': typing.Union[AdresseertStandplaatsVolgnummerIsnullSchema, bool, ],
        'adresseertStandplaats.volgnummer[lt]': typing.Union[AdresseertStandplaatsVolgnummerLtSchema, decimal.Decimal, int, ],
        'adresseertStandplaats.volgnummer[lte]': typing.Union[AdresseertStandplaatsVolgnummerLteSchema, decimal.Decimal, int, ],
        'adresseertStandplaats.volgnummer[not]': typing.Union[AdresseertStandplaatsVolgnummerNotSchema, list, tuple, ],
        'adresseertVerblijfsobject.identificatie': typing.Union[AdresseertVerblijfsobjectIdentificatieSchema, str, ],
        'adresseertVerblijfsobject.identificatie[in]': typing.Union[AdresseertVerblijfsobjectIdentificatieInSchema, list, tuple, ],
        'adresseertVerblijfsobject.identificatie[isempty]': typing.Union[AdresseertVerblijfsobjectIdentificatieIsemptySchema, bool, ],
        'adresseertVerblijfsobject.identificatie[isnull]': typing.Union[AdresseertVerblijfsobjectIdentificatieIsnullSchema, bool, ],
        'adresseertVerblijfsobject.identificatie[like]': typing.Union[AdresseertVerblijfsobjectIdentificatieLikeSchema, str, ],
        'adresseertVerblijfsobject.identificatie[not]': typing.Union[AdresseertVerblijfsobjectIdentificatieNotSchema, list, tuple, ],
        'adresseertVerblijfsobject.volgnummer': typing.Union[AdresseertVerblijfsobjectVolgnummerSchema, decimal.Decimal, int, ],
        'adresseertVerblijfsobject.volgnummer[gt]': typing.Union[AdresseertVerblijfsobjectVolgnummerGtSchema, decimal.Decimal, int, ],
        'adresseertVerblijfsobject.volgnummer[gte]': typing.Union[AdresseertVerblijfsobjectVolgnummerGteSchema, decimal.Decimal, int, ],
        'adresseertVerblijfsobject.volgnummer[in]': typing.Union[AdresseertVerblijfsobjectVolgnummerInSchema, list, tuple, ],
        'adresseertVerblijfsobject.volgnummer[isnull]': typing.Union[AdresseertVerblijfsobjectVolgnummerIsnullSchema, bool, ],
        'adresseertVerblijfsobject.volgnummer[lt]': typing.Union[AdresseertVerblijfsobjectVolgnummerLtSchema, decimal.Decimal, int, ],
        'adresseertVerblijfsobject.volgnummer[lte]': typing.Union[AdresseertVerblijfsobjectVolgnummerLteSchema, decimal.Decimal, int, ],
        'adresseertVerblijfsobject.volgnummer[not]': typing.Union[AdresseertVerblijfsobjectVolgnummerNotSchema, list, tuple, ],
        'bagprocesCode': typing.Union[BagprocesCodeSchema, decimal.Decimal, int, ],
        'bagprocesCode[gt]': typing.Union[BagprocesCodeGtSchema, decimal.Decimal, int, ],
        'bagprocesCode[gte]': typing.Union[BagprocesCodeGteSchema, decimal.Decimal, int, ],
        'bagprocesCode[in]': typing.Union[BagprocesCodeInSchema, list, tuple, ],
        'bagprocesCode[isnull]': typing.Union[BagprocesCodeIsnullSchema, bool, ],
        'bagprocesCode[lt]': typing.Union[BagprocesCodeLtSchema, decimal.Decimal, int, ],
        'bagprocesCode[lte]': typing.Union[BagprocesCodeLteSchema, decimal.Decimal, int, ],
        'bagprocesCode[not]': typing.Union[BagprocesCodeNotSchema, list, tuple, ],
        'bagprocesOmschrijving': typing.Union[BagprocesOmschrijvingSchema, str, ],
        'bagprocesOmschrijving[in]': typing.Union[BagprocesOmschrijvingInSchema, list, tuple, ],
        'bagprocesOmschrijving[isempty]': typing.Union[BagprocesOmschrijvingIsemptySchema, bool, ],
        'bagprocesOmschrijving[isnull]': typing.Union[BagprocesOmschrijvingIsnullSchema, bool, ],
        'bagprocesOmschrijving[like]': typing.Union[BagprocesOmschrijvingLikeSchema, str, ],
        'bagprocesOmschrijving[not]': typing.Union[BagprocesOmschrijvingNotSchema, list, tuple, ],
        'beginGeldigheid': typing.Union[BeginGeldigheidSchema, str, datetime, ],
        'beginGeldigheid[gt]': typing.Union[BeginGeldigheidGtSchema, str, datetime, ],
        'beginGeldigheid[gte]': typing.Union[BeginGeldigheidGteSchema, str, datetime, ],
        'beginGeldigheid[in]': typing.Union[BeginGeldigheidInSchema, list, tuple, ],
        'beginGeldigheid[isnull]': typing.Union[BeginGeldigheidIsnullSchema, bool, ],
        'beginGeldigheid[lt]': typing.Union[BeginGeldigheidLtSchema, str, datetime, ],
        'beginGeldigheid[lte]': typing.Union[BeginGeldigheidLteSchema, str, datetime, ],
        'beginGeldigheid[not]': typing.Union[BeginGeldigheidNotSchema, list, tuple, ],
        'documentdatum': typing.Union[DocumentdatumSchema, str, date, ],
        'documentdatum[gt]': typing.Union[DocumentdatumGtSchema, str, date, ],
        'documentdatum[gte]': typing.Union[DocumentdatumGteSchema, str, date, ],
        'documentdatum[in]': typing.Union[DocumentdatumInSchema, list, tuple, ],
        'documentdatum[isnull]': typing.Union[DocumentdatumIsnullSchema, bool, ],
        'documentdatum[lt]': typing.Union[DocumentdatumLtSchema, str, date, ],
        'documentdatum[lte]': typing.Union[DocumentdatumLteSchema, str, date, ],
        'documentdatum[not]': typing.Union[DocumentdatumNotSchema, list, tuple, ],
        'documentnummer': typing.Union[DocumentnummerSchema, str, ],
        'documentnummer[in]': typing.Union[DocumentnummerInSchema, list, tuple, ],
        'documentnummer[isempty]': typing.Union[DocumentnummerIsemptySchema, bool, ],
        'documentnummer[isnull]': typing.Union[DocumentnummerIsnullSchema, bool, ],
        'documentnummer[like]': typing.Union[DocumentnummerLikeSchema, str, ],
        'documentnummer[not]': typing.Union[DocumentnummerNotSchema, list, tuple, ],
        'eindGeldigheid': typing.Union[EindGeldigheidSchema, str, datetime, ],
        'eindGeldigheid[gt]': typing.Union[EindGeldigheidGtSchema, str, datetime, ],
        'eindGeldigheid[gte]': typing.Union[EindGeldigheidGteSchema, str, datetime, ],
        'eindGeldigheid[in]': typing.Union[EindGeldigheidInSchema, list, tuple, ],
        'eindGeldigheid[isnull]': typing.Union[EindGeldigheidIsnullSchema, bool, ],
        'eindGeldigheid[lt]': typing.Union[EindGeldigheidLtSchema, str, datetime, ],
        'eindGeldigheid[lte]': typing.Union[EindGeldigheidLteSchema, str, datetime, ],
        'eindGeldigheid[not]': typing.Union[EindGeldigheidNotSchema, list, tuple, ],
        'geconstateerd': typing.Union[GeconstateerdSchema, bool, ],
        'geconstateerd[isnull]': typing.Union[GeconstateerdIsnullSchema, bool, ],
        'geldigOp': typing.Union[GeldigOpSchema, str, datetime, ],
        'geldigOp[gt]': typing.Union[GeldigOpGtSchema, str, datetime, ],
        'geldigOp[gte]': typing.Union[GeldigOpGteSchema, str, datetime, ],
        'geldigOp[in]': typing.Union[GeldigOpInSchema, str, datetime, ],
        'geldigOp[isnull]': typing.Union[GeldigOpIsnullSchema, str, datetime, ],
        'geldigOp[lt]': typing.Union[GeldigOpLtSchema, str, datetime, ],
        'geldigOp[lte]': typing.Union[GeldigOpLteSchema, str, datetime, ],
        'geldigOp[not]': typing.Union[GeldigOpNotSchema, str, datetime, ],
        'heeftDossier.dossier': typing.Union[HeeftDossierDossierSchema, str, ],
        'heeftDossier.dossier[in]': typing.Union[HeeftDossierDossierInSchema, list, tuple, ],
        'heeftDossier.dossier[isempty]': typing.Union[HeeftDossierDossierIsemptySchema, bool, ],
        'heeftDossier.dossier[isnull]': typing.Union[HeeftDossierDossierIsnullSchema, bool, ],
        'heeftDossier.dossier[like]': typing.Union[HeeftDossierDossierLikeSchema, str, ],
        'heeftDossier.dossier[not]': typing.Union[HeeftDossierDossierNotSchema, list, tuple, ],
        'heeftOnderzoeken.identificatie': typing.Union[HeeftOnderzoekenIdentificatieSchema, str, ],
        'heeftOnderzoeken.identificatie[in]': typing.Union[HeeftOnderzoekenIdentificatieInSchema, list, tuple, ],
        'heeftOnderzoeken.identificatie[isempty]': typing.Union[HeeftOnderzoekenIdentificatieIsemptySchema, bool, ],
        'heeftOnderzoeken.identificatie[isnull]': typing.Union[HeeftOnderzoekenIdentificatieIsnullSchema, bool, ],
        'heeftOnderzoeken.identificatie[like]': typing.Union[HeeftOnderzoekenIdentificatieLikeSchema, str, ],
        'heeftOnderzoeken.identificatie[not]': typing.Union[HeeftOnderzoekenIdentificatieNotSchema, list, tuple, ],
        'heeftOnderzoeken.volgnummer': typing.Union[HeeftOnderzoekenVolgnummerSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[gt]': typing.Union[HeeftOnderzoekenVolgnummerGtSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[gte]': typing.Union[HeeftOnderzoekenVolgnummerGteSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[in]': typing.Union[HeeftOnderzoekenVolgnummerInSchema, list, tuple, ],
        'heeftOnderzoeken.volgnummer[isnull]': typing.Union[HeeftOnderzoekenVolgnummerIsnullSchema, bool, ],
        'heeftOnderzoeken.volgnummer[lt]': typing.Union[HeeftOnderzoekenVolgnummerLtSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[lte]': typing.Union[HeeftOnderzoekenVolgnummerLteSchema, decimal.Decimal, int, ],
        'heeftOnderzoeken.volgnummer[not]': typing.Union[HeeftOnderzoekenVolgnummerNotSchema, list, tuple, ],
        'huisletter': typing.Union[HuisletterSchema, str, ],
        'huisletter[in]': typing.Union[HuisletterInSchema, list, tuple, ],
        'huisletter[isempty]': typing.Union[HuisletterIsemptySchema, bool, ],
        'huisletter[isnull]': typing.Union[HuisletterIsnullSchema, bool, ],
        'huisletter[like]': typing.Union[HuisletterLikeSchema, str, ],
        'huisletter[not]': typing.Union[HuisletterNotSchema, list, tuple, ],
        'huisnummer': typing.Union[HuisnummerSchema, decimal.Decimal, int, ],
        'huisnummer[gt]': typing.Union[HuisnummerGtSchema, decimal.Decimal, int, ],
        'huisnummer[gte]': typing.Union[HuisnummerGteSchema, decimal.Decimal, int, ],
        'huisnummer[in]': typing.Union[HuisnummerInSchema, list, tuple, ],
        'huisnummer[isnull]': typing.Union[HuisnummerIsnullSchema, bool, ],
        'huisnummer[lt]': typing.Union[HuisnummerLtSchema, decimal.Decimal, int, ],
        'huisnummer[lte]': typing.Union[HuisnummerLteSchema, decimal.Decimal, int, ],
        'huisnummer[not]': typing.Union[HuisnummerNotSchema, list, tuple, ],
        'huisnummertoevoeging': typing.Union[HuisnummertoevoegingSchema, str, ],
        'huisnummertoevoeging[in]': typing.Union[HuisnummertoevoegingInSchema, list, tuple, ],
        'huisnummertoevoeging[isempty]': typing.Union[HuisnummertoevoegingIsemptySchema, bool, ],
        'huisnummertoevoeging[isnull]': typing.Union[HuisnummertoevoegingIsnullSchema, bool, ],
        'huisnummertoevoeging[like]': typing.Union[HuisnummertoevoegingLikeSchema, str, ],
        'huisnummertoevoeging[not]': typing.Union[HuisnummertoevoegingNotSchema, list, tuple, ],
        'id': typing.Union[IdSchema, str, ],
        'id[in]': typing.Union[IdInSchema, list, tuple, ],
        'id[isempty]': typing.Union[IdIsemptySchema, bool, ],
        'id[isnull]': typing.Union[IdIsnullSchema, bool, ],
        'id[like]': typing.Union[IdLikeSchema, str, ],
        'id[not]': typing.Union[IdNotSchema, list, tuple, ],
        'identificatie': typing.Union[IdentificatieSchema, str, ],
        'identificatie[in]': typing.Union[IdentificatieInSchema, list, tuple, ],
        'identificatie[isempty]': typing.Union[IdentificatieIsemptySchema, bool, ],
        'identificatie[isnull]': typing.Union[IdentificatieIsnullSchema, bool, ],
        'identificatie[like]': typing.Union[IdentificatieLikeSchema, str, ],
        'identificatie[not]': typing.Union[IdentificatieNotSchema, list, tuple, ],
        'ligtAanOpenbareruimte.identificatie': typing.Union[LigtAanOpenbareruimteIdentificatieSchema, str, ],
        'ligtAanOpenbareruimte.identificatie[in]': typing.Union[LigtAanOpenbareruimteIdentificatieInSchema, list, tuple, ],
        'ligtAanOpenbareruimte.identificatie[isempty]': typing.Union[LigtAanOpenbareruimteIdentificatieIsemptySchema, bool, ],
        'ligtAanOpenbareruimte.identificatie[isnull]': typing.Union[LigtAanOpenbareruimteIdentificatieIsnullSchema, bool, ],
        'ligtAanOpenbareruimte.identificatie[like]': typing.Union[LigtAanOpenbareruimteIdentificatieLikeSchema, str, ],
        'ligtAanOpenbareruimte.identificatie[not]': typing.Union[LigtAanOpenbareruimteIdentificatieNotSchema, list, tuple, ],
        'ligtAanOpenbareruimte.volgnummer': typing.Union[LigtAanOpenbareruimteVolgnummerSchema, decimal.Decimal, int, ],
        'ligtAanOpenbareruimte.volgnummer[gt]': typing.Union[LigtAanOpenbareruimteVolgnummerGtSchema, decimal.Decimal, int, ],
        'ligtAanOpenbareruimte.volgnummer[gte]': typing.Union[LigtAanOpenbareruimteVolgnummerGteSchema, decimal.Decimal, int, ],
        'ligtAanOpenbareruimte.volgnummer[in]': typing.Union[LigtAanOpenbareruimteVolgnummerInSchema, list, tuple, ],
        'ligtAanOpenbareruimte.volgnummer[isnull]': typing.Union[LigtAanOpenbareruimteVolgnummerIsnullSchema, bool, ],
        'ligtAanOpenbareruimte.volgnummer[lt]': typing.Union[LigtAanOpenbareruimteVolgnummerLtSchema, decimal.Decimal, int, ],
        'ligtAanOpenbareruimte.volgnummer[lte]': typing.Union[LigtAanOpenbareruimteVolgnummerLteSchema, decimal.Decimal, int, ],
        'ligtAanOpenbareruimte.volgnummer[not]': typing.Union[LigtAanOpenbareruimteVolgnummerNotSchema, list, tuple, ],
        'ligtInWoonplaats.identificatie': typing.Union[LigtInWoonplaatsIdentificatieSchema, str, ],
        'ligtInWoonplaats.identificatie[in]': typing.Union[LigtInWoonplaatsIdentificatieInSchema, list, tuple, ],
        'ligtInWoonplaats.identificatie[isempty]': typing.Union[LigtInWoonplaatsIdentificatieIsemptySchema, bool, ],
        'ligtInWoonplaats.identificatie[isnull]': typing.Union[LigtInWoonplaatsIdentificatieIsnullSchema, bool, ],
        'ligtInWoonplaats.identificatie[like]': typing.Union[LigtInWoonplaatsIdentificatieLikeSchema, str, ],
        'ligtInWoonplaats.identificatie[not]': typing.Union[LigtInWoonplaatsIdentificatieNotSchema, list, tuple, ],
        'ligtInWoonplaats.volgnummer': typing.Union[LigtInWoonplaatsVolgnummerSchema, decimal.Decimal, int, ],
        'ligtInWoonplaats.volgnummer[gt]': typing.Union[LigtInWoonplaatsVolgnummerGtSchema, decimal.Decimal, int, ],
        'ligtInWoonplaats.volgnummer[gte]': typing.Union[LigtInWoonplaatsVolgnummerGteSchema, decimal.Decimal, int, ],
        'ligtInWoonplaats.volgnummer[in]': typing.Union[LigtInWoonplaatsVolgnummerInSchema, list, tuple, ],
        'ligtInWoonplaats.volgnummer[isnull]': typing.Union[LigtInWoonplaatsVolgnummerIsnullSchema, bool, ],
        'ligtInWoonplaats.volgnummer[lt]': typing.Union[LigtInWoonplaatsVolgnummerLtSchema, decimal.Decimal, int, ],
        'ligtInWoonplaats.volgnummer[lte]': typing.Union[LigtInWoonplaatsVolgnummerLteSchema, decimal.Decimal, int, ],
        'ligtInWoonplaats.volgnummer[not]': typing.Union[LigtInWoonplaatsVolgnummerNotSchema, list, tuple, ],
        'postcode': typing.Union[PostcodeSchema, str, ],
        'postcode[in]': typing.Union[PostcodeInSchema, list, tuple, ],
        'postcode[isempty]': typing.Union[PostcodeIsemptySchema, bool, ],
        'postcode[isnull]': typing.Union[PostcodeIsnullSchema, bool, ],
        'postcode[like]': typing.Union[PostcodeLikeSchema, str, ],
        'postcode[not]': typing.Union[PostcodeNotSchema, list, tuple, ],
        'registratiedatum': typing.Union[RegistratiedatumSchema, str, datetime, ],
        'registratiedatum[gt]': typing.Union[RegistratiedatumGtSchema, str, datetime, ],
        'registratiedatum[gte]': typing.Union[RegistratiedatumGteSchema, str, datetime, ],
        'registratiedatum[in]': typing.Union[RegistratiedatumInSchema, list, tuple, ],
        'registratiedatum[isnull]': typing.Union[RegistratiedatumIsnullSchema, bool, ],
        'registratiedatum[lt]': typing.Union[RegistratiedatumLtSchema, str, datetime, ],
        'registratiedatum[lte]': typing.Union[RegistratiedatumLteSchema, str, datetime, ],
        'registratiedatum[not]': typing.Union[RegistratiedatumNotSchema, list, tuple, ],
        'statusCode': typing.Union[StatusCodeSchema, decimal.Decimal, int, ],
        'statusCode[gt]': typing.Union[StatusCodeGtSchema, decimal.Decimal, int, ],
        'statusCode[gte]': typing.Union[StatusCodeGteSchema, decimal.Decimal, int, ],
        'statusCode[in]': typing.Union[StatusCodeInSchema, list, tuple, ],
        'statusCode[isnull]': typing.Union[StatusCodeIsnullSchema, bool, ],
        'statusCode[lt]': typing.Union[StatusCodeLtSchema, decimal.Decimal, int, ],
        'statusCode[lte]': typing.Union[StatusCodeLteSchema, decimal.Decimal, int, ],
        'statusCode[not]': typing.Union[StatusCodeNotSchema, list, tuple, ],
        'statusOmschrijving': typing.Union[StatusOmschrijvingSchema, str, ],
        'statusOmschrijving[in]': typing.Union[StatusOmschrijvingInSchema, list, tuple, ],
        'statusOmschrijving[isempty]': typing.Union[StatusOmschrijvingIsemptySchema, bool, ],
        'statusOmschrijving[isnull]': typing.Union[StatusOmschrijvingIsnullSchema, bool, ],
        'statusOmschrijving[like]': typing.Union[StatusOmschrijvingLikeSchema, str, ],
        'statusOmschrijving[not]': typing.Union[StatusOmschrijvingNotSchema, list, tuple, ],
        'typeAdres': typing.Union[TypeAdresSchema, str, ],
        'typeAdres[in]': typing.Union[TypeAdresInSchema, list, tuple, ],
        'typeAdres[isempty]': typing.Union[TypeAdresIsemptySchema, bool, ],
        'typeAdres[isnull]': typing.Union[TypeAdresIsnullSchema, bool, ],
        'typeAdres[like]': typing.Union[TypeAdresLikeSchema, str, ],
        'typeAdres[not]': typing.Union[TypeAdresNotSchema, list, tuple, ],
        'typeAdresseerbaarObjectCode': typing.Union[TypeAdresseerbaarObjectCodeSchema, decimal.Decimal, int, ],
        'typeAdresseerbaarObjectCode[gt]': typing.Union[TypeAdresseerbaarObjectCodeGtSchema, decimal.Decimal, int, ],
        'typeAdresseerbaarObjectCode[gte]': typing.Union[TypeAdresseerbaarObjectCodeGteSchema, decimal.Decimal, int, ],
        'typeAdresseerbaarObjectCode[in]': typing.Union[TypeAdresseerbaarObjectCodeInSchema, list, tuple, ],
        'typeAdresseerbaarObjectCode[isnull]': typing.Union[TypeAdresseerbaarObjectCodeIsnullSchema, bool, ],
        'typeAdresseerbaarObjectCode[lt]': typing.Union[TypeAdresseerbaarObjectCodeLtSchema, decimal.Decimal, int, ],
        'typeAdresseerbaarObjectCode[lte]': typing.Union[TypeAdresseerbaarObjectCodeLteSchema, decimal.Decimal, int, ],
        'typeAdresseerbaarObjectCode[not]': typing.Union[TypeAdresseerbaarObjectCodeNotSchema, list, tuple, ],
        'typeAdresseerbaarObjectOmschrijving': typing.Union[TypeAdresseerbaarObjectOmschrijvingSchema, str, ],
        'typeAdresseerbaarObjectOmschrijving[in]': typing.Union[TypeAdresseerbaarObjectOmschrijvingInSchema, list, tuple, ],
        'typeAdresseerbaarObjectOmschrijving[isempty]': typing.Union[TypeAdresseerbaarObjectOmschrijvingIsemptySchema, bool, ],
        'typeAdresseerbaarObjectOmschrijving[isnull]': typing.Union[TypeAdresseerbaarObjectOmschrijvingIsnullSchema, bool, ],
        'typeAdresseerbaarObjectOmschrijving[like]': typing.Union[TypeAdresseerbaarObjectOmschrijvingLikeSchema, str, ],
        'typeAdresseerbaarObjectOmschrijving[not]': typing.Union[TypeAdresseerbaarObjectOmschrijvingNotSchema, list, tuple, ],
        'volgnummer': typing.Union[VolgnummerSchema, decimal.Decimal, int, ],
        'volgnummer[gt]': typing.Union[VolgnummerGtSchema, decimal.Decimal, int, ],
        'volgnummer[gte]': typing.Union[VolgnummerGteSchema, decimal.Decimal, int, ],
        'volgnummer[in]': typing.Union[VolgnummerInSchema, list, tuple, ],
        'volgnummer[isnull]': typing.Union[VolgnummerIsnullSchema, bool, ],
        'volgnummer[lt]': typing.Union[VolgnummerLtSchema, decimal.Decimal, int, ],
        'volgnummer[lte]': typing.Union[VolgnummerLteSchema, decimal.Decimal, int, ],
        'volgnummer[not]': typing.Union[VolgnummerNotSchema, list, tuple, ],
    },
    total=False
)


class RequestQueryParams(RequestRequiredQueryParams, RequestOptionalQueryParams):
    pass


request_query_expand = api_client.QueryParameter(
    name="_expand",
    style=api_client.ParameterStyle.FORM,
    schema=ExpandSchema,
    explode=True,
)
request_query_expand_scope = api_client.QueryParameter(
    name="_expandScope",
    style=api_client.ParameterStyle.FORM,
    schema=ExpandScopeSchema,
    explode=True,
)
request_query_fields = api_client.QueryParameter(
    name="_fields",
    style=api_client.ParameterStyle.FORM,
    schema=FieldsSchema,
    explode=True,
)
request_query_format = api_client.QueryParameter(
    name="_format",
    style=api_client.ParameterStyle.FORM,
    schema=FormatSchema,
    explode=True,
)
request_query_sort = api_client.QueryParameter(
    name="_sort",
    style=api_client.ParameterStyle.FORM,
    schema=SortSchema,
    explode=True,
)
request_query_adresseert_ligplaats_identificatie = api_client.QueryParameter(
    name="adresseertLigplaats.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsIdentificatieSchema,
    explode=True,
)
request_query_adresseert_ligplaats_identificatie_in = api_client.QueryParameter(
    name="adresseertLigplaats.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsIdentificatieInSchema,
)
request_query_adresseert_ligplaats_identificatie_isempty = api_client.QueryParameter(
    name="adresseertLigplaats.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsIdentificatieIsemptySchema,
    explode=True,
)
request_query_adresseert_ligplaats_identificatie_isnull = api_client.QueryParameter(
    name="adresseertLigplaats.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsIdentificatieIsnullSchema,
    explode=True,
)
request_query_adresseert_ligplaats_identificatie_like = api_client.QueryParameter(
    name="adresseertLigplaats.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsIdentificatieLikeSchema,
    explode=True,
)
request_query_adresseert_ligplaats_identificatie_not = api_client.QueryParameter(
    name="adresseertLigplaats.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsIdentificatieNotSchema,
    explode=True,
)
request_query_adresseert_ligplaats_volgnummer = api_client.QueryParameter(
    name="adresseertLigplaats.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsVolgnummerSchema,
    explode=True,
)
request_query_adresseert_ligplaats_volgnummer_gt = api_client.QueryParameter(
    name="adresseertLigplaats.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsVolgnummerGtSchema,
    explode=True,
)
request_query_adresseert_ligplaats_volgnummer_gte = api_client.QueryParameter(
    name="adresseertLigplaats.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsVolgnummerGteSchema,
    explode=True,
)
request_query_adresseert_ligplaats_volgnummer_in = api_client.QueryParameter(
    name="adresseertLigplaats.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsVolgnummerInSchema,
)
request_query_adresseert_ligplaats_volgnummer_isnull = api_client.QueryParameter(
    name="adresseertLigplaats.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsVolgnummerIsnullSchema,
    explode=True,
)
request_query_adresseert_ligplaats_volgnummer_lt = api_client.QueryParameter(
    name="adresseertLigplaats.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsVolgnummerLtSchema,
    explode=True,
)
request_query_adresseert_ligplaats_volgnummer_lte = api_client.QueryParameter(
    name="adresseertLigplaats.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsVolgnummerLteSchema,
    explode=True,
)
request_query_adresseert_ligplaats_volgnummer_not = api_client.QueryParameter(
    name="adresseertLigplaats.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertLigplaatsVolgnummerNotSchema,
    explode=True,
)
request_query_adresseert_standplaats_identificatie = api_client.QueryParameter(
    name="adresseertStandplaats.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsIdentificatieSchema,
    explode=True,
)
request_query_adresseert_standplaats_identificatie_in = api_client.QueryParameter(
    name="adresseertStandplaats.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsIdentificatieInSchema,
)
request_query_adresseert_standplaats_identificatie_isempty = api_client.QueryParameter(
    name="adresseertStandplaats.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsIdentificatieIsemptySchema,
    explode=True,
)
request_query_adresseert_standplaats_identificatie_isnull = api_client.QueryParameter(
    name="adresseertStandplaats.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsIdentificatieIsnullSchema,
    explode=True,
)
request_query_adresseert_standplaats_identificatie_like = api_client.QueryParameter(
    name="adresseertStandplaats.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsIdentificatieLikeSchema,
    explode=True,
)
request_query_adresseert_standplaats_identificatie_not = api_client.QueryParameter(
    name="adresseertStandplaats.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsIdentificatieNotSchema,
    explode=True,
)
request_query_adresseert_standplaats_volgnummer = api_client.QueryParameter(
    name="adresseertStandplaats.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsVolgnummerSchema,
    explode=True,
)
request_query_adresseert_standplaats_volgnummer_gt = api_client.QueryParameter(
    name="adresseertStandplaats.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsVolgnummerGtSchema,
    explode=True,
)
request_query_adresseert_standplaats_volgnummer_gte = api_client.QueryParameter(
    name="adresseertStandplaats.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsVolgnummerGteSchema,
    explode=True,
)
request_query_adresseert_standplaats_volgnummer_in = api_client.QueryParameter(
    name="adresseertStandplaats.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsVolgnummerInSchema,
)
request_query_adresseert_standplaats_volgnummer_isnull = api_client.QueryParameter(
    name="adresseertStandplaats.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsVolgnummerIsnullSchema,
    explode=True,
)
request_query_adresseert_standplaats_volgnummer_lt = api_client.QueryParameter(
    name="adresseertStandplaats.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsVolgnummerLtSchema,
    explode=True,
)
request_query_adresseert_standplaats_volgnummer_lte = api_client.QueryParameter(
    name="adresseertStandplaats.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsVolgnummerLteSchema,
    explode=True,
)
request_query_adresseert_standplaats_volgnummer_not = api_client.QueryParameter(
    name="adresseertStandplaats.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertStandplaatsVolgnummerNotSchema,
    explode=True,
)
request_query_adresseert_verblijfsobject_identificatie = api_client.QueryParameter(
    name="adresseertVerblijfsobject.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectIdentificatieSchema,
    explode=True,
)
request_query_adresseert_verblijfsobject_identificatie_in = api_client.QueryParameter(
    name="adresseertVerblijfsobject.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectIdentificatieInSchema,
)
request_query_adresseert_verblijfsobject_identificatie_isempty = api_client.QueryParameter(
    name="adresseertVerblijfsobject.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectIdentificatieIsemptySchema,
    explode=True,
)
request_query_adresseert_verblijfsobject_identificatie_isnull = api_client.QueryParameter(
    name="adresseertVerblijfsobject.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectIdentificatieIsnullSchema,
    explode=True,
)
request_query_adresseert_verblijfsobject_identificatie_like = api_client.QueryParameter(
    name="adresseertVerblijfsobject.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectIdentificatieLikeSchema,
    explode=True,
)
request_query_adresseert_verblijfsobject_identificatie_not = api_client.QueryParameter(
    name="adresseertVerblijfsobject.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectIdentificatieNotSchema,
    explode=True,
)
request_query_adresseert_verblijfsobject_volgnummer = api_client.QueryParameter(
    name="adresseertVerblijfsobject.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectVolgnummerSchema,
    explode=True,
)
request_query_adresseert_verblijfsobject_volgnummer_gt = api_client.QueryParameter(
    name="adresseertVerblijfsobject.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectVolgnummerGtSchema,
    explode=True,
)
request_query_adresseert_verblijfsobject_volgnummer_gte = api_client.QueryParameter(
    name="adresseertVerblijfsobject.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectVolgnummerGteSchema,
    explode=True,
)
request_query_adresseert_verblijfsobject_volgnummer_in = api_client.QueryParameter(
    name="adresseertVerblijfsobject.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectVolgnummerInSchema,
)
request_query_adresseert_verblijfsobject_volgnummer_isnull = api_client.QueryParameter(
    name="adresseertVerblijfsobject.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectVolgnummerIsnullSchema,
    explode=True,
)
request_query_adresseert_verblijfsobject_volgnummer_lt = api_client.QueryParameter(
    name="adresseertVerblijfsobject.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectVolgnummerLtSchema,
    explode=True,
)
request_query_adresseert_verblijfsobject_volgnummer_lte = api_client.QueryParameter(
    name="adresseertVerblijfsobject.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectVolgnummerLteSchema,
    explode=True,
)
request_query_adresseert_verblijfsobject_volgnummer_not = api_client.QueryParameter(
    name="adresseertVerblijfsobject.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=AdresseertVerblijfsobjectVolgnummerNotSchema,
    explode=True,
)
request_query_bagproces_code = api_client.QueryParameter(
    name="bagprocesCode",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeSchema,
    explode=True,
)
request_query_bagproces_code_gt = api_client.QueryParameter(
    name="bagprocesCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeGtSchema,
    explode=True,
)
request_query_bagproces_code_gte = api_client.QueryParameter(
    name="bagprocesCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeGteSchema,
    explode=True,
)
request_query_bagproces_code_in = api_client.QueryParameter(
    name="bagprocesCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeInSchema,
)
request_query_bagproces_code_isnull = api_client.QueryParameter(
    name="bagprocesCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeIsnullSchema,
    explode=True,
)
request_query_bagproces_code_lt = api_client.QueryParameter(
    name="bagprocesCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeLtSchema,
    explode=True,
)
request_query_bagproces_code_lte = api_client.QueryParameter(
    name="bagprocesCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeLteSchema,
    explode=True,
)
request_query_bagproces_code_not = api_client.QueryParameter(
    name="bagprocesCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesCodeNotSchema,
    explode=True,
)
request_query_bagproces_omschrijving = api_client.QueryParameter(
    name="bagprocesOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingSchema,
    explode=True,
)
request_query_bagproces_omschrijving_in = api_client.QueryParameter(
    name="bagprocesOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingInSchema,
)
request_query_bagproces_omschrijving_isempty = api_client.QueryParameter(
    name="bagprocesOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingIsemptySchema,
    explode=True,
)
request_query_bagproces_omschrijving_isnull = api_client.QueryParameter(
    name="bagprocesOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingIsnullSchema,
    explode=True,
)
request_query_bagproces_omschrijving_like = api_client.QueryParameter(
    name="bagprocesOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingLikeSchema,
    explode=True,
)
request_query_bagproces_omschrijving_not = api_client.QueryParameter(
    name="bagprocesOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=BagprocesOmschrijvingNotSchema,
    explode=True,
)
request_query_begin_geldigheid = api_client.QueryParameter(
    name="beginGeldigheid",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidSchema,
    explode=True,
)
request_query_begin_geldigheid_gt = api_client.QueryParameter(
    name="beginGeldigheid[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidGtSchema,
    explode=True,
)
request_query_begin_geldigheid_gte = api_client.QueryParameter(
    name="beginGeldigheid[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidGteSchema,
    explode=True,
)
request_query_begin_geldigheid_in = api_client.QueryParameter(
    name="beginGeldigheid[in]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidInSchema,
)
request_query_begin_geldigheid_isnull = api_client.QueryParameter(
    name="beginGeldigheid[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidIsnullSchema,
    explode=True,
)
request_query_begin_geldigheid_lt = api_client.QueryParameter(
    name="beginGeldigheid[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidLtSchema,
    explode=True,
)
request_query_begin_geldigheid_lte = api_client.QueryParameter(
    name="beginGeldigheid[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidLteSchema,
    explode=True,
)
request_query_begin_geldigheid_not = api_client.QueryParameter(
    name="beginGeldigheid[not]",
    style=api_client.ParameterStyle.FORM,
    schema=BeginGeldigheidNotSchema,
    explode=True,
)
request_query_documentdatum = api_client.QueryParameter(
    name="documentdatum",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumSchema,
    explode=True,
)
request_query_documentdatum_gt = api_client.QueryParameter(
    name="documentdatum[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumGtSchema,
    explode=True,
)
request_query_documentdatum_gte = api_client.QueryParameter(
    name="documentdatum[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumGteSchema,
    explode=True,
)
request_query_documentdatum_in = api_client.QueryParameter(
    name="documentdatum[in]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumInSchema,
)
request_query_documentdatum_isnull = api_client.QueryParameter(
    name="documentdatum[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumIsnullSchema,
    explode=True,
)
request_query_documentdatum_lt = api_client.QueryParameter(
    name="documentdatum[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumLtSchema,
    explode=True,
)
request_query_documentdatum_lte = api_client.QueryParameter(
    name="documentdatum[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumLteSchema,
    explode=True,
)
request_query_documentdatum_not = api_client.QueryParameter(
    name="documentdatum[not]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentdatumNotSchema,
    explode=True,
)
request_query_documentnummer = api_client.QueryParameter(
    name="documentnummer",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerSchema,
    explode=True,
)
request_query_documentnummer_in = api_client.QueryParameter(
    name="documentnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerInSchema,
)
request_query_documentnummer_isempty = api_client.QueryParameter(
    name="documentnummer[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerIsemptySchema,
    explode=True,
)
request_query_documentnummer_isnull = api_client.QueryParameter(
    name="documentnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerIsnullSchema,
    explode=True,
)
request_query_documentnummer_like = api_client.QueryParameter(
    name="documentnummer[like]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerLikeSchema,
    explode=True,
)
request_query_documentnummer_not = api_client.QueryParameter(
    name="documentnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=DocumentnummerNotSchema,
    explode=True,
)
request_query_eind_geldigheid = api_client.QueryParameter(
    name="eindGeldigheid",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidSchema,
    explode=True,
)
request_query_eind_geldigheid_gt = api_client.QueryParameter(
    name="eindGeldigheid[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidGtSchema,
    explode=True,
)
request_query_eind_geldigheid_gte = api_client.QueryParameter(
    name="eindGeldigheid[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidGteSchema,
    explode=True,
)
request_query_eind_geldigheid_in = api_client.QueryParameter(
    name="eindGeldigheid[in]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidInSchema,
)
request_query_eind_geldigheid_isnull = api_client.QueryParameter(
    name="eindGeldigheid[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidIsnullSchema,
    explode=True,
)
request_query_eind_geldigheid_lt = api_client.QueryParameter(
    name="eindGeldigheid[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidLtSchema,
    explode=True,
)
request_query_eind_geldigheid_lte = api_client.QueryParameter(
    name="eindGeldigheid[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidLteSchema,
    explode=True,
)
request_query_eind_geldigheid_not = api_client.QueryParameter(
    name="eindGeldigheid[not]",
    style=api_client.ParameterStyle.FORM,
    schema=EindGeldigheidNotSchema,
    explode=True,
)
request_query_geconstateerd = api_client.QueryParameter(
    name="geconstateerd",
    style=api_client.ParameterStyle.FORM,
    schema=GeconstateerdSchema,
    explode=True,
)
request_query_geconstateerd_isnull = api_client.QueryParameter(
    name="geconstateerd[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GeconstateerdIsnullSchema,
    explode=True,
)
request_query_geldig_op = api_client.QueryParameter(
    name="geldigOp",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpSchema,
    explode=True,
)
request_query_geldig_op_gt = api_client.QueryParameter(
    name="geldigOp[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpGtSchema,
    explode=True,
)
request_query_geldig_op_gte = api_client.QueryParameter(
    name="geldigOp[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpGteSchema,
    explode=True,
)
request_query_geldig_op_in = api_client.QueryParameter(
    name="geldigOp[in]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpInSchema,
    explode=True,
)
request_query_geldig_op_isnull = api_client.QueryParameter(
    name="geldigOp[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpIsnullSchema,
    explode=True,
)
request_query_geldig_op_lt = api_client.QueryParameter(
    name="geldigOp[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpLtSchema,
    explode=True,
)
request_query_geldig_op_lte = api_client.QueryParameter(
    name="geldigOp[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpLteSchema,
    explode=True,
)
request_query_geldig_op_not = api_client.QueryParameter(
    name="geldigOp[not]",
    style=api_client.ParameterStyle.FORM,
    schema=GeldigOpNotSchema,
    explode=True,
)
request_query_heeft_dossier_dossier = api_client.QueryParameter(
    name="heeftDossier.dossier",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierSchema,
    explode=True,
)
request_query_heeft_dossier_dossier_in = api_client.QueryParameter(
    name="heeftDossier.dossier[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierInSchema,
)
request_query_heeft_dossier_dossier_isempty = api_client.QueryParameter(
    name="heeftDossier.dossier[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierIsemptySchema,
    explode=True,
)
request_query_heeft_dossier_dossier_isnull = api_client.QueryParameter(
    name="heeftDossier.dossier[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierIsnullSchema,
    explode=True,
)
request_query_heeft_dossier_dossier_like = api_client.QueryParameter(
    name="heeftDossier.dossier[like]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierLikeSchema,
    explode=True,
)
request_query_heeft_dossier_dossier_not = api_client.QueryParameter(
    name="heeftDossier.dossier[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftDossierDossierNotSchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieSchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie_in = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieInSchema,
)
request_query_heeft_onderzoeken_identificatie_isempty = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieIsemptySchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie_isnull = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieIsnullSchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie_like = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieLikeSchema,
    explode=True,
)
request_query_heeft_onderzoeken_identificatie_not = api_client.QueryParameter(
    name="heeftOnderzoeken.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenIdentificatieNotSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_gt = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerGtSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_gte = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerGteSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_in = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerInSchema,
)
request_query_heeft_onderzoeken_volgnummer_isnull = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerIsnullSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_lt = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerLtSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_lte = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerLteSchema,
    explode=True,
)
request_query_heeft_onderzoeken_volgnummer_not = api_client.QueryParameter(
    name="heeftOnderzoeken.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HeeftOnderzoekenVolgnummerNotSchema,
    explode=True,
)
request_query_huisletter = api_client.QueryParameter(
    name="huisletter",
    style=api_client.ParameterStyle.FORM,
    schema=HuisletterSchema,
    explode=True,
)
request_query_huisletter_in = api_client.QueryParameter(
    name="huisletter[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisletterInSchema,
)
request_query_huisletter_isempty = api_client.QueryParameter(
    name="huisletter[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisletterIsemptySchema,
    explode=True,
)
request_query_huisletter_isnull = api_client.QueryParameter(
    name="huisletter[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisletterIsnullSchema,
    explode=True,
)
request_query_huisletter_like = api_client.QueryParameter(
    name="huisletter[like]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisletterLikeSchema,
    explode=True,
)
request_query_huisletter_not = api_client.QueryParameter(
    name="huisletter[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisletterNotSchema,
    explode=True,
)
request_query_huisnummer = api_client.QueryParameter(
    name="huisnummer",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummerSchema,
    explode=True,
)
request_query_huisnummer_gt = api_client.QueryParameter(
    name="huisnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummerGtSchema,
    explode=True,
)
request_query_huisnummer_gte = api_client.QueryParameter(
    name="huisnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummerGteSchema,
    explode=True,
)
request_query_huisnummer_in = api_client.QueryParameter(
    name="huisnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummerInSchema,
)
request_query_huisnummer_isnull = api_client.QueryParameter(
    name="huisnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummerIsnullSchema,
    explode=True,
)
request_query_huisnummer_lt = api_client.QueryParameter(
    name="huisnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummerLtSchema,
    explode=True,
)
request_query_huisnummer_lte = api_client.QueryParameter(
    name="huisnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummerLteSchema,
    explode=True,
)
request_query_huisnummer_not = api_client.QueryParameter(
    name="huisnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummerNotSchema,
    explode=True,
)
request_query_huisnummertoevoeging = api_client.QueryParameter(
    name="huisnummertoevoeging",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummertoevoegingSchema,
    explode=True,
)
request_query_huisnummertoevoeging_in = api_client.QueryParameter(
    name="huisnummertoevoeging[in]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummertoevoegingInSchema,
)
request_query_huisnummertoevoeging_isempty = api_client.QueryParameter(
    name="huisnummertoevoeging[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummertoevoegingIsemptySchema,
    explode=True,
)
request_query_huisnummertoevoeging_isnull = api_client.QueryParameter(
    name="huisnummertoevoeging[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummertoevoegingIsnullSchema,
    explode=True,
)
request_query_huisnummertoevoeging_like = api_client.QueryParameter(
    name="huisnummertoevoeging[like]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummertoevoegingLikeSchema,
    explode=True,
)
request_query_huisnummertoevoeging_not = api_client.QueryParameter(
    name="huisnummertoevoeging[not]",
    style=api_client.ParameterStyle.FORM,
    schema=HuisnummertoevoegingNotSchema,
    explode=True,
)
request_query_id2 = api_client.QueryParameter(
    name="id",
    style=api_client.ParameterStyle.FORM,
    schema=IdSchema,
    explode=True,
)
request_query_id_in = api_client.QueryParameter(
    name="id[in]",
    style=api_client.ParameterStyle.FORM,
    schema=IdInSchema,
)
request_query_id_isempty = api_client.QueryParameter(
    name="id[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=IdIsemptySchema,
    explode=True,
)
request_query_id_isnull = api_client.QueryParameter(
    name="id[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=IdIsnullSchema,
    explode=True,
)
request_query_id_like = api_client.QueryParameter(
    name="id[like]",
    style=api_client.ParameterStyle.FORM,
    schema=IdLikeSchema,
    explode=True,
)
request_query_id_not = api_client.QueryParameter(
    name="id[not]",
    style=api_client.ParameterStyle.FORM,
    schema=IdNotSchema,
    explode=True,
)
request_query_identificatie = api_client.QueryParameter(
    name="identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieSchema,
    explode=True,
)
request_query_identificatie_in = api_client.QueryParameter(
    name="identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieInSchema,
)
request_query_identificatie_isempty = api_client.QueryParameter(
    name="identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieIsemptySchema,
    explode=True,
)
request_query_identificatie_isnull = api_client.QueryParameter(
    name="identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieIsnullSchema,
    explode=True,
)
request_query_identificatie_like = api_client.QueryParameter(
    name="identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieLikeSchema,
    explode=True,
)
request_query_identificatie_not = api_client.QueryParameter(
    name="identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=IdentificatieNotSchema,
    explode=True,
)
request_query_ligt_aan_openbareruimte_identificatie = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteIdentificatieSchema,
    explode=True,
)
request_query_ligt_aan_openbareruimte_identificatie_in = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteIdentificatieInSchema,
)
request_query_ligt_aan_openbareruimte_identificatie_isempty = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteIdentificatieIsemptySchema,
    explode=True,
)
request_query_ligt_aan_openbareruimte_identificatie_isnull = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteIdentificatieIsnullSchema,
    explode=True,
)
request_query_ligt_aan_openbareruimte_identificatie_like = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteIdentificatieLikeSchema,
    explode=True,
)
request_query_ligt_aan_openbareruimte_identificatie_not = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteIdentificatieNotSchema,
    explode=True,
)
request_query_ligt_aan_openbareruimte_volgnummer = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteVolgnummerSchema,
    explode=True,
)
request_query_ligt_aan_openbareruimte_volgnummer_gt = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteVolgnummerGtSchema,
    explode=True,
)
request_query_ligt_aan_openbareruimte_volgnummer_gte = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteVolgnummerGteSchema,
    explode=True,
)
request_query_ligt_aan_openbareruimte_volgnummer_in = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteVolgnummerInSchema,
)
request_query_ligt_aan_openbareruimte_volgnummer_isnull = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteVolgnummerIsnullSchema,
    explode=True,
)
request_query_ligt_aan_openbareruimte_volgnummer_lt = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteVolgnummerLtSchema,
    explode=True,
)
request_query_ligt_aan_openbareruimte_volgnummer_lte = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteVolgnummerLteSchema,
    explode=True,
)
request_query_ligt_aan_openbareruimte_volgnummer_not = api_client.QueryParameter(
    name="ligtAanOpenbareruimte.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtAanOpenbareruimteVolgnummerNotSchema,
    explode=True,
)
request_query_ligt_in_woonplaats_identificatie = api_client.QueryParameter(
    name="ligtInWoonplaats.identificatie",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsIdentificatieSchema,
    explode=True,
)
request_query_ligt_in_woonplaats_identificatie_in = api_client.QueryParameter(
    name="ligtInWoonplaats.identificatie[in]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsIdentificatieInSchema,
)
request_query_ligt_in_woonplaats_identificatie_isempty = api_client.QueryParameter(
    name="ligtInWoonplaats.identificatie[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsIdentificatieIsemptySchema,
    explode=True,
)
request_query_ligt_in_woonplaats_identificatie_isnull = api_client.QueryParameter(
    name="ligtInWoonplaats.identificatie[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsIdentificatieIsnullSchema,
    explode=True,
)
request_query_ligt_in_woonplaats_identificatie_like = api_client.QueryParameter(
    name="ligtInWoonplaats.identificatie[like]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsIdentificatieLikeSchema,
    explode=True,
)
request_query_ligt_in_woonplaats_identificatie_not = api_client.QueryParameter(
    name="ligtInWoonplaats.identificatie[not]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsIdentificatieNotSchema,
    explode=True,
)
request_query_ligt_in_woonplaats_volgnummer = api_client.QueryParameter(
    name="ligtInWoonplaats.volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsVolgnummerSchema,
    explode=True,
)
request_query_ligt_in_woonplaats_volgnummer_gt = api_client.QueryParameter(
    name="ligtInWoonplaats.volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsVolgnummerGtSchema,
    explode=True,
)
request_query_ligt_in_woonplaats_volgnummer_gte = api_client.QueryParameter(
    name="ligtInWoonplaats.volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsVolgnummerGteSchema,
    explode=True,
)
request_query_ligt_in_woonplaats_volgnummer_in = api_client.QueryParameter(
    name="ligtInWoonplaats.volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsVolgnummerInSchema,
)
request_query_ligt_in_woonplaats_volgnummer_isnull = api_client.QueryParameter(
    name="ligtInWoonplaats.volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsVolgnummerIsnullSchema,
    explode=True,
)
request_query_ligt_in_woonplaats_volgnummer_lt = api_client.QueryParameter(
    name="ligtInWoonplaats.volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsVolgnummerLtSchema,
    explode=True,
)
request_query_ligt_in_woonplaats_volgnummer_lte = api_client.QueryParameter(
    name="ligtInWoonplaats.volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsVolgnummerLteSchema,
    explode=True,
)
request_query_ligt_in_woonplaats_volgnummer_not = api_client.QueryParameter(
    name="ligtInWoonplaats.volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=LigtInWoonplaatsVolgnummerNotSchema,
    explode=True,
)
request_query_postcode = api_client.QueryParameter(
    name="postcode",
    style=api_client.ParameterStyle.FORM,
    schema=PostcodeSchema,
    explode=True,
)
request_query_postcode_in = api_client.QueryParameter(
    name="postcode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=PostcodeInSchema,
)
request_query_postcode_isempty = api_client.QueryParameter(
    name="postcode[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=PostcodeIsemptySchema,
    explode=True,
)
request_query_postcode_isnull = api_client.QueryParameter(
    name="postcode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=PostcodeIsnullSchema,
    explode=True,
)
request_query_postcode_like = api_client.QueryParameter(
    name="postcode[like]",
    style=api_client.ParameterStyle.FORM,
    schema=PostcodeLikeSchema,
    explode=True,
)
request_query_postcode_not = api_client.QueryParameter(
    name="postcode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=PostcodeNotSchema,
    explode=True,
)
request_query_registratiedatum = api_client.QueryParameter(
    name="registratiedatum",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumSchema,
    explode=True,
)
request_query_registratiedatum_gt = api_client.QueryParameter(
    name="registratiedatum[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumGtSchema,
    explode=True,
)
request_query_registratiedatum_gte = api_client.QueryParameter(
    name="registratiedatum[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumGteSchema,
    explode=True,
)
request_query_registratiedatum_in = api_client.QueryParameter(
    name="registratiedatum[in]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumInSchema,
)
request_query_registratiedatum_isnull = api_client.QueryParameter(
    name="registratiedatum[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumIsnullSchema,
    explode=True,
)
request_query_registratiedatum_lt = api_client.QueryParameter(
    name="registratiedatum[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumLtSchema,
    explode=True,
)
request_query_registratiedatum_lte = api_client.QueryParameter(
    name="registratiedatum[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumLteSchema,
    explode=True,
)
request_query_registratiedatum_not = api_client.QueryParameter(
    name="registratiedatum[not]",
    style=api_client.ParameterStyle.FORM,
    schema=RegistratiedatumNotSchema,
    explode=True,
)
request_query_status_code = api_client.QueryParameter(
    name="statusCode",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeSchema,
    explode=True,
)
request_query_status_code_gt = api_client.QueryParameter(
    name="statusCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeGtSchema,
    explode=True,
)
request_query_status_code_gte = api_client.QueryParameter(
    name="statusCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeGteSchema,
    explode=True,
)
request_query_status_code_in = api_client.QueryParameter(
    name="statusCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeInSchema,
)
request_query_status_code_isnull = api_client.QueryParameter(
    name="statusCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeIsnullSchema,
    explode=True,
)
request_query_status_code_lt = api_client.QueryParameter(
    name="statusCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeLtSchema,
    explode=True,
)
request_query_status_code_lte = api_client.QueryParameter(
    name="statusCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeLteSchema,
    explode=True,
)
request_query_status_code_not = api_client.QueryParameter(
    name="statusCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusCodeNotSchema,
    explode=True,
)
request_query_status_omschrijving = api_client.QueryParameter(
    name="statusOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingSchema,
    explode=True,
)
request_query_status_omschrijving_in = api_client.QueryParameter(
    name="statusOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingInSchema,
)
request_query_status_omschrijving_isempty = api_client.QueryParameter(
    name="statusOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingIsemptySchema,
    explode=True,
)
request_query_status_omschrijving_isnull = api_client.QueryParameter(
    name="statusOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingIsnullSchema,
    explode=True,
)
request_query_status_omschrijving_like = api_client.QueryParameter(
    name="statusOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingLikeSchema,
    explode=True,
)
request_query_status_omschrijving_not = api_client.QueryParameter(
    name="statusOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=StatusOmschrijvingNotSchema,
    explode=True,
)
request_query_type_adres = api_client.QueryParameter(
    name="typeAdres",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresSchema,
    explode=True,
)
request_query_type_adres_in = api_client.QueryParameter(
    name="typeAdres[in]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresInSchema,
)
request_query_type_adres_isempty = api_client.QueryParameter(
    name="typeAdres[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresIsemptySchema,
    explode=True,
)
request_query_type_adres_isnull = api_client.QueryParameter(
    name="typeAdres[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresIsnullSchema,
    explode=True,
)
request_query_type_adres_like = api_client.QueryParameter(
    name="typeAdres[like]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresLikeSchema,
    explode=True,
)
request_query_type_adres_not = api_client.QueryParameter(
    name="typeAdres[not]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresNotSchema,
    explode=True,
)
request_query_type_adresseerbaar_object_code = api_client.QueryParameter(
    name="typeAdresseerbaarObjectCode",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectCodeSchema,
    explode=True,
)
request_query_type_adresseerbaar_object_code_gt = api_client.QueryParameter(
    name="typeAdresseerbaarObjectCode[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectCodeGtSchema,
    explode=True,
)
request_query_type_adresseerbaar_object_code_gte = api_client.QueryParameter(
    name="typeAdresseerbaarObjectCode[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectCodeGteSchema,
    explode=True,
)
request_query_type_adresseerbaar_object_code_in = api_client.QueryParameter(
    name="typeAdresseerbaarObjectCode[in]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectCodeInSchema,
)
request_query_type_adresseerbaar_object_code_isnull = api_client.QueryParameter(
    name="typeAdresseerbaarObjectCode[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectCodeIsnullSchema,
    explode=True,
)
request_query_type_adresseerbaar_object_code_lt = api_client.QueryParameter(
    name="typeAdresseerbaarObjectCode[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectCodeLtSchema,
    explode=True,
)
request_query_type_adresseerbaar_object_code_lte = api_client.QueryParameter(
    name="typeAdresseerbaarObjectCode[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectCodeLteSchema,
    explode=True,
)
request_query_type_adresseerbaar_object_code_not = api_client.QueryParameter(
    name="typeAdresseerbaarObjectCode[not]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectCodeNotSchema,
    explode=True,
)
request_query_type_adresseerbaar_object_omschrijving = api_client.QueryParameter(
    name="typeAdresseerbaarObjectOmschrijving",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectOmschrijvingSchema,
    explode=True,
)
request_query_type_adresseerbaar_object_omschrijving_in = api_client.QueryParameter(
    name="typeAdresseerbaarObjectOmschrijving[in]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectOmschrijvingInSchema,
)
request_query_type_adresseerbaar_object_omschrijving_isempty = api_client.QueryParameter(
    name="typeAdresseerbaarObjectOmschrijving[isempty]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectOmschrijvingIsemptySchema,
    explode=True,
)
request_query_type_adresseerbaar_object_omschrijving_isnull = api_client.QueryParameter(
    name="typeAdresseerbaarObjectOmschrijving[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectOmschrijvingIsnullSchema,
    explode=True,
)
request_query_type_adresseerbaar_object_omschrijving_like = api_client.QueryParameter(
    name="typeAdresseerbaarObjectOmschrijving[like]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectOmschrijvingLikeSchema,
    explode=True,
)
request_query_type_adresseerbaar_object_omschrijving_not = api_client.QueryParameter(
    name="typeAdresseerbaarObjectOmschrijving[not]",
    style=api_client.ParameterStyle.FORM,
    schema=TypeAdresseerbaarObjectOmschrijvingNotSchema,
    explode=True,
)
request_query_volgnummer = api_client.QueryParameter(
    name="volgnummer",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerSchema,
    explode=True,
)
request_query_volgnummer_gt = api_client.QueryParameter(
    name="volgnummer[gt]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerGtSchema,
    explode=True,
)
request_query_volgnummer_gte = api_client.QueryParameter(
    name="volgnummer[gte]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerGteSchema,
    explode=True,
)
request_query_volgnummer_in = api_client.QueryParameter(
    name="volgnummer[in]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerInSchema,
)
request_query_volgnummer_isnull = api_client.QueryParameter(
    name="volgnummer[isnull]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerIsnullSchema,
    explode=True,
)
request_query_volgnummer_lt = api_client.QueryParameter(
    name="volgnummer[lt]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerLtSchema,
    explode=True,
)
request_query_volgnummer_lte = api_client.QueryParameter(
    name="volgnummer[lte]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerLteSchema,
    explode=True,
)
request_query_volgnummer_not = api_client.QueryParameter(
    name="volgnummer[not]",
    style=api_client.ParameterStyle.FORM,
    schema=VolgnummerNotSchema,
    explode=True,
)
# Header params
AcceptCrsSchema = schemas.StrSchema
ContentCrsSchema = schemas.StrSchema
RequestRequiredHeaderParams = typing_extensions.TypedDict(
    'RequestRequiredHeaderParams',
    {
    }
)
RequestOptionalHeaderParams = typing_extensions.TypedDict(
    'RequestOptionalHeaderParams',
    {
        'Accept-Crs': typing.Union[AcceptCrsSchema, str, ],
        'Content-Crs': typing.Union[ContentCrsSchema, str, ],
    },
    total=False
)


class RequestHeaderParams(RequestRequiredHeaderParams, RequestOptionalHeaderParams):
    pass


request_header_accept_crs = api_client.HeaderParameter(
    name="Accept-Crs",
    style=api_client.ParameterStyle.SIMPLE,
    schema=AcceptCrsSchema,
)
request_header_content_crs = api_client.HeaderParameter(
    name="Content-Crs",
    style=api_client.ParameterStyle.SIMPLE,
    schema=ContentCrsSchema,
)
# Path params


class IdSchema(
    schemas.StrSchema
):
    pass
RequestRequiredPathParams = typing_extensions.TypedDict(
    'RequestRequiredPathParams',
    {
        'id': typing.Union[IdSchema, str, ],
    }
)
RequestOptionalPathParams = typing_extensions.TypedDict(
    'RequestOptionalPathParams',
    {
    },
    total=False
)


class RequestPathParams(RequestRequiredPathParams, RequestOptionalPathParams):
    pass


request_path_id = api_client.PathParameter(
    name="id",
    style=api_client.ParameterStyle.SIMPLE,
    schema=IdSchema,
    required=True,
)
SchemaFor200ResponseBodyApplicationHaljson = Bagnummeraanduidingen
SchemaFor200ResponseBodyTextCsv = Bagnummeraanduidingen
SchemaFor200ResponseBodyApplicationGeojson = Bagnummeraanduidingen


@dataclass
class ApiResponseFor200(api_client.ApiResponse):
    response: urllib3.HTTPResponse
    body: typing.Union[
        SchemaFor200ResponseBodyApplicationHaljson,
        SchemaFor200ResponseBodyTextCsv,
        SchemaFor200ResponseBodyApplicationGeojson,
    ]
    headers: schemas.Unset = schemas.unset


_response_for_200 = api_client.OpenApiResponse(
    response_cls=ApiResponseFor200,
    content={
        'application/hal+json': api_client.MediaType(
            schema=SchemaFor200ResponseBodyApplicationHaljson),
        'text/csv': api_client.MediaType(
            schema=SchemaFor200ResponseBodyTextCsv),
        'application/geo+json': api_client.MediaType(
            schema=SchemaFor200ResponseBodyApplicationGeojson),
    },
)
_all_accept_content_types = (
    'application/hal+json',
    'text/csv',
    'application/geo+json',
)


class BaseApi(api_client.Api):
    @typing.overload
    def _bag_nummeraanduidingen_retrieve_oapg(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        path_params: RequestPathParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: typing_extensions.Literal[False] = ...,
    ) -> typing.Union[
        ApiResponseFor200,
    ]: ...

    @typing.overload
    def _bag_nummeraanduidingen_retrieve_oapg(
        self,
        skip_deserialization: typing_extensions.Literal[True],
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        path_params: RequestPathParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
    ) -> api_client.ApiResponseWithoutDeserialization: ...

    @typing.overload
    def _bag_nummeraanduidingen_retrieve_oapg(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        path_params: RequestPathParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = ...,
    ) -> typing.Union[
        ApiResponseFor200,
        api_client.ApiResponseWithoutDeserialization,
    ]: ...

    def _bag_nummeraanduidingen_retrieve_oapg(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        path_params: RequestPathParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = False,
    ):
        """
        :param skip_deserialization: If true then api_response.response will be set but
            api_response.body and api_response.headers will not be deserialized into schema
            class instances
        """
        self._verify_typed_dict_inputs_oapg(RequestQueryParams, query_params)
        self._verify_typed_dict_inputs_oapg(RequestHeaderParams, header_params)
        self._verify_typed_dict_inputs_oapg(RequestPathParams, path_params)
        used_path = path.value

        _path_params = {}
        for parameter in (
            request_path_id,
        ):
            parameter_data = path_params.get(parameter.name, schemas.unset)
            if parameter_data is schemas.unset:
                continue
            serialized_data = parameter.serialize(parameter_data)
            _path_params.update(serialized_data)

        for k, v in _path_params.items():
            used_path = used_path.replace('{%s}' % k, v)

        prefix_separator_iterator = None
        for parameter in (
            request_query_expand,
            request_query_expand_scope,
            request_query_fields,
            request_query_format,
            request_query_sort,
            request_query_adresseert_ligplaats_identificatie,
            request_query_adresseert_ligplaats_identificatie_in,
            request_query_adresseert_ligplaats_identificatie_isempty,
            request_query_adresseert_ligplaats_identificatie_isnull,
            request_query_adresseert_ligplaats_identificatie_like,
            request_query_adresseert_ligplaats_identificatie_not,
            request_query_adresseert_ligplaats_volgnummer,
            request_query_adresseert_ligplaats_volgnummer_gt,
            request_query_adresseert_ligplaats_volgnummer_gte,
            request_query_adresseert_ligplaats_volgnummer_in,
            request_query_adresseert_ligplaats_volgnummer_isnull,
            request_query_adresseert_ligplaats_volgnummer_lt,
            request_query_adresseert_ligplaats_volgnummer_lte,
            request_query_adresseert_ligplaats_volgnummer_not,
            request_query_adresseert_standplaats_identificatie,
            request_query_adresseert_standplaats_identificatie_in,
            request_query_adresseert_standplaats_identificatie_isempty,
            request_query_adresseert_standplaats_identificatie_isnull,
            request_query_adresseert_standplaats_identificatie_like,
            request_query_adresseert_standplaats_identificatie_not,
            request_query_adresseert_standplaats_volgnummer,
            request_query_adresseert_standplaats_volgnummer_gt,
            request_query_adresseert_standplaats_volgnummer_gte,
            request_query_adresseert_standplaats_volgnummer_in,
            request_query_adresseert_standplaats_volgnummer_isnull,
            request_query_adresseert_standplaats_volgnummer_lt,
            request_query_adresseert_standplaats_volgnummer_lte,
            request_query_adresseert_standplaats_volgnummer_not,
            request_query_adresseert_verblijfsobject_identificatie,
            request_query_adresseert_verblijfsobject_identificatie_in,
            request_query_adresseert_verblijfsobject_identificatie_isempty,
            request_query_adresseert_verblijfsobject_identificatie_isnull,
            request_query_adresseert_verblijfsobject_identificatie_like,
            request_query_adresseert_verblijfsobject_identificatie_not,
            request_query_adresseert_verblijfsobject_volgnummer,
            request_query_adresseert_verblijfsobject_volgnummer_gt,
            request_query_adresseert_verblijfsobject_volgnummer_gte,
            request_query_adresseert_verblijfsobject_volgnummer_in,
            request_query_adresseert_verblijfsobject_volgnummer_isnull,
            request_query_adresseert_verblijfsobject_volgnummer_lt,
            request_query_adresseert_verblijfsobject_volgnummer_lte,
            request_query_adresseert_verblijfsobject_volgnummer_not,
            request_query_bagproces_code,
            request_query_bagproces_code_gt,
            request_query_bagproces_code_gte,
            request_query_bagproces_code_in,
            request_query_bagproces_code_isnull,
            request_query_bagproces_code_lt,
            request_query_bagproces_code_lte,
            request_query_bagproces_code_not,
            request_query_bagproces_omschrijving,
            request_query_bagproces_omschrijving_in,
            request_query_bagproces_omschrijving_isempty,
            request_query_bagproces_omschrijving_isnull,
            request_query_bagproces_omschrijving_like,
            request_query_bagproces_omschrijving_not,
            request_query_begin_geldigheid,
            request_query_begin_geldigheid_gt,
            request_query_begin_geldigheid_gte,
            request_query_begin_geldigheid_in,
            request_query_begin_geldigheid_isnull,
            request_query_begin_geldigheid_lt,
            request_query_begin_geldigheid_lte,
            request_query_begin_geldigheid_not,
            request_query_documentdatum,
            request_query_documentdatum_gt,
            request_query_documentdatum_gte,
            request_query_documentdatum_in,
            request_query_documentdatum_isnull,
            request_query_documentdatum_lt,
            request_query_documentdatum_lte,
            request_query_documentdatum_not,
            request_query_documentnummer,
            request_query_documentnummer_in,
            request_query_documentnummer_isempty,
            request_query_documentnummer_isnull,
            request_query_documentnummer_like,
            request_query_documentnummer_not,
            request_query_eind_geldigheid,
            request_query_eind_geldigheid_gt,
            request_query_eind_geldigheid_gte,
            request_query_eind_geldigheid_in,
            request_query_eind_geldigheid_isnull,
            request_query_eind_geldigheid_lt,
            request_query_eind_geldigheid_lte,
            request_query_eind_geldigheid_not,
            request_query_geconstateerd,
            request_query_geconstateerd_isnull,
            request_query_geldig_op,
            request_query_geldig_op_gt,
            request_query_geldig_op_gte,
            request_query_geldig_op_in,
            request_query_geldig_op_isnull,
            request_query_geldig_op_lt,
            request_query_geldig_op_lte,
            request_query_geldig_op_not,
            request_query_heeft_dossier_dossier,
            request_query_heeft_dossier_dossier_in,
            request_query_heeft_dossier_dossier_isempty,
            request_query_heeft_dossier_dossier_isnull,
            request_query_heeft_dossier_dossier_like,
            request_query_heeft_dossier_dossier_not,
            request_query_heeft_onderzoeken_identificatie,
            request_query_heeft_onderzoeken_identificatie_in,
            request_query_heeft_onderzoeken_identificatie_isempty,
            request_query_heeft_onderzoeken_identificatie_isnull,
            request_query_heeft_onderzoeken_identificatie_like,
            request_query_heeft_onderzoeken_identificatie_not,
            request_query_heeft_onderzoeken_volgnummer,
            request_query_heeft_onderzoeken_volgnummer_gt,
            request_query_heeft_onderzoeken_volgnummer_gte,
            request_query_heeft_onderzoeken_volgnummer_in,
            request_query_heeft_onderzoeken_volgnummer_isnull,
            request_query_heeft_onderzoeken_volgnummer_lt,
            request_query_heeft_onderzoeken_volgnummer_lte,
            request_query_heeft_onderzoeken_volgnummer_not,
            request_query_huisletter,
            request_query_huisletter_in,
            request_query_huisletter_isempty,
            request_query_huisletter_isnull,
            request_query_huisletter_like,
            request_query_huisletter_not,
            request_query_huisnummer,
            request_query_huisnummer_gt,
            request_query_huisnummer_gte,
            request_query_huisnummer_in,
            request_query_huisnummer_isnull,
            request_query_huisnummer_lt,
            request_query_huisnummer_lte,
            request_query_huisnummer_not,
            request_query_huisnummertoevoeging,
            request_query_huisnummertoevoeging_in,
            request_query_huisnummertoevoeging_isempty,
            request_query_huisnummertoevoeging_isnull,
            request_query_huisnummertoevoeging_like,
            request_query_huisnummertoevoeging_not,
            request_query_id2,
            request_query_id_in,
            request_query_id_isempty,
            request_query_id_isnull,
            request_query_id_like,
            request_query_id_not,
            request_query_identificatie,
            request_query_identificatie_in,
            request_query_identificatie_isempty,
            request_query_identificatie_isnull,
            request_query_identificatie_like,
            request_query_identificatie_not,
            request_query_ligt_aan_openbareruimte_identificatie,
            request_query_ligt_aan_openbareruimte_identificatie_in,
            request_query_ligt_aan_openbareruimte_identificatie_isempty,
            request_query_ligt_aan_openbareruimte_identificatie_isnull,
            request_query_ligt_aan_openbareruimte_identificatie_like,
            request_query_ligt_aan_openbareruimte_identificatie_not,
            request_query_ligt_aan_openbareruimte_volgnummer,
            request_query_ligt_aan_openbareruimte_volgnummer_gt,
            request_query_ligt_aan_openbareruimte_volgnummer_gte,
            request_query_ligt_aan_openbareruimte_volgnummer_in,
            request_query_ligt_aan_openbareruimte_volgnummer_isnull,
            request_query_ligt_aan_openbareruimte_volgnummer_lt,
            request_query_ligt_aan_openbareruimte_volgnummer_lte,
            request_query_ligt_aan_openbareruimte_volgnummer_not,
            request_query_ligt_in_woonplaats_identificatie,
            request_query_ligt_in_woonplaats_identificatie_in,
            request_query_ligt_in_woonplaats_identificatie_isempty,
            request_query_ligt_in_woonplaats_identificatie_isnull,
            request_query_ligt_in_woonplaats_identificatie_like,
            request_query_ligt_in_woonplaats_identificatie_not,
            request_query_ligt_in_woonplaats_volgnummer,
            request_query_ligt_in_woonplaats_volgnummer_gt,
            request_query_ligt_in_woonplaats_volgnummer_gte,
            request_query_ligt_in_woonplaats_volgnummer_in,
            request_query_ligt_in_woonplaats_volgnummer_isnull,
            request_query_ligt_in_woonplaats_volgnummer_lt,
            request_query_ligt_in_woonplaats_volgnummer_lte,
            request_query_ligt_in_woonplaats_volgnummer_not,
            request_query_postcode,
            request_query_postcode_in,
            request_query_postcode_isempty,
            request_query_postcode_isnull,
            request_query_postcode_like,
            request_query_postcode_not,
            request_query_registratiedatum,
            request_query_registratiedatum_gt,
            request_query_registratiedatum_gte,
            request_query_registratiedatum_in,
            request_query_registratiedatum_isnull,
            request_query_registratiedatum_lt,
            request_query_registratiedatum_lte,
            request_query_registratiedatum_not,
            request_query_status_code,
            request_query_status_code_gt,
            request_query_status_code_gte,
            request_query_status_code_in,
            request_query_status_code_isnull,
            request_query_status_code_lt,
            request_query_status_code_lte,
            request_query_status_code_not,
            request_query_status_omschrijving,
            request_query_status_omschrijving_in,
            request_query_status_omschrijving_isempty,
            request_query_status_omschrijving_isnull,
            request_query_status_omschrijving_like,
            request_query_status_omschrijving_not,
            request_query_type_adres,
            request_query_type_adres_in,
            request_query_type_adres_isempty,
            request_query_type_adres_isnull,
            request_query_type_adres_like,
            request_query_type_adres_not,
            request_query_type_adresseerbaar_object_code,
            request_query_type_adresseerbaar_object_code_gt,
            request_query_type_adresseerbaar_object_code_gte,
            request_query_type_adresseerbaar_object_code_in,
            request_query_type_adresseerbaar_object_code_isnull,
            request_query_type_adresseerbaar_object_code_lt,
            request_query_type_adresseerbaar_object_code_lte,
            request_query_type_adresseerbaar_object_code_not,
            request_query_type_adresseerbaar_object_omschrijving,
            request_query_type_adresseerbaar_object_omschrijving_in,
            request_query_type_adresseerbaar_object_omschrijving_isempty,
            request_query_type_adresseerbaar_object_omschrijving_isnull,
            request_query_type_adresseerbaar_object_omschrijving_like,
            request_query_type_adresseerbaar_object_omschrijving_not,
            request_query_volgnummer,
            request_query_volgnummer_gt,
            request_query_volgnummer_gte,
            request_query_volgnummer_in,
            request_query_volgnummer_isnull,
            request_query_volgnummer_lt,
            request_query_volgnummer_lte,
            request_query_volgnummer_not,
        ):
            parameter_data = query_params.get(parameter.name, schemas.unset)
            if parameter_data is schemas.unset:
                continue
            if prefix_separator_iterator is None:
                prefix_separator_iterator = parameter.get_prefix_separator_iterator()
            serialized_data = parameter.serialize(parameter_data, prefix_separator_iterator)
            for serialized_value in serialized_data.values():
                used_path += serialized_value

        _headers = HTTPHeaderDict()
        for parameter in (
            request_header_accept_crs,
            request_header_content_crs,
        ):
            parameter_data = header_params.get(parameter.name, schemas.unset)
            if parameter_data is schemas.unset:
                continue
            serialized_data = parameter.serialize(parameter_data)
            _headers.extend(serialized_data)
        # TODO add cookie handling
        if accept_content_types:
            for accept_content_type in accept_content_types:
                _headers.add('Accept', accept_content_type)

        response = self.api_client.call_api(
            resource_path=used_path,
            method='get'.upper(),
            headers=_headers,
            auth_settings=_auth,
            stream=stream,
            timeout=timeout,
        )

        if skip_deserialization:
            api_response = api_client.ApiResponseWithoutDeserialization(response=response)
        else:
            response_for_status = _status_code_to_response.get(str(response.status))
            if response_for_status:
                api_response = response_for_status.deserialize(response, self.api_client.configuration)
            else:
                api_response = api_client.ApiResponseWithoutDeserialization(response=response)

        if not 200 <= response.status <= 299:
            raise exceptions.ApiException(
                status=response.status,
                reason=response.reason,
                api_response=api_response
            )

        return api_response


class BagNummeraanduidingenRetrieve(BaseApi):
    # this class is used by api classes that refer to endpoints with operationId fn names

    @typing.overload
    def bag_nummeraanduidingen_retrieve(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        path_params: RequestPathParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: typing_extensions.Literal[False] = ...,
    ) -> typing.Union[
        ApiResponseFor200,
    ]: ...

    @typing.overload
    def bag_nummeraanduidingen_retrieve(
        self,
        skip_deserialization: typing_extensions.Literal[True],
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        path_params: RequestPathParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
    ) -> api_client.ApiResponseWithoutDeserialization: ...

    @typing.overload
    def bag_nummeraanduidingen_retrieve(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        path_params: RequestPathParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = ...,
    ) -> typing.Union[
        ApiResponseFor200,
        api_client.ApiResponseWithoutDeserialization,
    ]: ...

    def bag_nummeraanduidingen_retrieve(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        path_params: RequestPathParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = False,
    ):
        return self._bag_nummeraanduidingen_retrieve_oapg(
            query_params=query_params,
            header_params=header_params,
            path_params=path_params,
            accept_content_types=accept_content_types,
            stream=stream,
            timeout=timeout,
            skip_deserialization=skip_deserialization
        )


class ApiForget(BaseApi):
    # this class is used by api classes that refer to endpoints by path and http method names

    @typing.overload
    def get(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        path_params: RequestPathParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: typing_extensions.Literal[False] = ...,
    ) -> typing.Union[
        ApiResponseFor200,
    ]: ...

    @typing.overload
    def get(
        self,
        skip_deserialization: typing_extensions.Literal[True],
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        path_params: RequestPathParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
    ) -> api_client.ApiResponseWithoutDeserialization: ...

    @typing.overload
    def get(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        path_params: RequestPathParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = ...,
    ) -> typing.Union[
        ApiResponseFor200,
        api_client.ApiResponseWithoutDeserialization,
    ]: ...

    def get(
        self,
        query_params: RequestQueryParams = frozendict.frozendict(),
        header_params: RequestHeaderParams = frozendict.frozendict(),
        path_params: RequestPathParams = frozendict.frozendict(),
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        stream: bool = False,
        timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
        skip_deserialization: bool = False,
    ):
        return self._bag_nummeraanduidingen_retrieve_oapg(
            query_params=query_params,
            header_params=header_params,
            path_params=path_params,
            accept_content_types=accept_content_types,
            stream=stream,
            timeout=timeout,
            skip_deserialization=skip_deserialization
        )


