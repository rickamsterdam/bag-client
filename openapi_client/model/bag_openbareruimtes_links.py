# coding: utf-8

"""
    bag

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: datapunt@amsterdam.nl
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class BagOpenbareruimtesLinks(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The contents of the `openbareruimtes._links` field. It contains all relationships with objects.
    """


    class MetaOapg:
        required = {
            "schema",
            "heeftDossier",
            "self",
            "heeftOnderzoeken",
            "ligtInWoonplaats",
        }
        
        class properties:
            schema = schemas.StrSchema
        
            @staticmethod
            def _self() -> typing.Type['BagOpenbareruimtesLink']:
                return BagOpenbareruimtesLink
        
            @staticmethod
            def ligtInWoonplaats() -> typing.Type['BagWoonplaatsenLink']:
                return BagWoonplaatsenLink
        
            @staticmethod
            def heeftDossier() -> typing.Type['BagdossiersLink']:
                return BagdossiersLink
            
            
            class heeftOnderzoeken(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['BagopenbareruimtesHeeftOnderzoekenM2M']:
                        return BagopenbareruimtesHeeftOnderzoekenM2M
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['BagopenbareruimtesHeeftOnderzoekenM2M'], typing.List['BagopenbareruimtesHeeftOnderzoekenM2M']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'heeftOnderzoeken':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'BagopenbareruimtesHeeftOnderzoekenM2M':
                    return super().__getitem__(i)
            __annotations__ = {
                "schema": schema,
                "self": _self,
                "ligtInWoonplaats": ligtInWoonplaats,
                "heeftDossier": heeftDossier,
                "heeftOnderzoeken": heeftOnderzoeken,
            }
    
    schema: MetaOapg.properties.schema
    heeftDossier: 'BagdossiersLink'
    heeftOnderzoeken: MetaOapg.properties.heeftOnderzoeken
    ligtInWoonplaats: 'BagWoonplaatsenLink'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["schema"]) -> MetaOapg.properties.schema: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["self"]) -> 'BagOpenbareruimtesLink': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ligtInWoonplaats"]) -> 'BagWoonplaatsenLink': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["heeftDossier"]) -> 'BagdossiersLink': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["heeftOnderzoeken"]) -> MetaOapg.properties.heeftOnderzoeken: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["schema", "self", "ligtInWoonplaats", "heeftDossier", "heeftOnderzoeken", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["schema"]) -> MetaOapg.properties.schema: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["self"]) -> 'BagOpenbareruimtesLink': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ligtInWoonplaats"]) -> 'BagWoonplaatsenLink': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["heeftDossier"]) -> 'BagdossiersLink': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["heeftOnderzoeken"]) -> MetaOapg.properties.heeftOnderzoeken: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["schema", "self", "ligtInWoonplaats", "heeftDossier", "heeftOnderzoeken", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        schema: typing.Union[MetaOapg.properties.schema, str, ],
        heeftDossier: 'BagdossiersLink',
        heeftOnderzoeken: typing.Union[MetaOapg.properties.heeftOnderzoeken, list, tuple, ],
        ligtInWoonplaats: 'BagWoonplaatsenLink',
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'BagOpenbareruimtesLinks':
        return super().__new__(
            cls,
            *_args,
            schema=schema,
            heeftDossier=heeftDossier,
            heeftOnderzoeken=heeftOnderzoeken,
            ligtInWoonplaats=ligtInWoonplaats,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.bag_openbareruimtes_link import BagOpenbareruimtesLink
from openapi_client.model.bag_woonplaatsen_link import BagWoonplaatsenLink
from openapi_client.model.bagdossiers_link import BagdossiersLink
from openapi_client.model.bagopenbareruimtes_heeft_onderzoeken_m2_m import BagopenbareruimtesHeeftOnderzoekenM2M
