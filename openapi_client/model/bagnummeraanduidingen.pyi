# coding: utf-8

"""
    bag

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: datapunt@amsterdam.nl
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class Bagnummeraanduidingen(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    nummeraanduidingen
    """


    class MetaOapg:
        required = {
            "ligtInWoonplaatsId",
            "identificatie",
            "_links",
            "adresseertLigplaatsId",
            "ligtAanOpenbareruimteId",
            "volgnummer",
            "heeftDossierId",
            "adresseertVerblijfsobjectId",
            "adresseertStandplaatsId",
        }
        
        class properties:
            
            
            class _links(
                schemas.ComposedSchema,
            ):
            
            
                class MetaOapg:
                    
                    @classmethod
                    @functools.lru_cache()
                    def all_of(cls):
                        # we need this here to make our import statements work
                        # we must store _composed_schemas in here so the code is only run
                        # when we invoke this method. If we kept this at the class
                        # level we would get an error because the class level
                        # code would be run when this module is imported, and these composed
                        # classes don't exist yet because their module has not finished
                        # loading
                        return [
                            BagNummeraanduidingenLinks,
                        ]
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                    **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
                ) -> '_links':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                        **kwargs,
                    )
            
            
            class identificatie(
                schemas.StrSchema
            ):
                pass
            
            
            class volgnummer(
                schemas.Int64Schema
            ):
                pass
            
            
            class ligtInWoonplaatsId(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'ligtInWoonplaatsId':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class ligtAanOpenbareruimteId(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'ligtAanOpenbareruimteId':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class adresseertVerblijfsobjectId(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'adresseertVerblijfsobjectId':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class adresseertLigplaatsId(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'adresseertLigplaatsId':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class adresseertStandplaatsId(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'adresseertStandplaatsId':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class heeftDossierId(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'heeftDossierId':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class registratiedatum(
                schemas.DateTimeBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-time'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, datetime, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'registratiedatum':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class huisnummer(
                schemas.Int64Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int64'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'huisnummer':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class geconstateerd(
                schemas.BoolBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneBoolMixin
            ):
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, bool, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'geconstateerd':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class huisletter(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'huisletter':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class huisnummertoevoeging(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'huisnummertoevoeging':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class postcode(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'postcode':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class beginGeldigheid(
                schemas.DateTimeBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-time'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, datetime, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'beginGeldigheid':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class eindGeldigheid(
                schemas.DateTimeBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-time'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, datetime, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'eindGeldigheid':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class typeAdresseerbaarObjectCode(
                schemas.Int64Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int64'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'typeAdresseerbaarObjectCode':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class typeAdresseerbaarObjectOmschrijving(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'typeAdresseerbaarObjectOmschrijving':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class documentdatum(
                schemas.DateBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, date, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'documentdatum':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class documentnummer(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'documentnummer':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class statusCode(
                schemas.Int64Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int64'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'statusCode':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class statusOmschrijving(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'statusOmschrijving':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class typeAdres(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'typeAdres':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class bagprocesCode(
                schemas.Int64Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int64'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'bagprocesCode':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class bagprocesOmschrijving(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'bagprocesOmschrijving':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            __annotations__ = {
                "_links": _links,
                "identificatie": identificatie,
                "volgnummer": volgnummer,
                "ligtInWoonplaatsId": ligtInWoonplaatsId,
                "ligtAanOpenbareruimteId": ligtAanOpenbareruimteId,
                "adresseertVerblijfsobjectId": adresseertVerblijfsobjectId,
                "adresseertLigplaatsId": adresseertLigplaatsId,
                "adresseertStandplaatsId": adresseertStandplaatsId,
                "heeftDossierId": heeftDossierId,
                "registratiedatum": registratiedatum,
                "huisnummer": huisnummer,
                "geconstateerd": geconstateerd,
                "huisletter": huisletter,
                "huisnummertoevoeging": huisnummertoevoeging,
                "postcode": postcode,
                "beginGeldigheid": beginGeldigheid,
                "eindGeldigheid": eindGeldigheid,
                "typeAdresseerbaarObjectCode": typeAdresseerbaarObjectCode,
                "typeAdresseerbaarObjectOmschrijving": typeAdresseerbaarObjectOmschrijving,
                "documentdatum": documentdatum,
                "documentnummer": documentnummer,
                "statusCode": statusCode,
                "statusOmschrijving": statusOmschrijving,
                "typeAdres": typeAdres,
                "bagprocesCode": bagprocesCode,
                "bagprocesOmschrijving": bagprocesOmschrijving,
            }
    
    ligtInWoonplaatsId: MetaOapg.properties.ligtInWoonplaatsId
    identificatie: MetaOapg.properties.identificatie
    _links: MetaOapg.properties._links
    adresseertLigplaatsId: MetaOapg.properties.adresseertLigplaatsId
    ligtAanOpenbareruimteId: MetaOapg.properties.ligtAanOpenbareruimteId
    volgnummer: MetaOapg.properties.volgnummer
    heeftDossierId: MetaOapg.properties.heeftDossierId
    adresseertVerblijfsobjectId: MetaOapg.properties.adresseertVerblijfsobjectId
    adresseertStandplaatsId: MetaOapg.properties.adresseertStandplaatsId
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["_links"]) -> MetaOapg.properties._links: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["identificatie"]) -> MetaOapg.properties.identificatie: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volgnummer"]) -> MetaOapg.properties.volgnummer: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ligtInWoonplaatsId"]) -> MetaOapg.properties.ligtInWoonplaatsId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ligtAanOpenbareruimteId"]) -> MetaOapg.properties.ligtAanOpenbareruimteId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["adresseertVerblijfsobjectId"]) -> MetaOapg.properties.adresseertVerblijfsobjectId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["adresseertLigplaatsId"]) -> MetaOapg.properties.adresseertLigplaatsId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["adresseertStandplaatsId"]) -> MetaOapg.properties.adresseertStandplaatsId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["heeftDossierId"]) -> MetaOapg.properties.heeftDossierId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["registratiedatum"]) -> MetaOapg.properties.registratiedatum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["huisnummer"]) -> MetaOapg.properties.huisnummer: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["geconstateerd"]) -> MetaOapg.properties.geconstateerd: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["huisletter"]) -> MetaOapg.properties.huisletter: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["huisnummertoevoeging"]) -> MetaOapg.properties.huisnummertoevoeging: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["postcode"]) -> MetaOapg.properties.postcode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["beginGeldigheid"]) -> MetaOapg.properties.beginGeldigheid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eindGeldigheid"]) -> MetaOapg.properties.eindGeldigheid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typeAdresseerbaarObjectCode"]) -> MetaOapg.properties.typeAdresseerbaarObjectCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typeAdresseerbaarObjectOmschrijving"]) -> MetaOapg.properties.typeAdresseerbaarObjectOmschrijving: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["documentdatum"]) -> MetaOapg.properties.documentdatum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["documentnummer"]) -> MetaOapg.properties.documentnummer: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statusCode"]) -> MetaOapg.properties.statusCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statusOmschrijving"]) -> MetaOapg.properties.statusOmschrijving: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typeAdres"]) -> MetaOapg.properties.typeAdres: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bagprocesCode"]) -> MetaOapg.properties.bagprocesCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bagprocesOmschrijving"]) -> MetaOapg.properties.bagprocesOmschrijving: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["_links", "identificatie", "volgnummer", "ligtInWoonplaatsId", "ligtAanOpenbareruimteId", "adresseertVerblijfsobjectId", "adresseertLigplaatsId", "adresseertStandplaatsId", "heeftDossierId", "registratiedatum", "huisnummer", "geconstateerd", "huisletter", "huisnummertoevoeging", "postcode", "beginGeldigheid", "eindGeldigheid", "typeAdresseerbaarObjectCode", "typeAdresseerbaarObjectOmschrijving", "documentdatum", "documentnummer", "statusCode", "statusOmschrijving", "typeAdres", "bagprocesCode", "bagprocesOmschrijving", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["_links"]) -> MetaOapg.properties._links: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["identificatie"]) -> MetaOapg.properties.identificatie: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volgnummer"]) -> MetaOapg.properties.volgnummer: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ligtInWoonplaatsId"]) -> MetaOapg.properties.ligtInWoonplaatsId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ligtAanOpenbareruimteId"]) -> MetaOapg.properties.ligtAanOpenbareruimteId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["adresseertVerblijfsobjectId"]) -> MetaOapg.properties.adresseertVerblijfsobjectId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["adresseertLigplaatsId"]) -> MetaOapg.properties.adresseertLigplaatsId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["adresseertStandplaatsId"]) -> MetaOapg.properties.adresseertStandplaatsId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["heeftDossierId"]) -> MetaOapg.properties.heeftDossierId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["registratiedatum"]) -> typing.Union[MetaOapg.properties.registratiedatum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["huisnummer"]) -> typing.Union[MetaOapg.properties.huisnummer, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["geconstateerd"]) -> typing.Union[MetaOapg.properties.geconstateerd, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["huisletter"]) -> typing.Union[MetaOapg.properties.huisletter, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["huisnummertoevoeging"]) -> typing.Union[MetaOapg.properties.huisnummertoevoeging, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["postcode"]) -> typing.Union[MetaOapg.properties.postcode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["beginGeldigheid"]) -> typing.Union[MetaOapg.properties.beginGeldigheid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eindGeldigheid"]) -> typing.Union[MetaOapg.properties.eindGeldigheid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typeAdresseerbaarObjectCode"]) -> typing.Union[MetaOapg.properties.typeAdresseerbaarObjectCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typeAdresseerbaarObjectOmschrijving"]) -> typing.Union[MetaOapg.properties.typeAdresseerbaarObjectOmschrijving, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["documentdatum"]) -> typing.Union[MetaOapg.properties.documentdatum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["documentnummer"]) -> typing.Union[MetaOapg.properties.documentnummer, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statusCode"]) -> typing.Union[MetaOapg.properties.statusCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statusOmschrijving"]) -> typing.Union[MetaOapg.properties.statusOmschrijving, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typeAdres"]) -> typing.Union[MetaOapg.properties.typeAdres, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bagprocesCode"]) -> typing.Union[MetaOapg.properties.bagprocesCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bagprocesOmschrijving"]) -> typing.Union[MetaOapg.properties.bagprocesOmschrijving, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["_links", "identificatie", "volgnummer", "ligtInWoonplaatsId", "ligtAanOpenbareruimteId", "adresseertVerblijfsobjectId", "adresseertLigplaatsId", "adresseertStandplaatsId", "heeftDossierId", "registratiedatum", "huisnummer", "geconstateerd", "huisletter", "huisnummertoevoeging", "postcode", "beginGeldigheid", "eindGeldigheid", "typeAdresseerbaarObjectCode", "typeAdresseerbaarObjectOmschrijving", "documentdatum", "documentnummer", "statusCode", "statusOmschrijving", "typeAdres", "bagprocesCode", "bagprocesOmschrijving", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        ligtInWoonplaatsId: typing.Union[MetaOapg.properties.ligtInWoonplaatsId, None, str, ],
        identificatie: typing.Union[MetaOapg.properties.identificatie, str, ],
        _links: typing.Union[MetaOapg.properties._links, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        adresseertLigplaatsId: typing.Union[MetaOapg.properties.adresseertLigplaatsId, None, str, ],
        ligtAanOpenbareruimteId: typing.Union[MetaOapg.properties.ligtAanOpenbareruimteId, None, str, ],
        volgnummer: typing.Union[MetaOapg.properties.volgnummer, decimal.Decimal, int, ],
        heeftDossierId: typing.Union[MetaOapg.properties.heeftDossierId, None, str, ],
        adresseertVerblijfsobjectId: typing.Union[MetaOapg.properties.adresseertVerblijfsobjectId, None, str, ],
        adresseertStandplaatsId: typing.Union[MetaOapg.properties.adresseertStandplaatsId, None, str, ],
        registratiedatum: typing.Union[MetaOapg.properties.registratiedatum, None, str, datetime, schemas.Unset] = schemas.unset,
        huisnummer: typing.Union[MetaOapg.properties.huisnummer, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        geconstateerd: typing.Union[MetaOapg.properties.geconstateerd, None, bool, schemas.Unset] = schemas.unset,
        huisletter: typing.Union[MetaOapg.properties.huisletter, None, str, schemas.Unset] = schemas.unset,
        huisnummertoevoeging: typing.Union[MetaOapg.properties.huisnummertoevoeging, None, str, schemas.Unset] = schemas.unset,
        postcode: typing.Union[MetaOapg.properties.postcode, None, str, schemas.Unset] = schemas.unset,
        beginGeldigheid: typing.Union[MetaOapg.properties.beginGeldigheid, None, str, datetime, schemas.Unset] = schemas.unset,
        eindGeldigheid: typing.Union[MetaOapg.properties.eindGeldigheid, None, str, datetime, schemas.Unset] = schemas.unset,
        typeAdresseerbaarObjectCode: typing.Union[MetaOapg.properties.typeAdresseerbaarObjectCode, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        typeAdresseerbaarObjectOmschrijving: typing.Union[MetaOapg.properties.typeAdresseerbaarObjectOmschrijving, None, str, schemas.Unset] = schemas.unset,
        documentdatum: typing.Union[MetaOapg.properties.documentdatum, None, str, date, schemas.Unset] = schemas.unset,
        documentnummer: typing.Union[MetaOapg.properties.documentnummer, None, str, schemas.Unset] = schemas.unset,
        statusCode: typing.Union[MetaOapg.properties.statusCode, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        statusOmschrijving: typing.Union[MetaOapg.properties.statusOmschrijving, None, str, schemas.Unset] = schemas.unset,
        typeAdres: typing.Union[MetaOapg.properties.typeAdres, None, str, schemas.Unset] = schemas.unset,
        bagprocesCode: typing.Union[MetaOapg.properties.bagprocesCode, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        bagprocesOmschrijving: typing.Union[MetaOapg.properties.bagprocesOmschrijving, None, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Bagnummeraanduidingen':
        return super().__new__(
            cls,
            *_args,
            ligtInWoonplaatsId=ligtInWoonplaatsId,
            identificatie=identificatie,
            _links=_links,
            adresseertLigplaatsId=adresseertLigplaatsId,
            ligtAanOpenbareruimteId=ligtAanOpenbareruimteId,
            volgnummer=volgnummer,
            heeftDossierId=heeftDossierId,
            adresseertVerblijfsobjectId=adresseertVerblijfsobjectId,
            adresseertStandplaatsId=adresseertStandplaatsId,
            registratiedatum=registratiedatum,
            huisnummer=huisnummer,
            geconstateerd=geconstateerd,
            huisletter=huisletter,
            huisnummertoevoeging=huisnummertoevoeging,
            postcode=postcode,
            beginGeldigheid=beginGeldigheid,
            eindGeldigheid=eindGeldigheid,
            typeAdresseerbaarObjectCode=typeAdresseerbaarObjectCode,
            typeAdresseerbaarObjectOmschrijving=typeAdresseerbaarObjectOmschrijving,
            documentdatum=documentdatum,
            documentnummer=documentnummer,
            statusCode=statusCode,
            statusOmschrijving=statusOmschrijving,
            typeAdres=typeAdres,
            bagprocesCode=bagprocesCode,
            bagprocesOmschrijving=bagprocesOmschrijving,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.bag_nummeraanduidingen_links import BagNummeraanduidingenLinks
