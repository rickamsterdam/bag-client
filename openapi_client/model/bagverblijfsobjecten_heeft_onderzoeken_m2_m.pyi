# coding: utf-8

"""
    bag

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: datapunt@amsterdam.nl
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class BagverblijfsobjectenHeeftOnderzoekenM2M(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The M2M table for `Verblijfsobjecten.heeftOnderzoeken` that links to `Onderzoeken`
    """


    class MetaOapg:
        required = {
            "href",
            "title",
        }
        
        class properties:
            href = schemas.StrSchema
            title = schemas.StrSchema
            
            
            class identificatie(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'identificatie':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class volgnummer(
                schemas.Int64Base,
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                class MetaOapg:
                    format = 'int64'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'volgnummer':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class beginGeldigheid(
                schemas.DateTimeBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-time'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, datetime, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'beginGeldigheid':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            
            
            class eindGeldigheid(
                schemas.DateTimeBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-time'
            
            
                def __new__(
                    cls,
                    *_args: typing.Union[None, str, datetime, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'eindGeldigheid':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                    )
            __annotations__ = {
                "href": href,
                "title": title,
                "identificatie": identificatie,
                "volgnummer": volgnummer,
                "beginGeldigheid": beginGeldigheid,
                "eindGeldigheid": eindGeldigheid,
            }
    
    href: MetaOapg.properties.href
    title: MetaOapg.properties.title
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["href"]) -> MetaOapg.properties.href: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["identificatie"]) -> MetaOapg.properties.identificatie: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volgnummer"]) -> MetaOapg.properties.volgnummer: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["beginGeldigheid"]) -> MetaOapg.properties.beginGeldigheid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eindGeldigheid"]) -> MetaOapg.properties.eindGeldigheid: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["href", "title", "identificatie", "volgnummer", "beginGeldigheid", "eindGeldigheid", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["href"]) -> MetaOapg.properties.href: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["identificatie"]) -> typing.Union[MetaOapg.properties.identificatie, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volgnummer"]) -> typing.Union[MetaOapg.properties.volgnummer, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["beginGeldigheid"]) -> typing.Union[MetaOapg.properties.beginGeldigheid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eindGeldigheid"]) -> typing.Union[MetaOapg.properties.eindGeldigheid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["href", "title", "identificatie", "volgnummer", "beginGeldigheid", "eindGeldigheid", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        href: typing.Union[MetaOapg.properties.href, str, ],
        title: typing.Union[MetaOapg.properties.title, str, ],
        identificatie: typing.Union[MetaOapg.properties.identificatie, None, str, schemas.Unset] = schemas.unset,
        volgnummer: typing.Union[MetaOapg.properties.volgnummer, None, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        beginGeldigheid: typing.Union[MetaOapg.properties.beginGeldigheid, None, str, datetime, schemas.Unset] = schemas.unset,
        eindGeldigheid: typing.Union[MetaOapg.properties.eindGeldigheid, None, str, datetime, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'BagverblijfsobjectenHeeftOnderzoekenM2M':
        return super().__new__(
            cls,
            *_args,
            href=href,
            title=title,
            identificatie=identificatie,
            volgnummer=volgnummer,
            beginGeldigheid=beginGeldigheid,
            eindGeldigheid=eindGeldigheid,
            _configuration=_configuration,
            **kwargs,
        )
