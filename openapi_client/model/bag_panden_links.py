# coding: utf-8

"""
    bag

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: datapunt@amsterdam.nl
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class BagPandenLinks(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The contents of the `panden._links` field. It contains all relationships with objects.
    """


    class MetaOapg:
        required = {
            "schema",
            "ligtInBouwblok",
            "heeftDossier",
            "ligtInBuurt",
            "self",
            "bevatVerblijfsobjecten",
            "heeftOnderzoeken",
        }
        
        class properties:
            schema = schemas.StrSchema
        
            @staticmethod
            def _self() -> typing.Type['BagPandenLink']:
                return BagPandenLink
            
            
            class bevatVerblijfsobjecten(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['BagVerblijfsobjectenLink']:
                        return BagVerblijfsobjectenLink
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['BagVerblijfsobjectenLink'], typing.List['BagVerblijfsobjectenLink']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'bevatVerblijfsobjecten':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'BagVerblijfsobjectenLink':
                    return super().__getitem__(i)
        
            @staticmethod
            def ligtInBouwblok() -> typing.Type['GebiedenBouwblokkenLink']:
                return GebiedenBouwblokkenLink
        
            @staticmethod
            def ligtInBuurt() -> typing.Type['GebiedenBuurtenLink']:
                return GebiedenBuurtenLink
        
            @staticmethod
            def heeftDossier() -> typing.Type['BagdossiersLink']:
                return BagdossiersLink
            
            
            class heeftOnderzoeken(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['BagpandenHeeftOnderzoekenM2M']:
                        return BagpandenHeeftOnderzoekenM2M
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['BagpandenHeeftOnderzoekenM2M'], typing.List['BagpandenHeeftOnderzoekenM2M']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'heeftOnderzoeken':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'BagpandenHeeftOnderzoekenM2M':
                    return super().__getitem__(i)
            __annotations__ = {
                "schema": schema,
                "self": _self,
                "bevatVerblijfsobjecten": bevatVerblijfsobjecten,
                "ligtInBouwblok": ligtInBouwblok,
                "ligtInBuurt": ligtInBuurt,
                "heeftDossier": heeftDossier,
                "heeftOnderzoeken": heeftOnderzoeken,
            }
    
    schema: MetaOapg.properties.schema
    ligtInBouwblok: 'GebiedenBouwblokkenLink'
    heeftDossier: 'BagdossiersLink'
    ligtInBuurt: 'GebiedenBuurtenLink'
    bevatVerblijfsobjecten: MetaOapg.properties.bevatVerblijfsobjecten
    heeftOnderzoeken: MetaOapg.properties.heeftOnderzoeken
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["schema"]) -> MetaOapg.properties.schema: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["self"]) -> 'BagPandenLink': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bevatVerblijfsobjecten"]) -> MetaOapg.properties.bevatVerblijfsobjecten: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ligtInBouwblok"]) -> 'GebiedenBouwblokkenLink': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ligtInBuurt"]) -> 'GebiedenBuurtenLink': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["heeftDossier"]) -> 'BagdossiersLink': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["heeftOnderzoeken"]) -> MetaOapg.properties.heeftOnderzoeken: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["schema", "self", "bevatVerblijfsobjecten", "ligtInBouwblok", "ligtInBuurt", "heeftDossier", "heeftOnderzoeken", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["schema"]) -> MetaOapg.properties.schema: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["self"]) -> 'BagPandenLink': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bevatVerblijfsobjecten"]) -> MetaOapg.properties.bevatVerblijfsobjecten: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ligtInBouwblok"]) -> 'GebiedenBouwblokkenLink': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ligtInBuurt"]) -> 'GebiedenBuurtenLink': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["heeftDossier"]) -> 'BagdossiersLink': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["heeftOnderzoeken"]) -> MetaOapg.properties.heeftOnderzoeken: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["schema", "self", "bevatVerblijfsobjecten", "ligtInBouwblok", "ligtInBuurt", "heeftDossier", "heeftOnderzoeken", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        schema: typing.Union[MetaOapg.properties.schema, str, ],
        ligtInBouwblok: 'GebiedenBouwblokkenLink',
        heeftDossier: 'BagdossiersLink',
        ligtInBuurt: 'GebiedenBuurtenLink',
        bevatVerblijfsobjecten: typing.Union[MetaOapg.properties.bevatVerblijfsobjecten, list, tuple, ],
        heeftOnderzoeken: typing.Union[MetaOapg.properties.heeftOnderzoeken, list, tuple, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'BagPandenLinks':
        return super().__new__(
            cls,
            *_args,
            schema=schema,
            ligtInBouwblok=ligtInBouwblok,
            heeftDossier=heeftDossier,
            ligtInBuurt=ligtInBuurt,
            bevatVerblijfsobjecten=bevatVerblijfsobjecten,
            heeftOnderzoeken=heeftOnderzoeken,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.bag_panden_link import BagPandenLink
from openapi_client.model.bag_verblijfsobjecten_link import BagVerblijfsobjectenLink
from openapi_client.model.bagdossiers_link import BagdossiersLink
from openapi_client.model.bagpanden_heeft_onderzoeken_m2_m import BagpandenHeeftOnderzoekenM2M
from openapi_client.model.gebieden_bouwblokken_link import GebiedenBouwblokkenLink
from openapi_client.model.gebieden_buurten_link import GebiedenBuurtenLink
